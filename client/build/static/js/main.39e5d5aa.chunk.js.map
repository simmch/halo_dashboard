{"version":3,"sources":["assets/images/spinner.gif","app/reducers/auth.js","app/reducers/alerts.js","app/reducers/upload.js","app/reducers/paydates.js","app/reducers/payroll.js","app/reducers/associate.js","app/reducers/index.js","app/actionTypes/types.js","app/store.js","app/components/utils/index.js","app/components/widgets/widget_1.js","app/components/routing/PrivateRoute.js","app/components/widgets/widget_2.js","app/components/widgets/widget_3.js","app/components/widgets/widget_4.js","app/components/isLoading/spinner.js","app/components/widgets/empTable.js","app/components/dashboard/landing.js","app/utils/auth/setAuthToken.js","app/actions/alerts.js","app/actions/auth/auth.js","app/components/alerts/alerts.js","app/components/auth/login.js","app/components/auth/register.js","app/components/upload/upload.js","app/actions/upload/upload.js","app/actions/payroll/payroll.js","app/components/widgets/empSearchTable.js","app/components/widgets/empPrimaryData.js","app/components/employees/employees.js","app/actions/paydates/paydates.js","app/components/navigation/paydateDropdown/paydateDropdown.js","app/components/navigation/payrollSearch/payrollSearch.js","app/components/navigation/navbar.js","app/components/navigation/sidebar.js","app/actions/associate/associate.js","app/components/newrecord/state/index.js","app/components/newrecord/newpaydate.js","app/components/newrecord/newrecord.js","app/components/newassociate/newassociate.js","app/components/newassociate/state/index.js","app/App.js","app/serviceWorker.js","index.js","assets/images/halo_logo.png"],"names":["module","exports","initialState","token","localStorage","getItem","isAuthenticated","loading","user","msg","alertType","payrollData","alert","associate","combineReducers","auth","state","action","type","payload","setItem","removeItem","upload","paydates","payroll","middleWare","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","columns","text","dataField","sort","formatter","cellContent","row","className","editor","connect","withRouter","Component","component","rest","history","render","props","isLogin","to","reg","map","hrs","REG_HRS","sumRegHrs","reduce","a","b","Math","round","aria-hidden","SCH_HRS","sumSchHrs","BNS_HRS","sumBnsHrs","UNVH","sumUNVH","Spinner","alt","src","spinner","style","width","margin","display","position","right","SearchBar","Search","ExportCSVButton","CSVExport","defaultSorted","order","keyField","bootstrap4","data","search","exportCSV","csvProps","searchProps","pagination","paginationFactory","baseProps","wrapperClasses","useEffect","push","setAuthToken","axios","defaults","headers","common","removeAlert","dispatch","loadUser","get","res","logout","Alert","variant","login","email","password","config","body","JSON","stringify","post","error","response","errors","useState","loginData","setLoginData","onSubmit","e","preventDefault","onChange","target","name","value","require","Form","Group","Control","placeholder","size","register","success","registerData","setRegisterData","isLoading","uploadFile","file","console","log","selectedFile","fileName","uploadData","setUploadData","File","id","custom","Input","files","Label","data-browse","onClick","FormData","append","deleteById","delete","updateById","put","show","confirm","setConfirm","onClickHandlerDelete","find","_id","onClickHandlerUpdate","Modal","onHide","aria-labelledby","Header","closeButton","Title","Body","Footer","Button","cellEdit","cellEditFactory","mode","striped","editButton","setEditButton","hidden","saveDate","date","getPayrollByDate","selectedDate","setSelectedDate","onClickHandler","listDates","record","item","Dropdown","Item","PAYDATE","key","Toggle","Menu","getPayrollById","empId","setEmpId","onKeyPress","loadDates","location","searchHandler","pathname","document","classList","toggle","as","alignRight","toUpperCase","Divider","href","evt","querySelector","menuState","setMenuState","onRouteChanged","remove","Object","keys","forEach","i","path","obj","isPathActive","startsWith","querySelectorAll","el","addEventListener","contains","add","loadAssociates","saveAssociate","ID","FIRSTNAME","LASTNAME","WRKD_FLG","HRS_VER_FLG","BNS_FLG","TIMESHEET_FLG","PICKUP_PAY_FLG","ADJ_FLG","ADJUSTMENT","SP_RATE","NOTES","VRF_HRS","TS_HRS","SUP","SDP","BNS_RATE","BNS_HRS_B","BNS_RATE_B","BNS_HR_C","BNS_RATE_C","BNS_HR_D","BNS_RATE_D","UPDATED","moment","format","dateInitialState","NEWPAYDATE","deletePayDate","options","setDate","deleteDate","setDeleteDate","label","noValidate","Row","Col","md","controlId","required","Feedback","labelKey","undefined","saveNewRecord","setData","POSITION","associateSelector","onChangeHandler","disabled","minLength","deleteAssociate","deleteAssociateData","setDeleteAssociateData","App","Sidebar","Navbar","exact","Login","Register","Landing","Upload","Employees","NewRecord","NewAssociate","Boolean","window","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.39e5d5aa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.2cfe9ab9.gif\";","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n} from \"../actionTypes/types\";\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: null,\n  loading: true,\n  user: null,\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case USER_LOADED:\n      return { ...state, isAuthenticated: true, loading: false, user: payload };\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      localStorage.setItem(\"token\", payload.token);\n      return { ...state, ...payload, isAuthenticated: true, loading: false };\n    case REGISTER_FAIL:\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT:\n      localStorage.removeItem(\"token\");\n      return { ...state, token: null, isAuthenticated: false, loading: false };\n    default:\n      return initialState;\n  }\n}\n","import { SET_SUCCESS_ALERT, SET_ERROR_ALERT, REMOVE_ALERT } from \"../actionTypes/types\";\n\nconst initialState = {\n    msg: null,\n    alertType: null,\n};\n\nexport default function (state = initialState, action) {\n    const { type, payload } = action;\n    switch (type) {\n        case SET_SUCCESS_ALERT:\n            return { ...state, msg: payload, alertType: \"success\" };\n        case SET_ERROR_ALERT:\n            return { ...state, msg: payload, alertType: \"danger\" };\n        case REMOVE_ALERT:\n            return { ...state, msg: null, alertType: null };\n        default:\n            return state;\n    }\n}","import { UPLOAD_FILE } from '../actionTypes/types';\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n    const { type, payload } = action;\n    switch (type) {\n        case UPLOAD_FILE:\n            return { ...state, payload }\n        default:\n            return state;\n    }\n}","import { GET_PAY_DATES } from '../actionTypes/types';\n\nconst initialState = [];\n\nexport default function (state = initialState, action) {\n    const { type, payload } = action;\n    switch (type) {\n        case GET_PAY_DATES:\n            return [...state, payload];\n        default:\n            return state;\n    }\n}","import {\n    GET_ALL_DATA,\n    GET_DATA_BY_DATE,\n    GET_DATA_BY_ID,\n    SAVE_NEW_RECORD,\n    // DELETE_DATA_BY_DATE,\n    DELETE_DATA_BY_ID\n} from '../actionTypes/types';\n\nconst initialState = {\n    payrollData: [],\n    loading: true,\n    alert: []\n}\n\nexport default function (state = initialState, action) {\n    const { type, payload } = action;\n    switch (type) {\n        case GET_ALL_DATA:\n        case GET_DATA_BY_ID:\n        case GET_DATA_BY_DATE:\n            return { ...state, payrollData: payload, loading: false }\n        case SAVE_NEW_RECORD:\n            return { ...state, alert: payload }\n        case DELETE_DATA_BY_ID:\n            return { ...state, alert: payload }\n        default:\n            return state;\n    }\n}","import {\n    GET_ALL_ASSOCIATES,\n    GET_ASSOCIATE_BY_ID,\n    SAVE_NEW_ASSOCIATE,\n    DELETE_ASSOCIATE_BY_ID\n} from '../actionTypes/types';\n\nconst initialState = {\n    associate: [],\n    loading: true,\n    alert: []\n}\n\nexport default function (state = initialState, action) {\n    const { type, payload } = action;\n    switch (type) {\n        case GET_ALL_ASSOCIATES:\n        case GET_ASSOCIATE_BY_ID:\n            return { ...state, associate: payload, loading: false }\n        case SAVE_NEW_ASSOCIATE:\n            return { ...state, alert: payload }\n        case DELETE_ASSOCIATE_BY_ID:\n            return { ...state, alert: payload }\n        default:\n            return state;\n    }\n}","import { combineReducers } from \"redux\";\nimport auth from \"./auth\";\nimport alert from \"./alerts\";\nimport upload from \"./upload\";\nimport paydates from \"./paydates\";\nimport payroll from \"./payroll\";\nimport associate from \"./associate\"\n\nexport default combineReducers({\n  auth,\n  alert,\n  upload,\n  paydates,\n  payroll,\n  associate\n});\n","export const SET_SUCCESS_ALERT = \"SET_SUCCESS_ALERT\";\nexport const SET_ERROR_ALERT = \"SET_ERROR_ALERT\";\nexport const REMOVE_ALERT = \"REMOVE_ALERT\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\nexport const GET_PROFILE = \"GET_PROFILE\";\nexport const PROFILE_ERROR = \"PROFILE_ERROR\";\nexport const CLEAR_PROFILE = \"CLEAR_PROFILE\";\nexport const UPDATE_PROFILE = \"UPDATE_PROFILE\";\nexport const UPLOAD_FILE = \"UPLOAD_FILE\";\nexport const GET_PAY_DATES = \"GET_PAY_DATES\";\n\nexport const GET_DATA_BY_DATE = \"GET_DATA_BY_DATE\";\nexport const GET_DATA_BY_ID = \"GET_DATA_BY_ID\";\nexport const GET_ALL_DATA = \"GET_ALL_DATA\";\nexport const DELETE_DATA_BY_DATE = \"DELETE_DATA_BY_DATE\";\nexport const DELETE_DATA_BY_ID = \"DELETE_DATA_BY_ID\";\nexport const SAVE_NEW_RECORD = \"SAVE_NEW_RECORD\";\n\nexport const SAVE_NEW_ASSOCIATE = \"SAVE_NEW_ASSOCIATE\";\nexport const DELETE_ASSOCIATE_BY_ID = \"DELETE_ASSOCIATE_BY_ID\";\nexport const GET_ALL_ASSOCIATES = \"GET_ALL_ASSOCIATES\";\nexport const GET_ASSOCIATE_BY_ID = \"GET_ASSOCIATE_BY_ID\";\nexport const UPDATE_ASSOCIATE = \"UPDATE_ASSOCIATE\";\n\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers/index\";\n\nconst initialState = {};\n\nconst middleWare = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleWare))\n);\n\nexport default store;\n","import React from 'react';\n\nexport const isLogin = () => {\n    if (localStorage.token) {\n        return true\n    }\n}\n\nexport const columns = [{\n    text: 'ID',\n    dataField: 'ID',\n    sort: true,\n}, {\n    text: 'Position',\n    dataField: 'POSITION',\n    sort: true,\n    formatter: (cellContent, row) => {\n        if (cellContent === 0) {\n            return (\n                <label>HHA</label>\n            );\n        } else if (cellContent === 1) {\n            return (\n                <label>DSP</label>\n            );\n        } else if (cellContent === 2) {\n            return (\n                <label>Office</label>\n            );\n        } else if (cellContent === 3) {\n            return (\n                <label>Admin</label>\n            );\n        }\n    }\n}, {\n    text: 'First Name',\n    dataField: 'FIRSTNAME',\n    sort: true\n}, {\n    text: 'Last Name',\n    dataField: 'LASTNAME',\n    sort: true\n}, {\n    text: 'Worked Flag',\n    dataField: 'WRKD_FLG',\n    sort: true,\n    formatter: (cellContent, row) => {\n        if (cellContent === 'X') {\n            return (\n                <label className=\"badge badge-success\">WORKED</label>\n            );\n        }\n    },\n    editor: true\n}, {\n    text: 'Hours Verified Flag',\n    dataField: 'HRS_VER_FLG',\n    sort: true,\n    formatter: (cellContent, row) => {\n        if (cellContent === 'V') {\n            return (\n                <label className=\"badge badge-success\">VERIFIED</label>\n            );\n        } else if (cellContent === 'U') {\n            return (\n                <label className=\"badge badge-danger\">UNVERIFIED</label>\n            );\n        }\n    }\n}, {\n    text: 'Bonus Flag',\n    dataField: 'BNS_FLG',\n    sort: true,\n    formatter: (cellContent, row) => {\n        if (cellContent === 'B' || '') {\n            return (\n                <label className=\"badge badge-success\">BONUS</label>\n            );\n        }\n    }\n}, {\n    text: 'Timesheet Flag',\n    dataField: 'TIMESHEET_FLG',\n    sort: true,\n    formatter: (cellContent, row) => {\n        if (cellContent === 'N/A') {\n            return (\n                <label className=\"badge badge-info\">TIMESHEET</label>\n            );\n        } else {\n            return (\n                <label></label>\n            );\n        }\n    }\n}, {\n    text: 'Pickup Pay Flag',\n    dataField: 'PICKUP_PAY_FLG',\n    sort: true,\n    formatter: (cellContent, row) => {\n        if (cellContent === 'N/A') {\n            return (\n                <label className=\"badge badge-primary\">PICKUP PAY</label>\n            );\n        } else {\n            return (\n                <label></label>\n            );\n        }\n    }\n}, {\n    text: 'Adjustment Flag',\n    dataField: 'ADJ_FLG',\n    sort: true,\n    formatter: (cellContent, row) => {\n        if (cellContent === 'N/A') {\n            return (\n                <label className=\"badge badge-dark\">ADJUSTMENT</label>\n            );\n        } else {\n            return (\n                <label></label>\n            );\n        }\n    }\n}, {\n    text: 'Adjustment',\n    dataField: 'ADJUSTMENT',\n    sort: true\n}, {\n    text: 'Special Rate',\n    dataField: 'SP_RATE',\n    sort: true\n}, {\n    text: 'Notes',\n    dataField: 'NOTES',\n    sort: true\n}, {\n    text: 'Regular Hours',\n    dataField: 'REG_HRS',\n    sort: true\n}, {\n    text: 'Scheduled Hours',\n    dataField: 'SCH_HRS',\n    sort: true\n}, {\n    text: 'Unverfied Hours',\n    dataField: 'UNVH',\n    sort: true\n}, {\n    text: 'Verified Hours',\n    dataField: 'VRF_HRS',\n    sort: true\n}, {\n    text: 'Timesheet Hours',\n    dataField: 'TS_HRS',\n    sort: true\n}, {\n    text: 'Show Up Pay',\n    dataField: 'SUP',\n    sort: true\n}, {\n    text: 'Same Day Pay',\n    dataField: 'SDP',\n    sort: true\n}, {\n    text: 'Bonus Hours',\n    dataField: 'BNS_HRS',\n    sort: true\n}, {\n    text: 'Bonus Rate',\n    dataField: 'BNS_RATE',\n    sort: true\n}, {\n    text: 'Bonus Hours B',\n    dataField: 'BNS_HRS_B',\n    sort: true\n}, {\n    text: 'Bonus Rate B',\n    dataField: 'BNS_RATE_B',\n    sort: true\n}, {\n    text: 'Bonus Hours C',\n    dataField: 'BNS_HR_C',\n    sort: true\n}, {\n    text: 'Bonus Rate C',\n    dataField: 'BNS_RATE_C',\n    sort: true\n}, {\n    text: 'Bonus Hours D',\n    dataField: 'BNS_HR_D',\n    sort: true\n}, {\n    text: 'Bonus Rate D',\n    dataField: 'BNS_RATE_D',\n    sort: true\n}, {\n    text: 'Pay Date',\n    dataField: 'PAYDATE',\n    sort: true\n}, {\n    text: 'UPDATED',\n    dataField: 'UPDATED',\n    sort: true\n},\n]\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst Widget_1 = ({ payroll }) => {\n    const { loading, payrollData } = payroll;\n\n    const reg = payrollData.map(hrs => {\n        return hrs.REG_HRS\n    })\n\n    let sumRegHrs = 0;\n\n\n    if (loading === false) {\n        sumRegHrs = reg.reduce((a, b) => a + b);\n    }\n\n\n\n    return (\n        <div className=\"col-xl-3 col-lg-3 col-md-3 col-sm-6 grid-margin stretch-card\">\n            <div className=\"card card-statistics\">\n                <div className=\"card-body\">\n                    <div className=\"clearfix\">\n                        <div className=\"float-left\">\n                            <i className=\"mdi mdi-timer text-danger icon-lg\"></i>\n                        </div>\n                        <div className=\"float-right\">\n                            <p className=\"mb-0 text-right text-light\">Regular Hours</p>\n                            <div className=\"fluid-container\">\n                                <h3 className=\"font-weight-medium text-right mb-0 text-light\">{Math.round(sumRegHrs)}</h3>\n                            </div>\n                        </div>\n                    </div>\n                    <p className=\"text-muted mt-3 mb-0\">\n                        <i className=\"mdi mdi-timer mr-1\" aria-hidden=\"true\"></i>Regular Hours Worked</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    // payroll: state.payroll\n})\n\nexport default connect(mapStateToProps)(Widget_1)\n","import React from \"react\";\nimport { Route, Redirect, withRouter } from \"react-router-dom\";\nimport { isLogin } from \"../utils\"\n\n\nconst PrivateRoute = ({ component: Component, history, ...rest }) => {\n    return (\n\n        // Show the component only when the user is logged in\n        // Otherwise, redirect the user to /signin page\n        <Route {...rest} render={props => (\n            isLogin() ?\n                <Component {...props} />\n                : <Redirect to=\"/login\" />\n        )} />\n    );\n}\n\n\nexport default withRouter(PrivateRoute);","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst Widget_2 = ({ payroll }) => {\n    const { loading, payrollData } = payroll;\n\n    const reg = payrollData.map(hrs => {\n        return hrs.SCH_HRS\n    })\n\n    let sumSchHrs = 0;\n\n    if (loading === false) {\n        sumSchHrs = reg.reduce((a, b) => a + b);\n    }\n\n    return (\n        <div className=\"col-xl-3 col-lg-3 col-md-3 col-sm-6 grid-margin stretch-card\">\n            <div className=\"card card-statistics\">\n                <div className=\"card-body\">\n                    <div className=\"clearfix\">\n                        <div className=\"float-left\">\n                            <i className=\"mdi mdi-receipt text-warning icon-lg\"></i>\n                        </div>\n                        <div className=\"float-right\">\n                            <p className=\"mb-0 text-right text-light\">Scheduled Hours</p>\n                            <div className=\"fluid-container\">\n                                <h3 className=\"font-weight-medium text-right mb-0 text-light\">{Math.round(sumSchHrs)}</h3>\n                            </div>\n                        </div>\n                    </div>\n                    <p className=\"text-muted mt-3 mb-0\">\n                        <i className=\"mdi mdi-calendar-outline mr-1\" aria-hidden=\"true\"></i> Total Scheduled Hours</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    payroll: state.payroll\n})\n\nexport default connect(mapStateToProps)(Widget_2)\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst Widget_3 = ({ payroll }) => {\n    const { loading, payrollData } = payroll;\n\n    const reg = payrollData.map(hrs => {\n        return hrs.BNS_HRS\n    })\n\n    let sumBnsHrs = 0;\n\n    if (loading === false) {\n        sumBnsHrs = reg.reduce((a, b) => a + b);\n    }\n\n    return (\n        <div className=\"col-xl-3 col-lg-3 col-md-3 col-sm-6 grid-margin stretch-card\">\n            <div className=\"card card-statistics\">\n                <div className=\"card-body\">\n                    <div className=\"clearfix\">\n                        <div className=\"float-left\">\n                            <i className=\"mdi mdi-currency-usd text-success icon-lg\"></i>\n                        </div>\n                        <div className=\"float-right\">\n                            <p className=\"mb-0 text-right text-light\">Bonus Hours</p>\n                            <div className=\"fluid-container\">\n                                <h3 className=\"font-weight-medium text-right mb-0 text-light\">{Math.round(sumBnsHrs)}</h3>\n                            </div>\n                        </div>\n                    </div>\n                    <p className=\"text-muted mt-3 mb-0\">\n                        <i className=\"mdi mdi-currency-usd mr-1\" aria-hidden=\"true\"></i> Bonus Hours Worked </p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    payroll: state.payroll\n})\n\nexport default connect(mapStateToProps)(Widget_3)\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst Widget_4 = ({ payroll }) => {\n    const { loading, payrollData } = payroll;\n\n    const reg = payrollData.map(hrs => {\n        return hrs.UNVH\n    })\n\n    let sumUNVH = 0;\n\n    if (loading === false) {\n        sumUNVH = reg.reduce((a, b) => a + b);\n    }\n\n    return (\n        <div className=\"col-xl-3 col-lg-3 col-md-3 col-sm-6 grid-margin stretch-card\">\n            <div className=\"card card-statistics\">\n                <div className=\"card-body\">\n                    <div className=\"clearfix\">\n                        <div className=\"float-left\">\n                            <i className=\"mdi mdi-cancel text-info icon-lg\"></i>\n                        </div>\n                        <div className=\"float-right\">\n                            <p className=\"mb-0 text-right text-light\">Unverified Hours</p>\n                            <div className=\"fluid-container\">\n                                <h3 className=\"font-weight-medium text-right mb-0 text-light\">{Math.round(sumUNVH)}</h3>\n                            </div>\n                        </div>\n                    </div>\n                    <p className=\"text-muted mt-3 mb-0\">\n                        <i className=\"mdi mdi-cancel mr-1\" aria-hidden=\"true\"></i> Unverified Hours </p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    payroll: state.payroll\n})\n\nexport default connect(mapStateToProps)(Widget_4)\n","import React from 'react'\nimport spinner from '../../../assets/images/spinner.gif'\n\nconst Spinner = () => {\n    return (\n        <div>\n            <img\n                alt=\"spinner\"\n                src={spinner}\n                style={{ width: \"100px\", margin: \"auto\", display: \"block\", position: \"relative\", right: \"120px\" }}\n            />\n        </div>\n    )\n}\n\nexport default Spinner;\n","import React from 'react';\nimport { columns } from '../utils';\nimport { connect } from 'react-redux';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport ToolkitProvider, { Search, CSVExport } from 'react-bootstrap-table2-toolkit';\nconst { SearchBar } = Search;\nconst { ExportCSVButton } = CSVExport;\n\nconst EmpTable = ({ payroll }) => {\n    const { loading, payrollData } = payroll;\n\n    const defaultSorted = [{\n        dataField: 'id',\n        order: 'desc'\n    }];\n\n    return (\n        <div>\n            <div className=\"page-header\">\n                <h3 className=\"page-title\">\n                    Payroll Table\n            </h3>\n\n            </div>\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <h4 className=\"card-title\">Payroll Data</h4>\n                            <div className=\"row\">\n                                <div className=\"col-12\">\n                                    <ToolkitProvider\n                                        keyField=\"id\"\n                                        bootstrap4\n                                        data={payrollData}\n                                        columns={columns}\n                                        search\n                                        exportCSV\n\n                                    >\n                                        {\n                                            props => (\n                                                <div>\n\n                                                    <ExportCSVButton {...props.csvProps}>\n                                                        <button type=\"button\" className=\"btn download btn-danger btn-rounded btn-icon\">\n                                                            <i className=\"mdi mdi-download\"></i>\n                                                        </button>\n                                                    </ExportCSVButton>\n\n                                                    <div className=\"d-flex align-items-center\">\n                                                        <p className=\"mb-2 mr-2\">Search in table:</p>\n                                                        <SearchBar {...props.searchProps} />\n                                                    </div>\n\n                                                    <BootstrapTable\n                                                        defaultSorted={defaultSorted}\n                                                        pagination={paginationFactory()}\n                                                        {...props.baseProps}\n                                                        wrapperClasses=\"table-responsive\"\n\n                                                    />\n                                                </div>\n                                            )\n                                        }\n                                    </ToolkitProvider>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    payroll: state.payroll,\n})\n\nexport default connect(mapStateToProps)(EmpTable);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect, withRouter } from \"react-router-dom\";\nimport Widget1 from \"../widgets/widget_1\";\nimport Widget2 from \"../widgets/widget_2\";\nimport Widget3 from \"../widgets/widget_3\";\nimport Widget4 from \"../widgets/widget_4\";\nimport Spinner from \"../isLoading/spinner\";\nimport EmpTable from \"../widgets/empTable\";\n\nconst Landing = ({ auth, payroll, history }) => {\n\n  useEffect(() => {\n    if (!auth.isAuthenticated) {\n      history.push('/login')\n    }\n  }, [auth])\n\n\n\n  return !payroll.payrollData[1] ? (\n    <h1>Select a Payroll Date</h1>\n  ) : (\n      <div>\n        <div className=\"row\">\n          <Widget1 payroll={payroll} />\n          <Widget2 payroll={payroll} />\n          <Widget3 payroll={payroll} />\n          <Widget4 payroll={payroll} />\n        </div>\n        <EmpTable />\n      </div >\n    )\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  payroll: state.payroll,\n});\n\nexport default connect(mapStateToProps)(withRouter(Landing));\n","import axios from \"axios\";\n\nconst setAuthToken = (token) => {\n  if (token) {\n    axios.defaults.headers.common[\"x-auth-token\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"x-auth-token\"];\n  }\n};\n\nexport default setAuthToken;\n","import uuid from 'uuid';\nimport { SET_SUCCESS_ALERT, SET_ERROR_ALERT, REMOVE_ALERT } from '../actionTypes/types';\n\nexport const setSuccessAlert = (msg, alertType) => async dispatch => {\n    const id = uuid.v4();\n\n    dispatch({\n        type: SET_SUCCESS_ALERT,\n        payload: { msg, alertType, id }\n    })\n\n}\n\nexport const setErrorAlert = (msg, alertType) => async dispatch => {\n    const id = uuid.v4();\n\n    dispatch({\n        type: SET_ERROR_ALERT,\n        payload: { msg, alertType, id }\n    })\n}\n\nexport const removeAlert = () => async dispatch => {\n    dispatch({\n        type: REMOVE_ALERT,\n    })\n}","import axios from \"axios\";\nimport setAuthToken from \"../../utils/auth/setAuthToken\";\nimport { removeAlert } from \"../alerts\"\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  SET_SUCCESS_ALERT,\n  SET_ERROR_ALERT,\n} from \"../../actionTypes/types\";\n\n// Load User\nexport const loadUser = () => async (dispatch) => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get(\"/auth\");\n\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data,\n    });\n    removeAlert();\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR,\n    });\n  }\n};\n\n// Register New User\nexport const register = (name, email, password) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  const body = JSON.stringify({ name, email, password });\n\n  try {\n    const res = await axios.post(\"/users/register\", body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data,\n    });\n\n    const success = res.data.success[0].msg;\n\n    if (success) {\n      dispatch({\n        type: SET_SUCCESS_ALERT,\n        payload: success\n      })\n    }\n    dispatch(loadUser())\n  } catch (err) {\n    const error = err.response.data.errors[0].msg;\n\n    if (error) {\n      dispatch({\n        type: SET_ERROR_ALERT,\n        payload: error\n      });\n    }\n    dispatch({\n      type: REGISTER_FAIL,\n    });\n  }\n};\n\n// Login\nexport const login = (email, password) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  const body = JSON.stringify({ email, password });\n\n  try {\n    const res = await axios.post(\"/auth\", body, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data,\n    });\n\n    dispatch(loadUser())\n  } catch (err) {\n    const error = err.response.data.errors[0].msg;\n\n    if (error) {\n      dispatch({\n        type: SET_ERROR_ALERT,\n        payload: error\n      });\n    }\n\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};\n\n// Logout\nexport const logout = () => async (dispatch) => {\n  dispatch({\n    type: LOGOUT,\n  });\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Alert } from \"react-bootstrap\";\n\nconst Alerts = ({ alert }) => {\n    return alert.msg === null ? (\n        <div></div>\n    ) : (\n            <Alert variant={alert.alertType}>\n                {alert.msg}\n            </Alert>\n        );\n}\n\nconst mapStateToProps = state => ({\n    alert: state.alert\n});\n\nexport default connect(mapStateToProps)(Alerts);","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, Redirect, withRouter } from \"react-router-dom\";\nimport { Form } from \"react-bootstrap\";\nimport { login } from \"../../actions/auth/auth\";\nimport Alert from \"../alerts/alerts\";\nimport Spinner from \"../isLoading/spinner\";\n\nconst Login = ({ login, auth, history }) => {\n  const [loginData, setLoginData] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const { email, password } = loginData;\n\n  useEffect(() => {\n    if (auth.isAuthenticated) {\n      history.push('/')\n    }\n  }, [auth])\n\n\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    login(email, password);\n  };\n\n  const onChange = (e) => {\n    setLoginData({ ...loginData, [e.target.name]: e.target.value });\n  };\n\n  return localStorage.token ? (\n    <Spinner />\n  ) : (\n      <div>\n        <div className=\"d-flex align-items-center login-card auth px-0\">\n          <div className=\"row w-100 mx-0\">\n            <div className=\"col-lg-8 mx-auto\">\n              <div className=\"card text-left py-5 px-4 px-sm-5\">\n                <div className=\"brand-logo\">\n                  <img\n                    src={require(\"../../../assets/images/halo_logo.png\")}\n                    alt=\"logo\"\n                  />\n                </div>\n                <h4>Halo Payroll Dashboard</h4>\n                <h6 className=\"font-weight-light\">Sign in to continue.</h6>\n                <Form className=\"pt-3\" onSubmit={onSubmit}>\n                  <Form.Group className=\"d-flex search-field\">\n                    <Form.Control\n                      type=\"email\"\n                      name=\"email\"\n                      value={email}\n                      onChange={onChange}\n                      placeholder=\"Username\"\n                      size=\"lg\"\n                      className=\"h-auto\"\n                    />\n                  </Form.Group>\n                  <Form.Group className=\"d-flex search-field\">\n                    <Form.Control\n                      type=\"password\"\n                      name=\"password\"\n                      value={password}\n                      onChange={onChange}\n                      placeholder=\"Password\"\n                      size=\"lg\"\n                      className=\"h-auto\"\n                    />\n                  </Form.Group>\n                  <div className=\"mt-3\">\n                    <button\n                      type=\"submit\"\n                      value=\"login\"\n                      className=\"btn btn-block btn-primary btn-lg font-weight-medium auth-form-btn\"\n                    >\n                      SIGN IN\n                  </button>\n                  </div>\n\n                  <div className=\"text-center mt-4 font-weight-light\">\n                    Don't have an account?{\" \"}\n                    <Link to=\"/register\" className=\"text-primary\">\n                      Create\n                  </Link>\n                  </div>\n                </Form>\n              </div>\n              <Alert />\n            </div>\n\n          </div>\n        </div>\n\n      </div>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { login })(withRouter(Login));\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, Redirect, withRouter } from \"react-router-dom\";\nimport { Form } from \"react-bootstrap\";\nimport { register } from \"../../actions/auth/auth\";\n\nconst Register = ({ register, isAuthenticated, history }) => {\n  const [registerData, setRegisterData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const { name, email, password } = registerData;\n\n  if (isAuthenticated) {\n    history.push('/')\n  }\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    register(name, email, password);\n  };\n\n  const onChange = (e) => {\n    setRegisterData({ ...registerData, [e.target.name]: e.target.value });\n  };\n\n  return (\n    <div>\n      <div className=\"d-flex align-items-center login-card auth px-0\">\n        <div className=\"row w-100 mx-0\">\n          <div className=\"col-lg-8 mx-auto\">\n            <div className=\"card text-left py-5 px-4 px-sm-5\">\n              <div className=\"brand-logo\">\n                <img\n                  src={require(\"../../../assets/images/halo_logo.png\")}\n                  alt=\"logo\"\n                />\n              </div>\n              <h4>Halo Payroll Dashboard</h4>\n              <h6 className=\"font-weight-light\">Sign in to continue.</h6>\n              <Form className=\"pt-6\" onSubmit={onSubmit}>\n                <Form.Group className=\"d-flex search-field\">\n                  <Form.Control\n                    type=\"text\"\n                    name=\"name\"\n                    value={name}\n                    onChange={onChange}\n                    placeholder=\"Username\"\n                    size=\"lg\"\n                    className=\"h-auto\"\n                  />\n                </Form.Group>\n                <Form.Group className=\"d-flex search-field\">\n                  <Form.Control\n                    type=\"email\"\n                    name=\"email\"\n                    value={email}\n                    onChange={onChange}\n                    placeholder=\"Email\"\n                    size=\"lg\"\n                    className=\"h-auto\"\n                  />\n                </Form.Group>\n                <Form.Group className=\"d-flex search-field\">\n                  <Form.Control\n                    type=\"password\"\n                    name=\"password\"\n                    value={password}\n                    onChange={onChange}\n                    placeholder=\"Password\"\n                    size=\"lg\"\n                    className=\"h-auto\"\n                  />\n                </Form.Group>\n                <div className=\"mt-3\">\n                  <button\n                    type=\"submit\"\n                    value=\"login\"\n                    className=\"btn btn-block btn-primary btn-lg font-weight-medium auth-form-btn\"\n                  >\n                    REGISTER ACCOUNT\n                  </button>\n                </div>\n\n                <div className=\"text-center mt-4 font-weight-light\">\n                  Already have an account?{\" \"}\n                  <Link to=\"/login\" className=\"text-primary\">\n                    Login\n                  </Link>\n                </div>\n              </Form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { register })(withRouter(Register));\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router-dom\";\nimport Spinner from '../isLoading/spinner';\nimport { uploadFile } from '../../actions/upload/upload';\nimport { Form } from 'react-bootstrap';\nimport Alerts from \"../alerts/alerts\";\nimport { removeAlert } from '../../actions/alerts';\n\nconst Upload = ({ auth, history, isLoading, uploadFile }) => {\n\n    useEffect(() => {\n        if (!auth.isAuthenticated) {\n            history.push('/login')\n        }\n    }, [])\n\n    const [uploadData, setUploadData] = useState({\n        selectedFile: null,\n        fileName: null,\n        loading: false\n    });\n\n    const onChangeHandler = e => {\n        setUploadData({\n            selectedFile: e.target.files[0],\n            fileName: e.target.files[0].name\n        });\n    };\n    const onClickHandler = e => {\n        e.preventDefault();\n        setUploadData({ ...uploadData, loading: true })\n        const data = new FormData();\n        data.append(\"file\", uploadData.selectedFile);\n        uploadFile(data);\n    };\n\n    return isLoading ? (\n        <Spinner />\n    ) : (\n            <div className=\"col-12 grid-margin stretch-card\">\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <h4 className=\"card-title\">Upload Payroll File</h4>\n                        <p className=\"card-description\"> Validate the format before uploading </p>\n                        <form>\n                            <Form.Group>\n                                <div className=\"mb-3\">\n                                    <Form.File id=\"formcheck-api-custom\" custom>\n                                        <Form.File.Input name=\"selectedFile\" onChange={onChangeHandler} />\n                                        <Form.File.Label data-browse=\"Upload File\">\n                                            {uploadData.fileName}\n                                        </Form.File.Label>\n                                    </Form.File>\n                                </div>\n                                <Alerts />\n                            </Form.Group>\n                            <button type=\"submit\" className=\"btn btn-primary mr-2\" onClick={onClickHandler}>Submit</button>\n                            <button className=\"btn btn-dark\">Cancel</button>\n                        </form>\n\n                    </div>\n                </div>\n            </div>\n        )\n}\n\nconst mapStateToProps = (state) => ({\n    isLoading: state.auth.loading,\n    uploadFile: state.upload,\n    auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { uploadFile, removeAlert })(withRouter(Upload));\n","import { UPLOAD_FILE, SET_ERROR_ALERT, SET_SUCCESS_ALERT } from '../../actionTypes/types';\nimport { loadUser } from '../auth/auth';\nimport axios from 'axios';\n\nexport const uploadFile = (file) => async dispatch => {\n    console.log(\"Uploading file start!\")\n\n    try {\n        const res = await axios.post(\"/payroll/upload\", file);\n\n        dispatch({\n            type: UPLOAD_FILE,\n            payload: res.data\n        })\n        const success = res.data.success[0].msg;\n\n        if (success) {\n            dispatch({\n                type: SET_SUCCESS_ALERT,\n                payload: success\n            })\n        }\n        dispatch(loadUser())\n    } catch (err) {\n\n\n        const error = err.response.data.errors[0].msg;\n\n        if (error) {\n            dispatch({\n                type: SET_ERROR_ALERT,\n                payload: error\n            });\n        }\n        dispatch(loadUser())\n\n    }\n}","import {\n    GET_DATA_BY_DATE,\n    GET_DATA_BY_ID,\n    DELETE_DATA_BY_ID,\n    SET_ERROR_ALERT,\n    SET_SUCCESS_ALERT,\n} from '../../actionTypes/types';\nimport { loadUser } from '../auth/auth';\nimport { removeAlert } from '../alerts';\nimport axios from 'axios';\n\nexport const getPayrollByDate = (date) => async dispatch => {\n    try {\n        const res = await axios.get(`/payroll/records/sheet_date/${date}`);\n        dispatch({\n            type: GET_DATA_BY_DATE,\n            payload: res.data,\n        })\n        dispatch(loadUser());\n    } catch (err) {\n        console.log(err)\n    }\n}\n\nexport const getPayrollById = (id) => async dispatch => {\n    try {\n        const res = await axios.get(`/payroll/records/euid/${id}`)\n        dispatch({\n            type: GET_DATA_BY_ID,\n            payload: res.data,\n        })\n        dispatch(removeAlert());\n        dispatch(loadUser());\n    } catch (err) {\n        console.log(err)\n        const error = err.response.data.errors[0].msg;\n\n        dispatch({\n            type: SET_ERROR_ALERT,\n            payload: error\n        })\n\n        dispatch(loadUser());\n\n    }\n}\n\nexport const saveNewRecord = (data) => async dispatch => {\n    try {\n        const res = await axios.post('/payroll/records/new', data)\n        dispatch({\n            type: SET_SUCCESS_ALERT,\n            payload: res.data.success[0].msg\n        })\n        dispatch(loadUser());\n    } catch (err) {\n        console.log(err)\n        const error = err.response.data.errors[0].msg;\n\n        dispatch({\n            type: SET_ERROR_ALERT,\n            payload: error\n        })\n\n        dispatch(loadUser());\n\n    }\n}\n\nexport const deleteById = (id) => async dispatch => {\n    try {\n        const res = await axios.delete(`/payroll/records/remove/${id}`)\n\n        dispatch({\n            type: SET_SUCCESS_ALERT,\n            payload: res.data.success[0].msg\n        })\n        dispatch(loadUser());\n    } catch (err) {\n        const error = err.response.data.errors[0].msg;\n        dispatch({\n            type: SET_ERROR_ALERT,\n            payload: error\n        })\n\n        dispatch(loadUser());\n    }\n}\n\nexport const updateById = (id, data) => async dispatch => {\n    try {\n        const res = await axios.put(`/payroll/records/update/${id}`, data);\n        dispatch({\n            type: SET_SUCCESS_ALERT,\n            payload: res.data.success[0].msg\n        })\n        dispatch(loadUser());\n    } catch (err) {\n        const error = err.response.data.errors[0].msg;\n        dispatch({\n            type: SET_ERROR_ALERT,\n            payload: error\n        })\n\n        dispatch(loadUser());\n    }\n}","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport { Button, Modal } from 'react-bootstrap';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport ToolkitProvider, { Search, CSVExport } from 'react-bootstrap-table2-toolkit';\nimport { deleteById, updateById } from '../../actions/payroll/payroll';\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\nconst { SearchBar } = Search;\nconst { ExportCSVButton } = CSVExport;\n\nconst EmpSearchTable = ({ payroll, deleteById, updateById }) => {\n    const [confirm, setConfirm] = useState({\n        show: false,\n        id: ''\n    })\n\n    const { show, id } = confirm;\n\n    const onClickHandlerDelete = (cellContent) => {\n        setConfirm({\n            ...confirm,\n            show: true,\n            id: cellContent\n        })\n\n    }\n\n    const onClickHandlerUpdate = (id) => {\n\n        function idMatch(payrollData) {\n            return payrollData._id === id;\n        }\n        const data = payrollData.find(idMatch)\n\n        updateById(id, data);\n\n    }\n\n    const onSubmitHandler = () => {\n        deleteById(id);\n        setConfirm({\n            ...confirm,\n            show: false\n        })\n    }\n\n\n    const columns = [{\n        text: 'ID',\n        dataField: 'ID',\n        sort: true,\n    }, {\n        text: 'Position',\n        dataField: 'POSITION',\n        sort: true,\n        formatter: (cellContent, row) => {\n            if (cellContent === 0) {\n                return (\n                    <label>HHA</label>\n                );\n            } else if (cellContent === 1) {\n                return (\n                    <label>DSP</label>\n                );\n            } else if (cellContent === 2) {\n                return (\n                    <label>Office</label>\n                );\n            } else if (cellContent === 3) {\n                return (\n                    <label>Admin</label>\n                );\n            }\n        }\n    }, {\n        text: 'First Name',\n        dataField: 'FIRSTNAME',\n        sort: true\n    }, {\n        text: 'Last Name',\n        dataField: 'LASTNAME',\n        sort: true\n    }, {\n        text: 'Worked Flag',\n        dataField: 'WRKD_FLG',\n        sort: true\n    }, {\n        text: 'Hours Verified Flag',\n        dataField: 'HRS_VER_FLG',\n        sort: true\n    }, {\n        text: 'Bonus Flag',\n        dataField: 'BNS_FLG',\n        sort: true\n    }, {\n        text: 'Timesheet Flag',\n        dataField: 'TIMESHEET_FLG',\n        sort: true\n    }, {\n        text: 'Pickup Pay Flag',\n        dataField: 'PICKUP_PAY_FLG',\n        sort: true\n    }, {\n        text: 'Adjustment Flag',\n        dataField: 'ADJ_FLG',\n        sort: true\n    }, {\n        text: 'Adjustment',\n        dataField: 'ADJUSTMENT',\n        sort: true\n    }, {\n        text: 'Special Rate',\n        dataField: 'SP_RATE',\n        sort: true\n    }, {\n        text: 'Notes',\n        dataField: 'NOTES',\n        sort: true\n    }, {\n        text: 'Regular Hours',\n        dataField: 'REG_HRS',\n        sort: true\n    }, {\n        text: 'Scheduled Hours',\n        dataField: 'SCH_HRS',\n        sort: true\n    }, {\n        text: 'Unverfied Hours',\n        dataField: 'UNVH',\n        sort: true\n    }, {\n        text: 'Verified Hours',\n        dataField: 'VRF_HRS',\n        sort: true\n    }, {\n        text: 'Timesheet Hours',\n        dataField: 'TS_HRS',\n        sort: true\n    }, {\n        text: 'Show Up Pay',\n        dataField: 'SUP',\n        sort: true\n    }, {\n        text: 'Same Day Pay',\n        dataField: 'SDP',\n        sort: true\n    }, {\n        text: 'Bonus Hours',\n        dataField: 'BNS_HRS',\n        sort: true\n    }, {\n        text: 'Bonus Rate',\n        dataField: 'BNS_RATE',\n        sort: true\n    }, {\n        text: 'Bonus Hours B',\n        dataField: 'BNS_HRS_B',\n        sort: true\n    }, {\n        text: 'Bonus Rate B',\n        dataField: 'BNS_RATE_B',\n        sort: true\n    }, {\n        text: 'Bonus Hours C',\n        dataField: 'BNS_HR_C',\n        sort: true\n    }, {\n        text: 'Bonus Rate C',\n        dataField: 'BNS_RATE_C',\n        sort: true\n    }, {\n        text: 'Bonus Hours D',\n        dataField: 'BNS_HR_D',\n        sort: true\n    }, {\n        text: 'Bonus Rate D',\n        dataField: 'BNS_RATE_D',\n        sort: true\n    }, {\n        text: 'Pay Date',\n        dataField: 'PAYDATE',\n        sort: true\n    }, {\n        text: 'UPDATED',\n        dataField: 'UPDATED',\n        sort: true\n    }, {\n        dataField: '_id',\n        text: 'Delete',\n        sort: false,\n        formatter: (cellContent) => {\n            return (\n                <div>\n                    <button className=\"btn btn-dark\" onClick={e => { e.preventDefault(); onClickHandlerDelete(cellContent) }}>\n                        <i className=\"mdi mdi-delete text-danger\"></i>Delete\n                </button>\n                </div>\n            );\n        }\n    }, {\n        dataField: '_id',\n        text: 'Update',\n        sort: false,\n        formatter: (cellContent) => {\n            return (\n                <div>\n                    <button className=\"btn btn-dark\" onClick={e => { e.preventDefault(); onClickHandlerUpdate(cellContent) }}>\n                        <i className=\"mdi mdi-cloud-upload text-warning\"></i>Update\n              </button>\n                </div>\n            );\n        }\n    }\n    ]\n\n    const { loading, payrollData } = payroll;\n\n    const defaultSorted = [{\n        dataField: 'id',\n        order: 'desc'\n    }];\n\n    return loading ? (\n        <h1>Edit Associate Data</h1>\n    ) : (\n            <div>\n                <Modal\n                    show={show}\n                    onHide={() => show(false)}\n                    aria-labelledby=\"example-modal-sizes-title-md\"\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title>Confirm Deletion</Modal.Title>\n                    </Modal.Header>\n\n                    <Modal.Body>\n                        <p>Are you sure you want to delete this record?</p>\n                    </Modal.Body>\n\n                    <Modal.Footer className=\"fleex-wrap\">\n                        <Button variant=\"primary m-2\" onClick={(e) => { e.preventDefault(); onSubmitHandler() }}>Confirm</Button>\n                        <Button variant=\"light m-2\" onClick={(e) => { e.preventDefault(); setConfirm({ ...confirm, show: false }) }}>Cancel</Button>\n                    </Modal.Footer>\n                </Modal>\n\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <h4 className=\"card-title\">Associate Raw Payroll Data</h4>\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        <ToolkitProvider\n                                            keyField=\"id\"\n                                            bootstrap4\n                                            data={payrollData}\n                                            columns={columns}\n                                            search\n\n                                        >\n                                            {\n                                                props => (\n                                                    <div>\n                                                        <ExportCSVButton {...props.csvProps}>\n                                                            <button type=\"button\" className=\"btn download btn-danger btn-rounded btn-icon\">\n                                                                <i className=\"mdi mdi-download\"></i>\n                                                            </button>\n                                                        </ExportCSVButton>\n                                                        <div className=\"d-flex align-items-center\">\n                                                            <p className=\"mb-2 mr-2\">Search in table:</p>\n                                                            <SearchBar {...props.searchProps} />\n                                                        </div>\n                                                        <BootstrapTable\n                                                            cellEdit={cellEditFactory({ mode: 'dbclick' })}\n                                                            defaultSorted={defaultSorted}\n                                                            pagination={paginationFactory()}\n                                                            {...props.baseProps}\n                                                            wrapperClasses=\"table-responsive\"\n                                                            striped={true}\n\n                                                        />\n                                                    </div>\n                                                )\n                                            }\n                                        </ToolkitProvider>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div >\n        )\n}\n\nconst mapStateToProps = (state) => ({\n    payroll: state.payroll,\n})\n\nexport default connect(mapStateToProps, { deleteById, updateById })(EmpSearchTable);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport { Button, Modal } from 'react-bootstrap';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport ToolkitProvider, { Search, CSVExport } from 'react-bootstrap-table2-toolkit';\nimport { deleteById, updateById } from '../../actions/payroll/payroll';\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\nconst { SearchBar } = Search;\nconst { ExportCSVButton } = CSVExport;\n\nconst EmpPrimaryData = ({ payroll, deleteById, updateById }) => {\n    const [confirm, setConfirm] = useState({\n        show: false,\n        id: ''\n    })\n\n    const { show, id } = confirm;\n\n    const onClickHandlerDelete = (cellContent) => {\n        setConfirm({\n            ...confirm,\n            show: true,\n            id: cellContent\n        })\n\n    }\n\n    const onClickHandlerUpdate = (id) => {\n\n        function idMatch(payrollData) {\n            return payrollData._id === id;\n        }\n        const data = payrollData.find(idMatch)\n\n        updateById(id, data);\n\n    }\n\n    const onSubmitHandler = () => {\n        deleteById(id);\n        setConfirm({\n            ...confirm,\n            show: false\n        })\n    }\n\n\n    const columns = [{\n        text: 'First Name',\n        dataField: 'FIRSTNAME',\n        sort: true\n    }, {\n        text: 'Last Name',\n        dataField: 'LASTNAME',\n        sort: true\n    }, {\n        text: 'Worked Flag',\n        dataField: 'WRKD_FLG',\n        sort: true,\n        formatter: (cellContent, row) => {\n            if (cellContent === 'X') {\n                return (\n                    <label className=\"badge badge-success\">WORKED</label>\n                );\n            }\n        },\n        editor: true\n    }, {\n        text: 'Hours Verified Flag',\n        dataField: 'HRS_VER_FLG',\n        sort: true,\n        formatter: (cellContent, row) => {\n            if (cellContent === 'V') {\n                return (\n                    <label className=\"badge badge-success\">VERIFIED</label>\n                );\n            } else if (cellContent === 'U') {\n                return (\n                    <label className=\"badge badge-danger\">UNVERIFIED</label>\n                );\n            }\n        }\n    }, {\n        text: 'Bonus Flag',\n        dataField: 'BNS_FLG',\n        sort: true,\n        formatter: (cellContent, row) => {\n            if (cellContent === 'B' || '') {\n                return (\n                    <label className=\"badge badge-success\">BONUS</label>\n                );\n            }\n        }\n    }, {\n        text: 'Timesheet Flag',\n        dataField: 'TIMESHEET_FLG',\n        sort: true,\n        formatter: (cellContent, row) => {\n            if (cellContent === 'N/A') {\n                return (\n                    <label className=\"badge badge-info\">TIMESHEET</label>\n                );\n            } else {\n                return (\n                    <label></label>\n                );\n            }\n        }\n    }, {\n        text: 'Pickup Pay Flag',\n        dataField: 'PICKUP_PAY_FLG',\n        sort: true,\n        formatter: (cellContent, row) => {\n            if (cellContent === 'N/A') {\n                return (\n                    <label className=\"badge badge-primary\">PICKUP PAY</label>\n                );\n            } else {\n                return (\n                    <label></label>\n                );\n            }\n        }\n    }, {\n        text: 'Adjustment Flag',\n        dataField: 'ADJ_FLG',\n        sort: true,\n        formatter: (cellContent, row) => {\n            if (cellContent === 'N/A') {\n                return (\n                    <label className=\"badge badge-dark\">ADJUSTMENT</label>\n                );\n            } else {\n                return (\n                    <label></label>\n                );\n            }\n        }\n    }, {\n        text: 'Special Rate',\n        dataField: 'SP_RATE',\n        sort: true\n    }, {\n        text: 'Notes',\n        dataField: 'NOTES',\n        sort: true\n    }, {\n        text: 'Regular Hours',\n        dataField: 'REG_HRS',\n        sort: true\n    }, {\n        text: 'Scheduled Hours',\n        dataField: 'SCH_HRS',\n        sort: true\n    }, {\n        text: 'Unverfied Hours',\n        dataField: 'UNVH',\n        sort: true\n    }, {\n        text: 'Verified Hours',\n        dataField: 'VRF_HRS',\n        sort: true\n    }, {\n        text: 'Timesheet Hours',\n        dataField: 'TS_HRS',\n        sort: true\n    }, {\n        text: 'Show Up Pay',\n        dataField: 'SUP',\n        sort: true\n    }, {\n        text: 'Same Day Pay',\n        dataField: 'SDP',\n        sort: true\n    }, {\n        text: 'Bonus Hours',\n        dataField: 'BNS_HRS',\n        sort: true\n    }, {\n        text: 'Bonus Rate',\n        dataField: 'BNS_RATE',\n        sort: true\n    }, {\n        text: 'Bonus Hours B',\n        dataField: 'BNS_HRS_B',\n        sort: true\n    }, {\n        text: 'Bonus Rate B',\n        dataField: 'BNS_RATE_B',\n        sort: true\n    }, {\n        text: 'Bonus Hours C',\n        dataField: 'BNS_HR_C',\n        sort: true\n    }, {\n        text: 'Bonus Rate C',\n        dataField: 'BNS_RATE_C',\n        sort: true\n    }, {\n        text: 'Bonus Hours D',\n        dataField: 'BNS_HR_D',\n        sort: true\n    }, {\n        text: 'Bonus Rate D',\n        dataField: 'BNS_RATE_D',\n        sort: true\n    }, {\n        text: 'Pay Date',\n        dataField: 'PAYDATE',\n        sort: true\n    }, {\n        text: 'UPDATED',\n        dataField: 'UPDATED',\n        sort: true\n    },\n    ]\n\n    const { loading, payrollData } = payroll;\n\n    const defaultSorted = [{\n        dataField: 'id',\n        order: 'desc'\n    }];\n\n    return loading ? (\n        <h1>Search by Associate ID</h1>\n    ) : (\n            <div>\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <h4 className=\"card-title\">Associate Payroll Data</h4>\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        <ToolkitProvider\n                                            keyField=\"id\"\n                                            bootstrap4\n                                            data={payrollData}\n                                            columns={columns}\n                                            search\n\n                                        >\n                                            {\n                                                props => (\n                                                    <div>\n                                                        <ExportCSVButton {...props.csvProps}>\n                                                            <button type=\"button\" className=\"btn download btn-danger btn-rounded btn-icon\">\n                                                                <i className=\"mdi mdi-download\"></i>\n                                                            </button>\n                                                        </ExportCSVButton>\n                                                        <div className=\"d-flex align-items-center\">\n                                                            <p className=\"mb-2 mr-2\">Search in table:</p>\n                                                            <SearchBar {...props.searchProps} />\n                                                        </div>\n                                                        <BootstrapTable\n                                                            cellEdit={cellEditFactory({ mode: 'dbclick' })}\n                                                            defaultSorted={defaultSorted}\n                                                            pagination={paginationFactory()}\n                                                            {...props.baseProps}\n                                                            wrapperClasses=\"table-responsive\"\n                                                            striped={true}\n\n                                                        />\n                                                    </div>\n                                                )\n                                            }\n                                        </ToolkitProvider>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div >\n        )\n}\n\nconst mapStateToProps = (state) => ({\n    payroll: state.payroll,\n})\n\nexport default connect(mapStateToProps, { deleteById, updateById })(EmpPrimaryData);\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Widget1 from \"../widgets/widget_1\";\nimport Widget2 from \"../widgets/widget_2\";\nimport Widget3 from \"../widgets/widget_3\";\nimport Widget4 from \"../widgets/widget_4\";\nimport Spinner from \"../isLoading/spinner\";\nimport EmpSearchTable from \"../widgets/empSearchTable\";\nimport EmpPrimaryData from \"../widgets/empPrimaryData\";\nimport Alerts from \"../alerts/alerts\";\nimport { Form, Col, Button } from 'react-bootstrap';\n\nconst Employees = ({ auth, payroll, history }) => {\n\n    useEffect(() => {\n        if (!auth.isAuthenticated) {\n            history.push('/login')\n        }\n    }, [])\n\n    const [editButton, setEditButton] = useState(false);\n\n    const onClickHandler = (e) => {\n        e.preventDefault();\n        editButton ? setEditButton(false) : setEditButton(true)\n\n    }\n\n    return auth.loading === true ? (\n        <Spinner></Spinner>\n    ) : (\n            <div>\n                <div className=\"row\">\n                    <Widget1 payroll={payroll} />\n                    <Widget2 payroll={payroll} />\n                    <Widget3 payroll={payroll} />\n                    <Widget4 payroll={payroll} />\n                    <div className=\"col-md-6 grid-margin\">\n                        <button hidden={payroll.loading} onClick={onClickHandler} type=\"button\" className=\"btn btn-primary btn-rounded btn-icon\">\n                            <i className=\"mdi mdi-table-edit\"></i>\n                        </button>\n                    </div >\n\n                </div>\n                {!editButton ? <EmpPrimaryData /> : <EmpSearchTable />}\n\n\n                <Alerts />\n\n            </div>\n        )\n}\n\nconst mapStateToProps = (state) => ({\n    payroll: state.payroll,\n    auth: state.auth,\n})\n\nexport default connect(mapStateToProps)(withRouter(Employees))\n","import { GET_PAY_DATES, SET_SUCCESS_ALERT, SET_ERROR_ALERT } from '../../actionTypes/types';\nimport { loadUser } from '../../actions/auth/auth';\nimport axios from 'axios';\n\n\nexport const loadDates = () => async (dispatch) => {\n    try {\n        const res = await axios.get(\"/payroll/records/paydates/all\");\n        dispatch({\n            type: GET_PAY_DATES,\n            payload: res.data\n        })\n        dispatch(loadUser());\n    } catch (err) {\n        console.log(err)\n    }\n}\n\nexport const saveDate = (date) => async dispatch => {\n    try {\n        const res = await axios.post(\"/payroll/records/date/new\", date);\n        dispatch({\n            type: SET_SUCCESS_ALERT,\n            payload: res.data.success[0].msg\n        })\n        dispatch(loadUser());\n    } catch (err) {\n        const error = err.response.data.errors[0].msg;\n        dispatch({\n            type: SET_ERROR_ALERT,\n            payload: error\n        })\n\n        dispatch(loadUser());\n    }\n}\n\nexport const deletePayDate = (id) => async dispatch => {\n    try {\n        const res = await axios.delete(`payroll/records/paydate/remove/${id}`)\n\n        dispatch({\n            type: SET_SUCCESS_ALERT,\n            payload: res.data.success[0].msg\n        })\n        dispatch(loadUser());\n    } catch (err) {\n        const error = err.response.data.errors[0].msg;\n        dispatch({\n            type: SET_ERROR_ALERT,\n            payload: error\n        })\n\n        dispatch(loadUser());\n    }\n}\n","import React, { useState } from 'react';\nimport { Dropdown } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { getPayrollByDate } from '../../../actions/payroll/payroll';\nconst PaydateDropdown = ({ paydates, getPayrollByDate }) => {\n    const [selectedDate, setSelectedDate] = useState({\n        date: null,\n    })\n    const onClickHandler = (e) => {\n        e.preventDefault();\n        getPayrollByDate(e.target.name)\n        setSelectedDate({\n            ...selectedDate,\n            date: e.target.name\n        })\n    }\n\n    const listDates = paydates.map(record => {\n        return record.map(item => {\n            return <Dropdown.Item name={item.PAYDATE} key={item._id} onClick={onClickHandler}>{item.PAYDATE}</Dropdown.Item>\n        })\n    });\n\n    return (\n\n        <Dropdown>\n            <Dropdown.Toggle variant=\"btn btn-outline-primary\" id=\"dropdownMenuOutlineButton1\">\n                {selectedDate.date === null ? 'Pay Date Options' : selectedDate.date}\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n                {listDates}\n            </Dropdown.Menu>\n        </Dropdown>\n\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    paydates: state.paydates\n})\nexport default connect(mapStateToProps, { getPayrollByDate })(PaydateDropdown);\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux';\nimport { getPayrollById } from '../../../actions/payroll/payroll';\n\nconst PayrollSearch = ({ getPayrollById }) => {\n    const [empId, setEmpId] = useState({\n        id: 0\n    })\n\n    const { id } = empId;\n\n    const onChangeHandler = (e) => {\n        setEmpId({\n            ...empId,\n            id: e.target.value\n        })\n    }\n\n    const enterKeyPressed = (e) => {\n        if (e.key === \"Enter\") {\n            getPayrollById(id);\n            e.preventDefault();\n        }\n    }\n\n    return (\n        <li className=\"nav-item w-100\">\n            <form className=\"nav-link d-lg-flex search\">\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"id\"\n                    placeholder=\"Search Associate By ID\"\n                    onChange={onChangeHandler}\n                    onKeyPress={enterKeyPressed} />\n            </form>\n        </li>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    payroll: state.payroll\n})\n\nexport default connect(mapStateToProps, { getPayrollById })(PayrollSearch)\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dropdown } from \"react-bootstrap\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Trans } from \"react-i18next\";\nimport { logout } from \"../../actions/auth/auth\";\nimport { loadDates } from \"../../actions/paydates/paydates\";\nimport PaydateDropdown from \"./paydateDropdown/paydateDropdown\";\nimport PayrollSearch from \"./payrollSearch/payrollSearch\";\n\n\nconst Navbar = ({ auth, logout, loadDates, paydates, history }) => {\n\n  const { location } = history;\n\n  const toggleOffcanvas = () => {\n    document.querySelector(\".sidebar-offcanvas\").classList.toggle(\"active\");\n  }\n\n  useEffect(() => {\n    loadDates();\n  }, [loadDates])\n\n\n  const logoutUser = (e) => {\n    e.preventDefault();\n    logout();\n  }\n\n  let searchHandler = <div></div>;\n  if (location.pathname === \"/\") {\n    searchHandler = <PaydateDropdown />;\n  } else if (location.pathname === \"/employees\") {\n    searchHandler = <PayrollSearch />;\n  } else {\n    searchHandler = <div></div>\n  }\n\n  return !auth.isAuthenticated || !auth.user ? (\n    <div></div>\n  ) : (\n      <nav className=\"navbar p-0 fixed-top d-flex flex-row\">\n        <div className=\"navbar-brand-wrapper d-flex d-lg-none align-items-center justify-content-center\">\n          <Link className=\"navbar-brand brand-logo-mini\" to=\"/\">\n            <img\n              src={require(\"../../../assets/images/halo_logo.png\")}\n              alt=\"logo\"\n            />\n          </Link>\n        </div>\n        <div className=\"navbar-menu-wrapper flex-grow d-flex align-items-stretch\">\n          <button\n            className=\"navbar-toggler align-self-center\"\n            type=\"button\"\n            onClick={() => document.body.classList.toggle(\"sidebar-icon-only\")}\n          >\n            <span className=\"mdi mdi-menu\"></span>\n          </button>\n          <ul className=\"navbar-nav w-100\">\n\n            {/* {location.pathname === \"/employees\" ? <PayrollSearch /> : <PaydateDropdown />} */}\n            {searchHandler}\n          </ul>\n          <ul className=\"navbar-nav navbar-nav-right\">\n            <div as=\"li\" className=\"nav-item d-none d-lg-block\">\n              <div as=\"li\" className=\"nav-item dropdown\"></div>\n              <div className=\"nav-link btn btn-success create-new-button no-caret\">\n                <Link to=\"/upload\" className=\"nav-link\">  + <Trans>Upload Payroll</Trans> </Link>\n              </div>\n            </div>\n\n            <Dropdown alignRight as=\"li\" className=\"nav-item\">\n              <Dropdown.Toggle\n                as=\"a\"\n                className=\"nav-link cursor-pointer no-caret\"\n              >\n                <div className=\"navbar-profile\">\n                  <p className=\"mb-0 d-none d-sm-block navbar-profile-name\">\n                    <Trans>{auth.user.name.toUpperCase()}</Trans>\n                  </p>\n                  <i className=\"mdi mdi-menu-down d-none d-sm-block\"></i>\n                </div>\n              </Dropdown.Toggle>\n\n              <Dropdown.Menu className=\"navbar-dropdown preview-list navbar-profile-dropdown-menu\">\n                <Dropdown.Divider />\n                <Dropdown.Item\n                  href=\"!#\"\n                  onClick={(evt) => evt.preventDefault()}\n                  className=\"preview-item\"\n                >\n                  <div className=\"preview-thumbnail\">\n                    <div className=\"preview-icon bg-dark rounded-circle\">\n                      <i className=\"mdi mdi-logout text-danger\"></i>\n                    </div>\n                  </div>\n                  <div className=\"preview-item-content\">\n                    <p className=\"preview-subject mb-1\" onClick={logoutUser}>\n                      <Link to=\"/login\" className=\"nav-link\"><Trans>Log Out</Trans></Link>\n                    </p>\n                  </div>\n                </Dropdown.Item>\n                <Dropdown.Divider />\n\n              </Dropdown.Menu>\n            </Dropdown>\n          </ul>\n          <button\n            className=\"navbar-toggler navbar-toggler-right d-lg-none align-self-center\"\n            type=\"button\"\n            onClick={toggleOffcanvas}\n          >\n            <span className=\"mdi mdi-format-line-spacing\"></span>\n          </button>\n        </div>\n      </nav>\n    );\n\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  paydates: state.paydates,\n})\n\nexport default connect(mapStateToProps, { logout, loadDates })(withRouter(Navbar));","import React, { useState, useEffect } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Trans } from 'react-i18next';\nimport { logout } from '../../actions/auth/auth';\n\n\nconst Sidebar = (props) => {\n  const { auth } = props;\n\n  const [menuState, setMenuState] = useState({});\n\n\n  const onRouteChanged = () => {\n    document.querySelector(\"#sidebar\").classList.remove(\"active\");\n    Object.keys(menuState).forEach((i) => {\n      setMenuState({ [i]: false });\n    });\n\n    const dropdownPaths = [\n      { path: \"/apps\", state: \"appsMenuOpen\" },\n      { path: \"/basic-ui\", state: \"basicUiMenuOpen\" },\n      { path: \"/advanced-ui\", state: \"advancedUiMenuOpen\" },\n      { path: \"/form-elements\", state: \"formElementsMenuOpen\" },\n      { path: \"/tables\", state: \"tablesMenuOpen\" },\n      { path: \"/maps\", state: \"mapsMenuOpen\" },\n      { path: \"/icons\", state: \"iconsMenuOpen\" },\n      { path: \"/charts\", state: \"chartsMenuOpen\" },\n      { path: \"/user-pages\", state: \"userPagesMenuOpen\" },\n      { path: \"/error-pages\", state: \"errorPagesMenuOpen\" },\n      { path: \"/general-pages\", state: \"generalPagesMenuOpen\" },\n      { path: \"/ecommerce\", state: \"ecommercePagesMenuOpen\" },\n      { path: \"/editors\", state: \"editorsMenuOpen\" },\n    ];\n\n    dropdownPaths.forEach((obj) => {\n      if (isPathActive(obj.path)) {\n        setMenuState({ [obj.state]: true });\n      }\n    });\n  };\n\n  const isPathActive = (path) => {\n    return props.location.pathname.startsWith(path);\n  };\n\n  useEffect(() => {\n    if (auth.user) {\n      onRouteChanged();\n      // add class 'hover-open' to sidebar navitem while hover in sidebar-icon-only menu\n      const body = document.querySelector(\"body\");\n      document.querySelectorAll(\".sidebar .nav-item\").forEach((el) => {\n        el.addEventListener(\"mouseover\", function () {\n          if (body.classList.contains(\"sidebar-icon-only\")) {\n            el.classList.add(\"hover-open\");\n          }\n        });\n        el.addEventListener(\"mouseout\", function () {\n          if (body.classList.contains(\"sidebar-icon-only\")) {\n            el.classList.remove(\"hover-open\");\n          }\n        });\n      });\n    }\n\n  }, []);\n\n  useEffect(() => {\n    if (auth.user) {\n      if (props.location.pathname !== props.history.location.pathname) {\n        onRouteChanged();\n      }\n    }\n\n  }, []);\n\n\n\n  return !auth.isAuthenticated || !auth.user ? (\n    <div></div>\n  ) : (\n      <nav className=\"sidebar sidebar-offcanvas\" id=\"sidebar\">\n        <div className=\"sidebar-brand-wrapper d-none d-lg-flex align-items-center justify-content-center fixed-top\">\n          <a className=\"sidebar-brand brand-logo\" href=\"/\">\n            <img src={require(\"../../../assets/images/halo_logo.png\")} alt=\"logo\" />\n          </a>\n          <a className=\"sidebar-brand brand-logo-mini\" href=\"/\">\n            <img\n              src={require(\"../../../assets/images/halo_logo.png\")}\n              alt=\"logo\"\n            />\n          </a>\n        </div>\n        <ul className=\"nav\">\n          <li className=\"nav-item profile\">\n            <div className=\"profile-desc\">\n              <div className=\"profile-name\">\n                <h5 className=\"mb-0 font-weight-normal\">\n                  <Trans>{auth.user.name}</Trans>\n                </h5>\n                <span>\n                  <Trans>Admin</Trans>\n                </span>\n              </div>\n            </div>\n          </li>\n          <li className=\"nav-item nav-category\">\n            <span className=\"nav-link\">\n              <Trans>Navigation</Trans>\n            </span>\n          </li>\n          <li\n            className={\n              isPathActive(\"/dashboard\")\n                ? \"nav-item menu-items active\"\n                : \"nav-item menu-items\"\n            }\n          >\n            <Link className=\"nav-link\" to=\"/\">\n              <span className=\"menu-icon\">\n                <i className=\"mdi mdi-speedometer\"></i>\n              </span>\n              <span className=\"menu-title\">\n                <Trans>Dashboard</Trans>\n              </span>\n            </Link>\n          </li>\n          <li\n            className={\n              isPathActive(\"/upload\")\n                ? \"nav-item menu-items active\"\n                : \"nav-item menu-items\"\n            }\n          >\n            <Link className=\"nav-link\" to=\"/upload\">\n              <span className=\"menu-icon\">\n                <i className=\"mdi mdi-upload\"></i>\n              </span>\n              <span className=\"menu-title\">Upload Payroll</span>\n            </Link>\n          </li>\n\n          <li\n            className={\n              isPathActive(\"/newrecord\")\n                ? \"nav-item menu-items active\"\n                : \"nav-item menu-items\"\n            }\n          >\n            <Link className=\"nav-link\" to=\"/newrecord\">\n              <span className=\"menu-icon\">\n                <i className=\"mdi mdi-account\"></i>\n              </span>\n              <span className=\"menu-title\">\n                <Trans>New Payroll Record</Trans>\n              </span>\n            </Link>\n          </li>\n\n          <li\n            className={\n              isPathActive(\"/employees\")\n                ? \"nav-item menu-items active\"\n                : \"nav-item menu-items\"\n            }\n          >\n            <Link className=\"nav-link\" to=\"/employees\">\n              <span className=\"menu-icon\">\n                <i className=\"mdi mdi-account-multiple\"></i>\n              </span>\n              <span className=\"menu-title\">\n                <Trans>Search Associate</Trans>\n              </span>\n            </Link>\n          </li>\n\n          <li\n            className={\n              isPathActive(\"/newassociate\")\n                ? \"nav-item menu-items active\"\n                : \"nav-item menu-items\"\n            }\n          >\n            <Link className=\"nav-link\" to=\"/newassociate\">\n              <span className=\"menu-icon\">\n                <i className=\"mdi mdi-new-box\"></i>\n              </span>\n              <span className=\"menu-title\">\n                <Trans>New Associate</Trans>\n              </span>\n            </Link>\n          </li>\n        </ul>\n      </nav>\n    );\n};\n\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { logout })(withRouter(Sidebar));","import {\n    GET_ALL_ASSOCIATES,\n    // GET_ASSOCIATE_BY_ID,\n    // SAVE_NEW_ASSOCIATE,\n    // DELETE_ASSOCIATE_BY_ID,\n    SET_ERROR_ALERT,\n    SET_SUCCESS_ALERT,\n} from '../../actionTypes/types';\nimport { loadUser } from '../../actions/auth/auth';\nimport axios from 'axios';\n\n\nexport const loadAssociates = () => async (dispatch) => {\n    try {\n        const res = await axios.get(\"/payroll/records/associates/all\");\n        dispatch({\n            type: GET_ALL_ASSOCIATES,\n            payload: res.data\n        })\n        dispatch(loadUser());\n    } catch (err) {\n        console.log(err)\n    }\n}\n\nexport const saveAssociate = (data) => async dispatch => {\n    try {\n        const res = await axios.post(\"/payroll/associate/new\", data);\n        console.log(res)\n        dispatch({\n            type: SET_SUCCESS_ALERT,\n            payload: res.data.success[0].msg\n        })\n        // window.location.reload()\n        dispatch(loadUser());\n    } catch (err) {\n        const error = err.response.data.errors[0].msg;\n        dispatch({\n            type: SET_ERROR_ALERT,\n            payload: error\n        })\n\n        dispatch(loadUser());\n    }\n}\n\nexport const deleteAssociate = (id) => async dispatch => {\n    try {\n        const res = await axios.delete(`payroll/records/associate/remove/${id}`)\n\n        dispatch({\n            type: SET_SUCCESS_ALERT,\n            payload: res.data.success[0].msg\n        })\n        dispatch(loadUser());\n    } catch (err) {\n        const error = err.response.data.errors[0].msg;\n        dispatch({\n            type: SET_ERROR_ALERT,\n            payload: error\n        })\n\n        dispatch(loadUser());\n    }\n}\n","import moment from 'moment';\nexport const initialState = {\n    ID: '',\n    FIRSTNAME: '',\n    LASTNAME: '',\n    WRKD_FLG: 'N',\n    HRS_VER_FLG: 'N',\n    BNS_FLG: 'N',\n    TIMESHEET_FLG: 'N',\n    PICKUP_PAY_FLG: 'N',\n    ADJ_FLG: 'N',\n    ADJUSTMENT: '',\n    SP_RATE: '',\n    NOTES: '',\n    REG_HRS: '',\n    SCH_HRS: '',\n    UNVH: '',\n    VRF_HRS: '',\n    TS_HRS: '',\n    SUP: '',\n    SDP: '',\n    BNS_HRS: '',\n    BNS_RATE: '',\n    BNS_HRS_B: '',\n    BNS_RATE_B: '',\n    BNS_HR_C: '',\n    BNS_RATE_C: '',\n    BNS_HR_D: '',\n    BNS_RATE_D: '',\n    PAYDATE: '',\n    UPDATED: moment().format(),\n}\n\nexport const dateInitialState = {\n    NEWPAYDATE: '',\n    UPDATED: moment().format()\n}","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Col, Button } from 'react-bootstrap';\nimport { saveDate, deletePayDate } from '../../actions/paydates/paydates';\nimport { saveAssociate } from '../../actions/associate/associate';\nimport Spinner from '../isLoading/spinner';\nimport Alerts from '../alerts/alerts';\nimport { dateInitialState } from './state';\nimport { Typeahead } from 'react-bootstrap-typeahead';\n\nconst PayDate = ({ isLoading, paydates, saveDate, saveAssociate, deletePayDate }) => {\n    const [date, setDate] = useState(dateInitialState)\n    const [deleteDate, setDeleteDate] = useState({\n        ID: '',\n    })\n    const { NEWPAYDATE } = date;\n\n    let options = {};\n    const paydateSelector = paydates.map(date => {\n        return date.map(item => {\n            return {\n                value: item._id, label: item.PAYDATE\n            }\n        })\n    })\n\n    options = paydateSelector;\n\n    const paydateHandler = (e) => {\n        let value = e[0]\n        if (value != undefined) {\n            setDeleteDate({ ...deleteDate, ID: e[0].value })\n        } else {\n            setDeleteDate({ ...deleteDate, ID: '' })\n        }\n    }\n\n\n\n    // New Paydate onChange Handler\n    const newPaydateHandler = (e) => {\n        setDate({\n            ...date,\n            NEWPAYDATE: e.target.value\n        })\n    }\n\n    // New Paydate onSubmit Handler\n    const newPaydateSubmitHandler = (e) => {\n        e.preventDefault();\n        saveDate(date)\n    }\n\n    const deletePaydateSubmitHandler = (e) => {\n        e.preventDefault();\n        deletePayDate(deleteDate.ID);\n    }\n\n    return isLoading ? (\n        <Spinner />\n    ) : (\n            <div>\n                <div className=\"row\">\n                    <div className=\"col-md-6 grid-margin\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <Form noValidate>\n                                    <Form.Row>\n                                        <Form.Group as={Col} md=\"12\" controlId=\"validationCustom01\">\n                                            <Form.Label>New Pay Date</Form.Label>\n                                            <Form.Control\n                                                onChange={newPaydateHandler}\n                                                required\n                                                value={NEWPAYDATE}\n                                                name=\"NEWPAYDATE\"\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                    </Form.Row>\n                                    <Button type=\"submit\" onClick={newPaydateSubmitHandler}>Submit form</Button>\n\n                                </Form>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-md-6 grid-margin\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <Form noValidate>\n                                    <Form.Row>\n                                        <Form.Group as={Col} md=\"12\" controlId=\"validationCustom02\">\n                                            <Form.Label>Delete Pay Date</Form.Label>\n                                            <Typeahead\n                                                labelKey=\"label\"\n                                                id=\"typeahead-single\"\n                                                options={options[0]}\n                                                placeholder=\"Choose a Date\"\n                                                onChange={paydateHandler}\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                    </Form.Row>\n                                    <Button type=\"submit\" onClick={deletePaydateSubmitHandler}>Delete Pay Date</Button>\n\n                                </Form>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        )\n}\n\nconst mapStateToProps = (state) => ({\n    isLoading: state.auth.loading,\n    paydates: state.paydates\n})\n\nexport default connect(mapStateToProps, { saveDate, saveAssociate, deletePayDate })(PayDate);","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Col, Button } from 'react-bootstrap';\nimport { saveNewRecord } from '../../actions/payroll/payroll';\nimport { withRouter } from \"react-router-dom\";\nimport { saveDate } from '../../actions/paydates/paydates';\nimport { loadAssociates } from '../../actions/associate/associate';\nimport Spinner from '../isLoading/spinner';\nimport Alerts from '../alerts/alerts';\nimport { initialState, dateInitialState } from './state';\nimport { Typeahead } from 'react-bootstrap-typeahead';\nimport Select from 'react-select';\nimport PayDate from './newpaydate';\n\nconst NewRecord = ({ saveNewRecord, isLoading, paydates, saveDate, loadAssociates, associate }) => {\n    const [data, setData] = useState(initialState)\n    const [date, setDate] = useState(dateInitialState)\n\n    const { ID, FIRSTNAME, LASTNAME, POSITION, ADJUSTMENT, SP_RATE, NOTES, REG_HRS, SCH_HRS, UNVH, VRF_HRS, TS_HRS, SUP, SDP, BNS_HRS, BNS_RATE, BNS_HRS_B, BNS_RATE_B, BNS_HR_C, BNS_RATE_C, BNS_HR_D, BNS_RATE_D, PAYDATE } = data;\n\n    useEffect(() => {\n        loadAssociates()\n    }, [])\n\n\n    const associateSelector = associate.map(associate => {\n        return {\n            value: associate.ID, label: `${associate.LASTNAME}, ${associate.FIRSTNAME} ${associate.ID}`\n        }\n    })\n\n\n\n    let options = {};\n    const paydateSelector = paydates.map(date => {\n        return date.map(item => {\n            return {\n                value: item.PAYDATE, label: item.PAYDATE\n            }\n        })\n    })\n\n    options = paydateSelector;\n\n\n    const onChangeHandler = (e) => {\n        setData({\n            ...data,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    // Handles Scheduled Hours and Worked Flag\n    const schHrsHandler = (e) => {\n        if (e.target.value != 0) {\n            setData({ ...data, SCH_HRS: e.target.value, WRKD_FLG: 'Y' })\n        }\n        else {\n            setData({ ...data, SCH_HRS: e.target.value, WRKD_FLG: 'N' })\n        }\n    }\n\n    // Handles Hours Verified flag and Unverified Hours\n    const unvhHandler = (e) => {\n        if ((REG_HRS - UNVH === REG_HRS)) {\n            setData({ ...data, HRS_VER_FLG: 'Y', UNVH: e.target.value })\n        } else {\n            setData({ ...data, HRS_VER_FLG: 'N', UNVH: e.target.value })\n        }\n    }\n\n    // Handles Time Sheet hours and Timesheet Flag\n    const timesheetHandler = (e) => {\n        if (e.target.value !== 0) {\n            setData({ ...data, TIMESHEET_FLG: 'Y', TS_HRS: e.target.value })\n        } else {\n            setData({ ...data, TIMESHEET_FLG: 'N', TS_HRS: e.target.value })\n        }\n    }\n\n    // Handles SDP and Pickup Pay Flag\n    const sdpHandler = (e) => {\n        if (e.target.value > 0) {\n            setData({ ...data, PICKUP_PAY_FLG: 'Y', SDP: e.target.value })\n        } else {\n            setData({ ...data, PICKUP_PAY_FLG: 'N', SDP: e.target.value })\n        }\n    }\n\n    // Handles Adjustment and Adjustment Flag\n    const adjustmentHandler = (e) => {\n        if (e.target.value != \"\") {\n            setData({ ...data, [e.target.name]: e.target.value, ADJ_FLG: 'Y' })\n        } else {\n            setData({ ...data, [e.target.name]: e.target.value, ADJ_FLG: 'N' })\n        }\n    }\n\n    // Handles Bonus & Bonus Flag\n    const bonusHandler = (e) => {\n        if ((SCH_HRS - VRF_HRS - UNVH) === REG_HRS) {\n            setData({ ...data, [e.target.name]: e.target.value, BNS_FLG: 'N' })\n        } else {\n            setData({ ...data, [e.target.name]: e.target.value, BNS_FLG: 'Y' })\n        }\n    }\n\n    const paydateHandler = (e) => {\n        let value = e[0]\n        if (value != undefined) {\n            setData({ ...data, PAYDATE: e[0].value })\n        } else {\n            setData({ ...data, PAYDATE: '' })\n        }\n    }\n\n    const associateHandler = (e) => {\n        let value = e[0]\n        // console.log(e)\n        associate.map(associate => {\n            if (e.value === associate.ID) {\n                setData({\n                    ...data,\n                    FIRSTNAME: associate.FIRSTNAME,\n                    LASTNAME: associate.LASTNAME,\n                    ID: associate.ID,\n                    POSITION: associate.POSITION\n                })\n            }\n        })\n    }\n\n    // New Paydate onChange Handler\n    const newPaydateHandler = (e) => {\n        setDate({\n            ...date,\n            NEWPAYDATE: e.target.value\n        })\n    }\n\n    // New Paydate onSubmit Handler\n    const newPaydateSubmitHandler = (e) => {\n        e.preventDefault();\n        saveDate(date)\n    }\n\n\n\n    const onSubmitHandler = (e) => {\n        e.preventDefault();\n        saveNewRecord(data)\n        setData(initialState)\n    }\n\n    return isLoading ? (\n        <Spinner />\n    ) : (\n            <div>\n                <div className=\"page-header\">\n                    <h3 className=\"page-title\">\n                        New Payroll Record\n                    </h3>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-12 grid-margin\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <Form noValidate>\n                                    <Form.Row>\n                                        <Form.Group as={Col} md=\"6\" controlId=\"validationCustom01\">\n                                            <Form.Label><h3>Select Associate</h3></Form.Label>\n                                            <Select\n                                                onChange={associateHandler}\n                                                options={\n                                                    associateSelector\n                                                }\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                    </Form.Row>\n                                    <Form.Row>\n                                        <Form.Group hidden={!ID} as={Col} md=\"1\" controlId=\"validationCustom02\">\n                                            <Form.Label>ID</Form.Label>\n                                            <Form.Control\n                                                value={ID}\n                                                disabled\n                                                // minLength={1}\n                                                name=\"ID\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group hidden={!POSITION} as={Col} md=\"1\" controlId=\"validationCustom02\">\n                                            <Form.Label>Position</Form.Label>\n                                            <Form.Control\n                                                value={POSITION}\n                                                disabled\n                                                // minLength={1}\n                                                name=\"POSITION\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group hidden={!FIRSTNAME} as={Col} md=\"3\" controlId=\"validationCustom02\">\n                                            <Form.Label>First Name</Form.Label>\n                                            <Form.Control\n                                                value={FIRSTNAME}\n                                                disabled\n                                                // minLength={1}\n                                                name=\"FIRSTNAME\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group hidden={!LASTNAME} as={Col} md=\"3\" controlId=\"validationCustom02\">\n                                            <Form.Label>Last Name</Form.Label>\n                                            <Form.Control\n                                                value={LASTNAME}\n                                                disabled\n                                                // minLength={1}\n                                                name=\"LASTNAME\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"4\" controlId=\"validationCustom02\">\n                                            <Form.Label>Adjustment</Form.Label>\n                                            <Form.Control\n                                                onChange={adjustmentHandler}\n                                                value={ADJUSTMENT}\n                                                // minLength={1}\n                                                name=\"ADJUSTMENT\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\n                                            <Form.Label>Special Rate</Form.Label>\n                                            <Form.Control\n                                                onChange={onChangeHandler}\n                                                value={SP_RATE}\n                                                minLength={1}\n                                                name=\"SP_RATE\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"6\" controlId=\"validationCustom02\">\n                                            <Form.Label>Notes</Form.Label>\n                                            <Form.Control\n                                                onChange={onChangeHandler}\n                                                value={NOTES}\n                                                minLength={1}\n                                                name=\"NOTES\"\n                                                required\n                                                type=\"textarea\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\n                                            <Form.Label>Regular Hours</Form.Label>\n                                            <Form.Control\n                                                hidden={!SCH_HRS}\n                                                onChange={onChangeHandler}\n                                                disabled\n                                                value={(SCH_HRS - UNVH - VRF_HRS - TS_HRS - BNS_HRS - BNS_HRS_B - BNS_HR_C - BNS_HR_D)}\n                                                minLength={1}\n                                                name=\"REG_HRS\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\n                                            <Form.Label>Scheduled Hours</Form.Label>\n                                            <Form.Control\n                                                onChange={schHrsHandler}\n                                                value={SCH_HRS}\n                                                minLength={1}\n                                                name=\"SCH_HRS\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\n                                            <Form.Label>Unverified Hours</Form.Label>\n                                            <Form.Control\n                                                onChange={unvhHandler}\n                                                value={UNVH}\n                                                minLength={1}\n                                                name=\"UNVH\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\n                                            <Form.Label>Verified Hours</Form.Label>\n                                            <Form.Control\n                                                onChange={onChangeHandler}\n                                                value={VRF_HRS}\n                                                minLength={1}\n                                                name=\"VRF_HRS\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\n                                            <Form.Label>Timesheet Hours</Form.Label>\n                                            <Form.Control\n                                                onChange={timesheetHandler}\n                                                value={TS_HRS}\n                                                minLength={1}\n                                                name=\"TS_HRS\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\n                                            <Form.Label>Show Up Pay</Form.Label>\n                                            <Form.Control\n                                                onChange={onChangeHandler}\n                                                value={SUP}\n                                                minLength={1}\n                                                name=\"SUP\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\n                                            <Form.Label>Same Day Pay</Form.Label>\n                                            <Form.Control\n                                                onChange={sdpHandler}\n                                                value={SDP}\n                                                minLength={1}\n                                                name=\"SDP\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\n                                            <Form.Label>Bonus Hours</Form.Label>\n                                            <Form.Control\n                                                onChange={bonusHandler}\n                                                value={BNS_HRS}\n                                                minLength={1}\n                                                name=\"BNS_HRS\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\n                                            <Form.Label>Bonus Rate</Form.Label>\n                                            <Form.Control\n                                                onChange={onChangeHandler}\n                                                value={BNS_RATE}\n                                                minLength={1}\n                                                name=\"BNS_RATE\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\n                                            <Form.Label>Bonus Hours B</Form.Label>\n                                            <Form.Control\n                                                value={BNS_HRS_B}\n                                                onChange={onChangeHandler}\n                                                minLength={1}\n                                                name=\"BNS_HRS_B\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\n                                            <Form.Label>Bonus Rate B</Form.Label>\n                                            <Form.Control\n                                                value={BNS_RATE_B}\n                                                onChange={onChangeHandler}\n                                                minLength={1}\n                                                name=\"BNS_RATE_B\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\n                                            <Form.Label>Bonus Hours C</Form.Label>\n                                            <Form.Control\n                                                value={BNS_HR_C}\n                                                onChange={onChangeHandler}\n                                                minLength={1}\n                                                name=\"BNS_HR_C\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\n                                            <Form.Label>Bonus Rate C</Form.Label>\n                                            <Form.Control\n                                                value={BNS_RATE_C}\n                                                onChange={onChangeHandler}\n                                                minLength={1}\n                                                name=\"BNS_RATE_C\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\n                                            <Form.Label>Bonus Hours D</Form.Label>\n                                            <Form.Control\n                                                value={BNS_HR_D}\n                                                onChange={onChangeHandler}\n                                                minLength={1}\n                                                name=\"BNS_HR_D\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\n                                            <Form.Label>Bonus Rate D</Form.Label>\n                                            <Form.Control\n                                                onChange={onChangeHandler}\n                                                value={BNS_RATE_D}\n                                                minLength={1}\n                                                name=\"BNS_RATE_D\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"4\" controlId=\"validationCustom02\">\n                                            <Form.Label>Pay Date</Form.Label>\n                                            <Typeahead\n                                                labelKey=\"label\"\n                                                id=\"typeahead-single\"\n                                                options={options[0]}\n                                                placeholder=\"Choose a Date\"\n                                                onChange={paydateHandler}\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                    </Form.Row>\n                                    <Button type=\"submit\" onClick={onSubmitHandler}>Submit form</Button>\n\n                                </Form>\n\n                            </div>\n                            <Alerts />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n}\n\nconst mapStateToProps = (state) => ({\n    payload: state.payload,\n    isLoading: state.auth.loading,\n    paydates: state.paydates,\n    associate: state.associate.associate\n})\n\nexport default connect(mapStateToProps, { saveNewRecord, saveDate, loadAssociates })(withRouter(NewRecord));","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Col, Button } from 'react-bootstrap';\nimport { loadAssociates, saveAssociate, deleteAssociate } from '../../actions/associate/associate';\nimport Spinner from '../isLoading/spinner';\nimport Alerts from '../alerts/alerts';\nimport { initialState, dateInitialState } from './state';\nimport Select from 'react-select';\nimport PayDate from '../newrecord/newpaydate';\n\nconst NewAssociate = ({ isLoading, loadAssociates, associate, saveAssociate, deleteAssociate }) => {\n    const [data, setData] = useState({\n        ID: '',\n        FIRSTNAME: '',\n        LASTNAME: '',\n        POSITION: ''\n    })\n    const { ID, FIRSTNAME, LASTNAME, POSITION } = data;\n    const [deleteAssociateData, setDeleteAssociateData] = useState({\n        _id: null\n    })\n\n    useEffect(() => {\n        loadAssociates()\n    }, [])\n\n\n\n    const associateSelector = associate.map(associate => {\n        return {\n            value: associate.ID, label: `${associate.LASTNAME}, ${associate.FIRSTNAME} ${associate.ID}`\n        }\n    })\n\n\n    const onChangeHandler = (e) => {\n        setData({\n            ...data,\n            [e.target.name]: e.target.value\n        })\n    }\n    const deleteAssociateHandler = (e) => {\n        associate.map(associate => {\n            if (e.value === associate.ID) {\n                setDeleteAssociateData({\n                    ...deleteAssociateData,\n                    _id: associate._id\n                })\n            }\n        })\n    }\n\n    const onSubmitHandler = (e) => {\n        e.preventDefault();\n        saveAssociate(data)\n        setData({\n            ID: '',\n            FIRSTNAME: '',\n            LASTNAME: '',\n            POSITION: ''\n        })\n    }\n\n    const onDeleteAssociateSubmitHandler = (e) => {\n        e.preventDefault();\n        deleteAssociate(deleteAssociateData._id)\n        setDeleteAssociateData({\n            _id: ''\n        })\n    }\n\n    return isLoading ? (\n        <Spinner />\n    ) : (\n            <div>\n                <div className=\"page-header\">\n                    <h3 className=\"page-title\">\n                        New Associate\n                    </h3>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-12 grid-margin\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <Form noValidate>\n                                    <Form.Row>\n                                        <Form.Group as={Col} md=\"1\" controlId=\"validationCustom02\">\n                                            <Form.Label>ID</Form.Label>\n                                            <Form.Control\n                                                value={ID}\n                                                onChange={onChangeHandler}\n                                                name=\"ID\"\n                                                required\n                                                type=\"text\"\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"1\" controlId=\"validationCustom02\">\n                                            <Form.Label>Position</Form.Label>\n                                            <Form.Control\n                                                onChange={onChangeHandler}\n                                                value={POSITION}\n                                                name=\"POSITION\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"5\" controlId=\"validationCustom02\">\n                                            <Form.Label>First Name</Form.Label>\n                                            <Form.Control\n                                                onChange={onChangeHandler}\n                                                value={FIRSTNAME}\n                                                name=\"FIRSTNAME\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"5\" controlId=\"validationCustom02\">\n                                            <Form.Label>Last Name</Form.Label>\n                                            <Form.Control\n                                                onChange={onChangeHandler}\n                                                value={LASTNAME}\n                                                name=\"LASTNAME\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                    </Form.Row>\n                                    <Button type=\"submit\" onClick={onSubmitHandler}>Save Associate</Button>\n\n                                </Form>\n\n                            </div>\n                        </div>\n                    </div>\n\n\n                </div>\n\n                <div className=\"page-header\">\n                    <h3 className=\"page-title\">\n                        Delete Associate\n                    </h3>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-12 grid-margin\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <Form noValidate>\n                                    <Form.Row>\n                                        <Form.Group as={Col} md=\"12\" controlId=\"validationCustom01\">\n                                            <Form.Label>Associate Information</Form.Label>\n                                            <Select\n                                                onChange={deleteAssociateHandler}\n                                                options={\n                                                    associateSelector\n                                                }\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                    </Form.Row>\n                                    <Button type=\"submit\" onClick={onDeleteAssociateSubmitHandler}>Delete Associate</Button>\n\n                                </Form>\n\n                            </div>\n                        </div>\n                    </div>\n\n\n                </div>\n\n                <PayDate />\n                <Alerts />\n            </div>\n        )\n}\n\nconst mapStateToProps = (state) => ({\n    payload: state.payload,\n    isLoading: state.auth.loading,\n    associate: state.associate.associate\n})\n\nexport default connect(mapStateToProps, { saveAssociate, loadAssociates, deleteAssociate })(NewAssociate);","import moment from 'moment';\nexport const initialState = {\n    ID: '',\n    FIRSTNAME: '',\n    LASTNAME: '',\n    WRKD_FLG: 'N',\n    HRS_VER_FLG: 'N',\n    BNS_FLG: 'N',\n    TIMESHEET_FLG: 'N',\n    PICKUP_PAY_FLG: 'N',\n    ADJ_FLG: 'N',\n    ADJUSTMENT: '',\n    SP_RATE: '',\n    NOTES: '',\n    REG_HRS: '',\n    SCH_HRS: '',\n    UNVH: '',\n    VRF_HRS: '',\n    TS_HRS: '',\n    SUP: '',\n    SDP: '',\n    BNS_HRS: '',\n    BNS_RATE: '',\n    BNS_HRS_B: '',\n    BNS_RATE_B: '',\n    BNS_HR_C: '',\n    BNS_RATE_C: '',\n    BNS_HR_D: '',\n    BNS_RATE_D: '',\n    PAYDATE: '',\n    UPDATED: moment().format(),\n}\n\nexport const dateInitialState = {\n    NEWPAYDATE: '',\n    UPDATED: moment().format()\n}","import React, { Fragment, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport \"./App.scss\";\nimport PrivateRoute from \"./components/routing/PrivateRoute\";\nimport Landing from \"./components/dashboard/landing\";\nimport Login from \"./components/auth/login\";\nimport Register from \"./components/auth/register\";\nimport Upload from \"./components/upload/upload\";\nimport Employees from \"./components/employees/employees\";\nimport setAuthToken from \"./utils/auth/setAuthToken\";\nimport { loadUser } from \"./actions/auth/auth\";\nimport Navbar from \"./components/navigation/navbar\";\nimport Sidebar from \"./components/navigation/sidebar\";\nimport NewRecord from \"./components/newrecord/newrecord\";\nimport NewAssociate from \"./components/newassociate/newassociate\";\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n\n  console.log(\"This is a test\")\n\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, [localStorage.token]);\n\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <section className=\"container-scroller\">\n            <Route component={Sidebar} />\n            <div className=\"container-fluid page-body-wrapper\">\n              <Route component={Navbar} />\n              <div className=\"main-panel\">\n                <div className=\"content-wrapper\">\n                  <Switch>\n                    <Route exact path=\"/login\" component={Login} />\n                    <Route exact path=\"/register\" component={Register} />\n                    <Route exact path=\"/\" component={Landing} />\n                    <Route exact path=\"/upload\" component={Upload} />\n                    <Route exact path=\"/employees\" component={Employees} />\n                    <Route exact path=\"/newrecord\" component={NewRecord} />\n                    <Route exact path=\"/newassociate\" component={NewAssociate} />\n                  </Switch>\n                </div>\n              </div>\n            </div>\n          </section>\n        </Fragment>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app/App\";\nimport * as serviceWorker from \"./app/serviceWorker\";\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWAe\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/halo_logo.d1d628d2.png\";"],"sourceRoot":""}