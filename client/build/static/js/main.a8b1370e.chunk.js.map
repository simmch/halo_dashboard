{"version":3,"sources":["assets/images/spinner.gif","app/reducers/auth.js","app/reducers/alerts.js","app/reducers/upload.js","app/reducers/paydates.js","app/reducers/payroll.js","app/reducers/associate.js","app/reducers/index.js","app/actionTypes/types.js","app/store.js","app/components/utils/index.js","app/components/routing/PrivateRoute.js","app/components/widgets/widget_1.js","app/components/widgets/widget_2.js","app/components/widgets/widget_3.js","app/components/widgets/widget_4.js","app/components/isLoading/spinner.js","app/components/widgets/empTable.js","app/utils/auth/setAuthToken.js","app/actions/alerts.js","app/actions/auth/auth.js","app/actions/payroll/payroll.js","app/components/STATE/index.js","app/components/widgets/empSearchTable.js","app/components/widgets/empPrimaryData.js","app/components/alerts/alerts.js","app/components/dashboard/landing.js","app/components/auth/login.js","app/components/auth/register.js","app/components/upload/upload.js","app/actions/upload/upload.js","app/components/employees/employees.js","app/actions/paydates/paydates.js","app/actions/associate/associate.js","app/components/navigation/paydateDropdown/paydateDropdown.js","app/components/navigation/payrollSearch/payrollSearch.js","app/components/navigation/navbar.js","app/components/navigation/sidebar.js","app/components/newrecord/newrecord.js","app/components/newrecord/newpaydate.js","app/components/newassociate/newassociate.js","app/App.js","app/serviceWorker.js","index.js","assets/images/halo_logo.png"],"names":["module","exports","initialState","token","localStorage","getItem","isAuthenticated","loading","user","msg","alertType","payrollData","alert","associate","combineReducers","auth","state","action","type","payload","setItem","removeItem","upload","paydates","payroll","middleWare","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","columns","text","dataField","sort","formatter","cellContent","row","className","editor","withRouter","Component","component","rest","history","render","props","isLogin","to","connect","reg","map","hrs","REG_HRS","sumRegHrs","reduce","a","b","Math","round","aria-hidden","SCH_HRS","sumSchHrs","BNS_HRS","sumBnsHrs","UNVH","sumUNVH","Spinner","alt","src","spinner","style","width","margin","display","position","right","SearchBar","Search","ExportCSVButton","CSVExport","defaultSorted","order","keyField","bootstrap4","data","search","exportCSV","csvProps","searchProps","pagination","paginationFactory","baseProps","wrapperClasses","setAuthToken","axios","defaults","headers","common","removeAlert","dispatch","loadUser","get","res","logout","deleteById","id","delete","success","error","response","errors","updateById","put","ID","FIRSTNAME","LASTNAME","WRKD_FLG","HRS_VER_FLG","BNS_FLG","TIMESHEET_FLG","PICKUP_PAY_FLG","ADJ_FLG","ADJUSTMENT","SP_RATE","NOTES","VRF_HRS","TS_HRS","SUP","SDP","BNS_RATE","BNS_HRS_B","BNS_RATE_B","BNS_HR_C","BNS_RATE_C","BNS_HR_D","BNS_RATE_D","PAYDATE","UPDATED","moment","format","dateInitialState","NEWPAYDATE","useState","show","confirm","setConfirm","onClickUpdateAllHandler","item","_id","onClick","e","preventDefault","onClickHandlerDelete","console","log","find","onClickHandlerUpdate","Modal","onHide","aria-labelledby","Header","closeButton","Title","Body","Footer","Button","variant","cellEdit","cellEditFactory","mode","striped","Alert","editButton","setEditButton","useEffect","push","hidden","login","email","password","config","body","JSON","stringify","post","loginData","setLoginData","onSubmit","onChange","target","name","value","require","Form","Group","Control","placeholder","size","register","registerData","setRegisterData","isLoading","uploadFile","file","selectedFile","fileName","uploadData","setUploadData","File","custom","Input","files","Label","data-browse","FormData","append","associateName","loadDates","saveDate","date","window","location","reload","loadAssociates","saveAssociate","getPayrollByDate","selectedDate","setSelectedDate","onClickHandler","listDates","record","Dropdown","Item","key","Toggle","Menu","getPayrollById","associateSelector","label","styleSheet","input","base","color","options","styles","searchHandler","pathname","document","classList","toggle","as","alignRight","toUpperCase","Divider","href","evt","querySelector","menuState","setMenuState","onRouteChanged","remove","Object","keys","forEach","i","path","obj","isPathActive","startsWith","querySelectorAll","el","addEventListener","contains","add","saveNewRecord","setData","POSITION","onChangeHandler","regularHoursHandler","noValidate","Row","Col","md","controlId","Feedback","disabled","required","minLength","labelKey","undefined","deletePayDate","setDate","deleteDate","setDeleteDate","deleteAssociate","deleteAssociateData","setDeleteAssociateData","App","Sidebar","Navbar","exact","Login","Register","Landing","Upload","Employees","NewRecord","NewAssociate","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.a8b1370e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.2cfe9ab9.gif\";","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n} from \"../actionTypes/types\";\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: null,\n  loading: true,\n  user: null,\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case USER_LOADED:\n      return { ...state, isAuthenticated: true, loading: false, user: payload };\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      localStorage.setItem(\"token\", payload.token);\n      return { ...state, ...payload, isAuthenticated: true, loading: false };\n    case REGISTER_FAIL:\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT:\n      localStorage.removeItem(\"token\");\n      return { ...state, token: null, isAuthenticated: false, loading: false };\n    default:\n      return initialState;\n  }\n}\n","import { SET_SUCCESS_ALERT, SET_ERROR_ALERT, REMOVE_ALERT } from \"../actionTypes/types\";\n\nconst initialState = {\n    msg: null,\n    alertType: null,\n};\n\nexport default function (state = initialState, action) {\n    const { type, payload } = action;\n    switch (type) {\n        case SET_SUCCESS_ALERT:\n            return { ...state, msg: payload, alertType: \"success\" };\n        case SET_ERROR_ALERT:\n            return { ...state, msg: payload, alertType: \"danger\" };\n        case REMOVE_ALERT:\n            return { ...state, msg: null, alertType: null };\n        default:\n            return state;\n    }\n}","import { UPLOAD_FILE } from '../actionTypes/types';\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n    const { type, payload } = action;\n    switch (type) {\n        case UPLOAD_FILE:\n            return { ...state, payload }\n        default:\n            return state;\n    }\n}","import { GET_PAY_DATES } from '../actionTypes/types';\n\nconst initialState = [];\n\nexport default function (state = initialState, action) {\n    const { type, payload } = action;\n    switch (type) {\n        case GET_PAY_DATES:\n            return [...state, payload];\n        default:\n            return state;\n    }\n}","import {\n    GET_ALL_DATA,\n    GET_DATA_BY_DATE,\n    GET_DATA_BY_ID,\n    SAVE_NEW_RECORD,\n    // DELETE_DATA_BY_DATE,\n    DELETE_DATA_BY_ID\n} from '../actionTypes/types';\n\nconst initialState = {\n    payrollData: [],\n    loading: true,\n    alert: []\n}\n\nexport default function (state = initialState, action) {\n    const { type, payload } = action;\n    switch (type) {\n        case GET_ALL_DATA:\n        case GET_DATA_BY_ID:\n        case GET_DATA_BY_DATE:\n            return { ...state, payrollData: payload, loading: false }\n        case SAVE_NEW_RECORD:\n            return { ...state, alert: payload }\n        case DELETE_DATA_BY_ID:\n            return { ...state, alert: payload }\n        default:\n            return state;\n    }\n}","import {\n    GET_ALL_ASSOCIATES,\n    GET_ASSOCIATE_BY_ID,\n    SAVE_NEW_ASSOCIATE,\n    DELETE_ASSOCIATE_BY_ID\n} from '../actionTypes/types';\n\nconst initialState = {\n    associate: [],\n    loading: true,\n    alert: []\n}\n\nexport default function (state = initialState, action) {\n    const { type, payload } = action;\n    switch (type) {\n        case GET_ALL_ASSOCIATES:\n        case GET_ASSOCIATE_BY_ID:\n            return { ...state, associate: payload, loading: false }\n        case SAVE_NEW_ASSOCIATE:\n            return { ...state, alert: payload }\n        case DELETE_ASSOCIATE_BY_ID:\n            return { ...state, alert: payload }\n        default:\n            return state;\n    }\n}","import { combineReducers } from \"redux\";\nimport auth from \"./auth\";\nimport alert from \"./alerts\";\nimport upload from \"./upload\";\nimport paydates from \"./paydates\";\nimport payroll from \"./payroll\";\nimport associate from \"./associate\"\n\nexport default combineReducers({\n  auth,\n  alert,\n  upload,\n  paydates,\n  payroll,\n  associate\n});\n","export const SET_SUCCESS_ALERT = \"SET_SUCCESS_ALERT\";\nexport const SET_ERROR_ALERT = \"SET_ERROR_ALERT\";\nexport const REMOVE_ALERT = \"REMOVE_ALERT\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\nexport const GET_PROFILE = \"GET_PROFILE\";\nexport const PROFILE_ERROR = \"PROFILE_ERROR\";\nexport const CLEAR_PROFILE = \"CLEAR_PROFILE\";\nexport const UPDATE_PROFILE = \"UPDATE_PROFILE\";\nexport const UPLOAD_FILE = \"UPLOAD_FILE\";\nexport const GET_PAY_DATES = \"GET_PAY_DATES\";\n\nexport const GET_DATA_BY_DATE = \"GET_DATA_BY_DATE\";\nexport const GET_DATA_BY_ID = \"GET_DATA_BY_ID\";\nexport const GET_ALL_DATA = \"GET_ALL_DATA\";\nexport const DELETE_DATA_BY_DATE = \"DELETE_DATA_BY_DATE\";\nexport const DELETE_DATA_BY_ID = \"DELETE_DATA_BY_ID\";\nexport const SAVE_NEW_RECORD = \"SAVE_NEW_RECORD\";\n\nexport const SAVE_NEW_ASSOCIATE = \"SAVE_NEW_ASSOCIATE\";\nexport const DELETE_ASSOCIATE_BY_ID = \"DELETE_ASSOCIATE_BY_ID\";\nexport const GET_ALL_ASSOCIATES = \"GET_ALL_ASSOCIATES\";\nexport const GET_ASSOCIATE_BY_ID = \"GET_ASSOCIATE_BY_ID\";\nexport const UPDATE_ASSOCIATE = \"UPDATE_ASSOCIATE\";\n\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers/index\";\n\nconst initialState = {};\n\nconst middleWare = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleWare))\n);\n\nexport default store;\n","import React from 'react';\n\nexport const isLogin = () => {\n    if (localStorage.token) {\n        return true\n    }\n}\n\nexport const columns = [\n    {\n        text: 'ID',\n        dataField: 'ID',\n        sort: true,\n    },\n    //{\n    //     text: 'Position',\n    //     dataField: 'POSITION',\n    //     sort: true,\n    //     formatter: (cellContent, row) => {\n    //         if (cellContent === 0) {\n    //             return (\n    //                 <label>HHA</label>\n    //             );\n    //         } else if (cellContent === 1) {\n    //             return (\n    //                 <label>DSP</label>\n    //             );\n    //         } else if (cellContent === 2) {\n    //             return (\n    //                 <label>Office</label>\n    //             );\n    //         } else if (cellContent === 3) {\n    //             return (\n    //                 <label>Admin</label>\n    //             );\n    //         }\n    //     }\n    // }, \n    {\n        text: 'First Name',\n        dataField: 'FIRSTNAME',\n        sort: true\n    }, {\n        text: 'Last Name',\n        dataField: 'LASTNAME',\n        sort: true\n    }, {\n        text: 'W',\n        dataField: 'WRKD_FLG',\n        sort: true,\n        formatter: (cellContent, row) => {\n            if (cellContent === 'X') {\n                return (\n                    <label className=\"badge badge-success\">X</label>\n                );\n            }\n        },\n        editor: true\n    }, {\n        text: 'HV',\n        dataField: 'HRS_VER_FLG',\n        sort: true,\n        formatter: (cellContent, row) => {\n            if (cellContent === 'X') {\n                return (\n                    <label className=\"badge badge-success\">X</label>\n                );\n            } else if (cellContent === 'N') {\n                return (\n                    <label className=\"badge badge-danger\">N</label>\n                );\n            }\n        }\n    }, {\n        text: 'BF',\n        dataField: 'BNS_FLG',\n        sort: true,\n        formatter: (cellContent, row) => {\n            if (cellContent === 'X' || '') {\n                return (\n                    <label className=\"badge badge-warning\">X</label>\n                );\n            }\n        }\n    }, {\n        text: 'TF',\n        dataField: 'TIMESHEET_FLG',\n        sort: true,\n        formatter: (cellContent, row) => {\n            if (cellContent === 'X') {\n                return (\n                    <label className=\"badge badge-info\">X</label>\n                );\n            } else {\n                return (\n                    <label></label>\n                );\n            }\n        }\n    }, {\n        text: 'PUF',\n        dataField: 'PICKUP_PAY_FLG',\n        sort: true,\n        formatter: (cellContent, row) => {\n            if (cellContent === 'X') {\n                return (\n                    <label className=\"badge badge-primary\">X</label>\n                );\n            } else {\n                return (\n                    <label></label>\n                );\n            }\n        }\n    }, {\n        text: 'AF',\n        dataField: 'ADJ_FLG',\n        sort: true,\n        formatter: (cellContent, row) => {\n            if (cellContent === 'X') {\n                return (\n                    <label className=\"badge badge-dark\">X</label>\n                );\n            } else {\n                return (\n                    <label></label>\n                );\n            }\n        }\n    }, {\n        text: 'Special Rate',\n        dataField: 'SP_RATE',\n        sort: true\n    }, {\n        text: 'Notes',\n        dataField: 'NOTES',\n        sort: true\n    }, {\n        text: 'Regular Hours',\n        dataField: 'REG_HRS',\n        sort: true\n    }, {\n        text: 'Scheduled Hours',\n        dataField: 'SCH_HRS',\n        sort: true\n    }, {\n        text: 'Unverfied Hours',\n        dataField: 'UNVH',\n        sort: true\n    }, {\n        text: 'Verified Hours',\n        dataField: 'VRF_HRS',\n        sort: true\n    }, {\n        text: 'Timesheet Hours',\n        dataField: 'TS_HRS',\n        sort: true\n    }, {\n        text: 'Show Up Pay',\n        dataField: 'SUP',\n        sort: true\n    }, {\n        text: 'Same Day Pay',\n        dataField: 'SDP',\n        sort: true\n    }, {\n        text: 'Bonus Hours',\n        dataField: 'BNS_HRS',\n        sort: true\n    }, {\n        text: 'Bonus Rate',\n        dataField: 'BNS_RATE',\n        sort: true\n    }, {\n        text: 'Bonus Hours B',\n        dataField: 'BNS_HRS_B',\n        sort: true\n    }, {\n        text: 'Bonus Rate B',\n        dataField: 'BNS_RATE_B',\n        sort: true\n    }, {\n        text: 'Bonus Hours C',\n        dataField: 'BNS_HR_C',\n        sort: true\n    }, {\n        text: 'Bonus Rate C',\n        dataField: 'BNS_RATE_C',\n        sort: true\n    }, {\n        text: 'Bonus Hours D',\n        dataField: 'BNS_HR_D',\n        sort: true\n    }, {\n        text: 'Bonus Rate D',\n        dataField: 'BNS_RATE_D',\n        sort: true\n    },\n    // {\n    //     text: 'Pay Date',\n    //     dataField: 'PAYDATE',\n    //     sort: true\n    // }, {\n    //     text: 'UPDATED',\n    //     dataField: 'UPDATED',\n    //     sort: true\n    // },\n]\n","import React from \"react\";\nimport { Route, Redirect, withRouter } from \"react-router-dom\";\nimport { isLogin } from \"../utils\"\n\n\nconst PrivateRoute = ({ component: Component, history, ...rest }) => {\n    return (\n\n        // Show the component only when the user is logged in\n        // Otherwise, redirect the user to /signin page\n        <Route {...rest} render={props => (\n            isLogin() ?\n                <Component {...props} />\n                : <Redirect to=\"/login\" />\n        )} />\n    );\n}\n\n\nexport default withRouter(PrivateRoute);","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst Widget_1 = ({ payroll }) => {\n    const { loading, payrollData } = payroll;\n\n    const reg = payrollData.map(hrs => {\n        return hrs.REG_HRS\n    })\n\n    let sumRegHrs = 0;\n\n\n    if (loading === false) {\n        sumRegHrs = reg.reduce((a, b) => a + b);\n    }\n\n\n\n    return (\n        <div className=\"col-xl-3 col-lg-3 col-md-3 col-sm-6 grid-margin stretch-card\">\n            <div className=\"card card-statistics\">\n                <div className=\"card-body\">\n                    <div className=\"clearfix\">\n                        <div className=\"float-left\">\n                            <i className=\"mdi mdi-timer text-danger icon-lg\"></i>\n                        </div>\n                        <div className=\"float-right\">\n                            <p className=\"mb-0 text-right text-light\">Regular Hours</p>\n                            <div className=\"fluid-container\">\n                                <h3 className=\"font-weight-medium text-right mb-0 text-light\">{Math.round(sumRegHrs)}</h3>\n                            </div>\n                        </div>\n                    </div>\n                    <p className=\"text-muted mt-3 mb-0\">\n                        <i className=\"mdi mdi-timer mr-1\" aria-hidden=\"true\"></i>Regular Hours Worked</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    // payroll: state.payroll\n})\n\nexport default connect(mapStateToProps)(Widget_1)\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst Widget_2 = ({ payroll }) => {\n    const { loading, payrollData } = payroll;\n\n    const reg = payrollData.map(hrs => {\n        return hrs.SCH_HRS\n    })\n\n    let sumSchHrs = 0;\n\n    if (loading === false) {\n        sumSchHrs = reg.reduce((a, b) => a + b);\n    }\n\n    return (\n        <div className=\"col-xl-3 col-lg-3 col-md-3 col-sm-6 grid-margin stretch-card\">\n            <div className=\"card card-statistics\">\n                <div className=\"card-body\">\n                    <div className=\"clearfix\">\n                        <div className=\"float-left\">\n                            <i className=\"mdi mdi-receipt text-warning icon-lg\"></i>\n                        </div>\n                        <div className=\"float-right\">\n                            <p className=\"mb-0 text-right text-light\">Scheduled Hours</p>\n                            <div className=\"fluid-container\">\n                                <h3 className=\"font-weight-medium text-right mb-0 text-light\">{Math.round(sumSchHrs)}</h3>\n                            </div>\n                        </div>\n                    </div>\n                    <p className=\"text-muted mt-3 mb-0\">\n                        <i className=\"mdi mdi-calendar-outline mr-1\" aria-hidden=\"true\"></i> Total Scheduled Hours</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    payroll: state.payroll\n})\n\nexport default connect(mapStateToProps)(Widget_2)\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst Widget_3 = ({ payroll }) => {\n    const { loading, payrollData } = payroll;\n\n    const reg = payrollData.map(hrs => {\n        return hrs.BNS_HRS\n    })\n\n    let sumBnsHrs = 0;\n\n    if (loading === false) {\n        sumBnsHrs = reg.reduce((a, b) => a + b);\n    }\n\n    return (\n        <div className=\"col-xl-3 col-lg-3 col-md-3 col-sm-6 grid-margin stretch-card\">\n            <div className=\"card card-statistics\">\n                <div className=\"card-body\">\n                    <div className=\"clearfix\">\n                        <div className=\"float-left\">\n                            <i className=\"mdi mdi-currency-usd text-success icon-lg\"></i>\n                        </div>\n                        <div className=\"float-right\">\n                            <p className=\"mb-0 text-right text-light\">Bonus Hours</p>\n                            <div className=\"fluid-container\">\n                                <h3 className=\"font-weight-medium text-right mb-0 text-light\">{Math.round(sumBnsHrs)}</h3>\n                            </div>\n                        </div>\n                    </div>\n                    <p className=\"text-muted mt-3 mb-0\">\n                        <i className=\"mdi mdi-currency-usd mr-1\" aria-hidden=\"true\"></i> Bonus Hours Worked </p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    payroll: state.payroll\n})\n\nexport default connect(mapStateToProps)(Widget_3)\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst Widget_4 = ({ payroll }) => {\n    const { loading, payrollData } = payroll;\n\n    const reg = payrollData.map(hrs => {\n        return hrs.UNVH\n    })\n\n    let sumUNVH = 0;\n\n    if (loading === false) {\n        sumUNVH = reg.reduce((a, b) => a + b);\n    }\n\n    return (\n        <div className=\"col-xl-3 col-lg-3 col-md-3 col-sm-6 grid-margin stretch-card\">\n            <div className=\"card card-statistics\">\n                <div className=\"card-body\">\n                    <div className=\"clearfix\">\n                        <div className=\"float-left\">\n                            <i className=\"mdi mdi-cancel text-info icon-lg\"></i>\n                        </div>\n                        <div className=\"float-right\">\n                            <p className=\"mb-0 text-right text-light\">Unverified Hours</p>\n                            <div className=\"fluid-container\">\n                                <h3 className=\"font-weight-medium text-right mb-0 text-light\">{Math.round(sumUNVH)}</h3>\n                            </div>\n                        </div>\n                    </div>\n                    <p className=\"text-muted mt-3 mb-0\">\n                        <i className=\"mdi mdi-cancel mr-1\" aria-hidden=\"true\"></i> Unverified Hours </p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    payroll: state.payroll\n})\n\nexport default connect(mapStateToProps)(Widget_4)\n","import React from 'react'\nimport spinner from '../../../assets/images/spinner.gif'\n\nconst Spinner = () => {\n    return (\n        <div>\n            <img\n                alt=\"spinner\"\n                src={spinner}\n                style={{ width: \"100px\", margin: \"auto\", display: \"block\", position: \"relative\", right: \"120px\" }}\n            />\n        </div>\n    )\n}\n\nexport default Spinner;\n","import React from 'react';\nimport { columns } from '../utils';\nimport { connect } from 'react-redux';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport ToolkitProvider, { Search, CSVExport } from 'react-bootstrap-table2-toolkit';\nconst { SearchBar } = Search;\nconst { ExportCSVButton } = CSVExport;\n\nconst EmpTable = ({ payroll }) => {\n    const { loading, payrollData } = payroll;\n\n    const defaultSorted = [{\n        dataField: 'id',\n        order: 'desc'\n    }];\n\n    return (\n        <div>\n            <div className=\"page-header\">\n\n            </div>\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <h4 className=\"card-title\">Payroll Data</h4>\n                            <div className=\"row\">\n                                <div className=\"col-12\">\n                                    <ToolkitProvider\n                                        keyField=\"id\"\n                                        bootstrap4\n                                        data={payrollData}\n                                        columns={columns}\n                                        search\n                                        exportCSV\n\n                                    >\n                                        {\n                                            props => (\n                                                <div>\n\n                                                    <ExportCSVButton {...props.csvProps}>\n                                                        <button type=\"button\" className=\"btn download btn-danger btn-rounded btn-icon\">\n                                                            <i className=\"mdi mdi-download\"></i>\n                                                        </button>\n                                                    </ExportCSVButton>\n\n                                                    <div className=\"d-flex align-items-center\">\n                                                        <p className=\"mb-2 mr-2\">Search in table:</p>\n                                                        <SearchBar {...props.searchProps} />\n                                                    </div>\n\n                                                    <BootstrapTable\n                                                        defaultSorted={defaultSorted}\n                                                        pagination={paginationFactory()}\n                                                        {...props.baseProps}\n                                                        wrapperClasses=\"table-responsive\"\n\n                                                    />\n                                                </div>\n                                            )\n                                        }\n                                    </ToolkitProvider>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    payroll: state.payroll,\n})\n\nexport default connect(mapStateToProps)(EmpTable);\n","import axios from \"axios\";\n\nconst setAuthToken = (token) => {\n  if (token) {\n    axios.defaults.headers.common[\"x-auth-token\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"x-auth-token\"];\n  }\n};\n\nexport default setAuthToken;\n","import uuid from 'uuid';\nimport { SET_SUCCESS_ALERT, SET_ERROR_ALERT, REMOVE_ALERT } from '../actionTypes/types';\nimport { loadUser } from './auth/auth';\n\nexport const setSuccessAlert = (msg, alertType) => async dispatch => {\n    const id = uuid.v4();\n\n    dispatch({\n        type: SET_SUCCESS_ALERT,\n        payload: { msg, alertType, id }\n    })\n\n}\n\nexport const setErrorAlert = (msg, alertType) => async dispatch => {\n    const id = uuid.v4();\n\n    dispatch({\n        type: SET_ERROR_ALERT,\n        payload: { msg, alertType, id }\n    })\n}\n\nexport const removeAlert = () => async dispatch => {\n    dispatch({\n        type: REMOVE_ALERT,\n    })\n    dispatch(loadUser());\n}","import axios from \"axios\";\nimport setAuthToken from \"../../utils/auth/setAuthToken\";\nimport { removeAlert } from \"../alerts\"\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  SET_SUCCESS_ALERT,\n  SET_ERROR_ALERT,\n} from \"../../actionTypes/types\";\n\n// Load User\nexport const loadUser = () => async (dispatch) => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get(\"/auth\");\n\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data,\n    });\n    removeAlert();\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR,\n    });\n  }\n};\n\n// Register New User\nexport const register = (name, email, password) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  const body = JSON.stringify({ name, email, password });\n\n  try {\n    const res = await axios.post(\"/users/register\", body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data,\n    });\n\n    const success = res.data.success[0].msg;\n\n    if (success) {\n      dispatch({\n        type: SET_SUCCESS_ALERT,\n        payload: success\n      })\n    }\n    dispatch(loadUser())\n  } catch (err) {\n    const error = err.response.data.errors[0].msg;\n\n    if (error) {\n      dispatch({\n        type: SET_ERROR_ALERT,\n        payload: error\n      });\n    }\n    dispatch({\n      type: REGISTER_FAIL,\n    });\n  }\n};\n\n// Login\nexport const login = (email, password) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  const body = JSON.stringify({ email, password });\n\n  try {\n    const res = await axios.post(\"/auth\", body, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data,\n    });\n\n    dispatch(loadUser())\n  } catch (err) {\n    const error = err.response.data.errors[0].msg;\n\n    if (error) {\n      dispatch({\n        type: SET_ERROR_ALERT,\n        payload: error\n      });\n    }\n\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};\n\n// Logout\nexport const logout = () => async (dispatch) => {\n  dispatch({\n    type: LOGOUT,\n  });\n};\n","import {\n    GET_DATA_BY_DATE,\n    GET_DATA_BY_ID,\n    DELETE_DATA_BY_ID,\n    SET_ERROR_ALERT,\n    SET_SUCCESS_ALERT,\n} from '../../actionTypes/types';\nimport { loadUser } from '../auth/auth';\nimport { removeAlert } from '../alerts';\nimport axios from 'axios';\n\nexport const getPayrollByDate = (date) => async dispatch => {\n    try {\n        const res = await axios.get(`/payroll/records/sheet_date/${date}`);\n        dispatch({\n            type: GET_DATA_BY_DATE,\n            payload: res.data,\n        })\n        removeAlert();\n        dispatch(loadUser());\n    } catch (err) {\n        console.log(err)\n\n        const error = err.response.data.errors[0].msg;\n\n        dispatch({\n            type: SET_ERROR_ALERT,\n            payload: error\n        })\n\n        dispatch(loadUser());\n    }\n}\n\nexport const getPayrollById = (id) => async dispatch => {\n    try {\n        const res = await axios.get(`/payroll/records/euid/${id}`)\n        dispatch({\n            type: GET_DATA_BY_ID,\n            payload: res.data,\n        })\n        dispatch(removeAlert());\n        dispatch(loadUser());\n    } catch (err) {\n        console.log(err)\n        const error = err.response.data.errors[0].msg;\n\n        dispatch({\n            type: SET_ERROR_ALERT,\n            payload: error\n        })\n\n        dispatch(loadUser());\n\n    }\n}\n\nexport const saveNewRecord = (data) => async dispatch => {\n    try {\n        const res = await axios.post('/payroll/records/new', data)\n        dispatch({\n            type: SET_SUCCESS_ALERT,\n            payload: res.data.success[0].msg\n        })\n        dispatch(loadUser());\n    } catch (err) {\n        console.log(err)\n        const error = err.response.data.errors[0].msg;\n\n        dispatch({\n            type: SET_ERROR_ALERT,\n            payload: error\n        })\n\n        dispatch(loadUser());\n\n    }\n}\n\nexport const deleteById = (id) => async dispatch => {\n    try {\n        const res = await axios.delete(`/payroll/records/remove/${id}`)\n\n        dispatch({\n            type: SET_SUCCESS_ALERT,\n            payload: res.data.success[0].msg\n        })\n        dispatch(loadUser());\n    } catch (err) {\n        const error = err.response.data.errors[0].msg;\n        dispatch({\n            type: SET_ERROR_ALERT,\n            payload: error\n        })\n\n        dispatch(loadUser());\n    }\n}\n\nexport const updateById = (id, data) => async dispatch => {\n    try {\n        const res = await axios.put(`/payroll/records/update/${id}`, data);\n        dispatch({\n            type: SET_SUCCESS_ALERT,\n            payload: res.data.success[0].msg\n        })\n        dispatch(loadUser());\n    } catch (err) {\n        const error = err.response.data.errors[0].msg;\n        dispatch({\n            type: SET_ERROR_ALERT,\n            payload: error\n        })\n\n        dispatch(loadUser());\n    }\n}","import moment from 'moment';\nexport const initialState = {\n    ID: '',\n    FIRSTNAME: '',\n    LASTNAME: '',\n    WRKD_FLG: 'N',\n    HRS_VER_FLG: 'N',\n    BNS_FLG: 'N',\n    TIMESHEET_FLG: 'N',\n    PICKUP_PAY_FLG: 'N',\n    ADJ_FLG: 'N',\n    ADJUSTMENT: '',\n    SP_RATE: '',\n    NOTES: '',\n    REG_HRS: '',\n    SCH_HRS: '',\n    UNVH: '',\n    VRF_HRS: '',\n    TS_HRS: '',\n    SUP: '',\n    SDP: '',\n    BNS_HRS: '',\n    BNS_RATE: '',\n    BNS_HRS_B: '',\n    BNS_RATE_B: '',\n    BNS_HR_C: '',\n    BNS_RATE_C: '',\n    BNS_HR_D: '',\n    BNS_RATE_D: '',\n    PAYDATE: '',\n    UPDATED: moment().format(),\n}\n\nexport const payrollDataMapping = (payrollData) => {\n    return {\n        ID: payrollData.ID,\n        FIRSTNAME: payrollData.FIRSTNAME,\n        LASTNAME: payrollData.LASTNAME,\n        WRKD_FLG: payrollData.WRKD_FLG,\n        HRS_VER_FLG: payrollData.HRS_VER_FLG,\n        BNS_FLG: payrollData.BNS_FLG,\n        TIMESHEET_FLG: payrollData.TIMESHEET_FLG,\n        PICKUP_PAY_FLG: payrollData.PICKUP_PAY_FLG,\n        ADJ_FLG: payrollData.ADJ_FLG,\n        ADJUSTMENT: payrollData.ADJUSTMENT,\n        SP_RATE: payrollData.SP_RATE,\n        NOTES: payrollData.NOTES,\n        REG_HRS: payrollData.REG_HRS,\n        SCH_HRS: payrollData.SCH_HRS,\n        UNVH: payrollData.UNVH,\n        VRF_HRS: payrollData.VRF_HRS,\n        TS_HRS: payrollData.TS_HRS,\n        SUP: payrollData.SUP,\n        SDP: payrollData.SDP,\n        BNS_HRS: payrollData.BNS_HRS,\n        BNS_RATE: payrollData.BNS_RATE,\n        BNS_HRS_B: payrollData.BNS_HRS_B,\n        BNS_RATE_B: payrollData.BNS_RATE_B,\n        BNS_HR_C: payrollData.BNS_HR_C,\n        BNS_RATE_C: payrollData.BNS_RATE_C,\n        BNS_HR_D: payrollData.BNS_HR_D,\n        BNS_RATE_D: payrollData.BNS_RATE_D,\n        PAYDATE: payrollData.PA,\n    }\n}\n\nexport const dateInitialState = {\n    NEWPAYDATE: '',\n    UPDATED: moment().format()\n}\n\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport { Button, Modal } from 'react-bootstrap';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport ToolkitProvider, { Search, CSVExport } from 'react-bootstrap-table2-toolkit';\nimport { deleteById, updateById } from '../../actions/payroll/payroll';\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\nimport { initialState, payrollDataMapping } from '../STATE';\nconst { SearchBar } = Search;\nconst { ExportCSVButton } = CSVExport;\n\nconst EmpSearchTable = ({ payroll, deleteById, updateById }) => {\n    const [confirm, setConfirm] = useState({\n        show: false,\n        id: ''\n    })\n\n    const { show, id } = confirm;\n\n    const onClickHandlerDelete = (cellContent) => {\n        setConfirm({\n            ...confirm,\n            show: true,\n            id: cellContent\n        })\n\n    }\n\n    // UPDATE ALL ASSOCIATES\n    const onClickUpdateAllHandler = () => {\n        payrollData.map(item => {\n            let data = item;\n            // Worked Flag\n            if (data.SCH_HRS !== 0) {\n                data.WRKD_FLG = 'X';\n            } else {\n                data.WRKD_FLG = 'N';\n            }\n            // Hours Verified Flag\n            if (data.REG_HRS - data.UNVH === data.REG_HRS) {\n                data.HRS_VER_FLG = 'X';\n            } else {\n                data.HRS_VER_FLG = 'N';\n            }\n            // Timesheet Flag\n            if (data.TS_HRS !== 0) {\n                data.TIMESHEET_FLG = 'X';\n            } else {\n                data.TIMESHEET_FLG = 'N';\n            }\n            // Pickup Pay Flag\n            if (data.SDP > 0) {\n                data.PICKUP_PAY_FLG = 'X';\n            } else {\n                data.PICKUP_PAY_FLG = 'N';\n            }\n            // Adjustment Flag\n            if (data.ADJUSTMENT !== \"\") {\n                data.ADJ_FLG = 'X';\n            } else {\n                data.ADJ_FLG = 'N';\n            }\n            // Bonus Flag\n            if ((data.SCH_HRS - data.VRF_HRS - data.UNVH) === data.REG_HRS) {\n                data.BNS_FLG = 'N';\n            } else {\n                data.BNS_FLG = 'X';\n            }\n            // Regular Hour\n            data.REG_HRS = +data.VRF_HRS + + data.SCH_HRS - data.UNVH - data.TS_HRS - data.BNS_HRS - data.BNS_HRS_B - data.BNS_HR_C - data.BNS_HR_D;\n\n            updateById(data._id, data);\n\n        })\n    }\n\n    const onClickHandlerUpdate = (id) => {\n        console.log(id)\n        function idMatch(payrollData) {\n            return payrollData._id === id;\n        }\n        const data = payrollData.find(idMatch)\n\n        // Worked Flag\n        if (data.SCH_HRS !== 0) {\n            data.WRKD_FLG = 'X';\n        } else {\n            data.WRKD_FLG = 'N';\n        }\n        // Hours Verified Flag\n        if (data.REG_HRS - data.UNVH === data.REG_HRS) {\n            data.HRS_VER_FLG = 'X';\n        } else {\n            data.HRS_VER_FLG = 'N';\n        }\n        // Timesheet Flag\n        if (data.TS_HRS !== 0) {\n            data.TIMESHEET_FLG = 'X';\n        } else {\n            data.TIMESHEET_FLG = 'N';\n        }\n        // Pickup Pay Flag\n        if (data.SDP > 0) {\n            data.PICKUP_PAY_FLG = 'X';\n        } else {\n            data.PICKUP_PAY_FLG = 'N';\n        }\n        // Adjustment Flag\n        if (data.ADJUSTMENT !== \"\") {\n            data.ADJ_FLG = 'X';\n        } else {\n            data.ADJ_FLG = 'N';\n        }\n        // Bonus Flag\n        if ((data.SCH_HRS - data.VRF_HRS - data.UNVH) === data.REG_HRS) {\n            data.BNS_FLG = 'N';\n        } else {\n            data.BNS_FLG = 'X';\n        }\n        // Regular Hour\n        data.REG_HRS = +data.VRF_HRS + + data.SCH_HRS - data.UNVH - data.TS_HRS - data.BNS_HRS - data.BNS_HRS_B - data.BNS_HR_C - data.BNS_HR_D;\n\n        console.log(data)\n\n        updateById(id, data);\n\n    }\n\n    const onSubmitHandler = () => {\n        deleteById(id);\n        setConfirm({\n            ...confirm,\n            show: false\n        })\n    }\n\n\n    const columns = [{\n        text: 'Position',\n        dataField: 'POSITION',\n        sort: true,\n        formatter: (cellContent, row) => {\n            if (cellContent === 0) {\n                return (\n                    <label>HHA</label>\n                );\n            } else if (cellContent === 1) {\n                return (\n                    <label>DSP</label>\n                );\n            } else if (cellContent === 2) {\n                return (\n                    <label>Office</label>\n                );\n            } else if (cellContent === 3) {\n                return (\n                    <label>Admin</label>\n                );\n            }\n        }\n    }, {\n        text: 'First Name',\n        dataField: 'FIRSTNAME',\n        sort: true\n    }, {\n        text: 'Last Name',\n        dataField: 'LASTNAME',\n        sort: true\n    }, {\n        text: 'Worked Flag',\n        dataField: 'WRKD_FLG',\n        sort: true\n    }, {\n        text: 'Hours Verified Flag',\n        dataField: 'HRS_VER_FLG',\n        sort: true\n    }, {\n        text: 'Bonus Flag',\n        dataField: 'BNS_FLG',\n        sort: true\n    }, {\n        text: 'Timesheet Flag',\n        dataField: 'TIMESHEET_FLG',\n        sort: true\n    }, {\n        text: 'Pickup Pay Flag',\n        dataField: 'PICKUP_PAY_FLG',\n        sort: true\n    }, {\n        text: 'Adjustment Flag',\n        dataField: 'ADJ_FLG',\n        sort: true\n    }, {\n        text: 'Adjustment',\n        dataField: 'ADJUSTMENT',\n        sort: true\n    }, {\n        text: 'Special Rate',\n        dataField: 'SP_RATE',\n        sort: true\n    }, {\n        text: 'Notes',\n        dataField: 'NOTES',\n        sort: true\n    }, {\n        text: 'Regular Hours',\n        dataField: 'REG_HRS',\n        sort: true\n    }, {\n        text: 'Scheduled Hours',\n        dataField: 'SCH_HRS',\n        sort: true\n    }, {\n        text: 'Unverfied Hours',\n        dataField: 'UNVH',\n        sort: true\n    }, {\n        text: 'Verified Hours',\n        dataField: 'VRF_HRS',\n        sort: true\n    }, {\n        text: 'Timesheet Hours',\n        dataField: 'TS_HRS',\n        sort: true\n    }, {\n        text: 'Show Up Pay',\n        dataField: 'SUP',\n        sort: true\n    }, {\n        text: 'Same Day Pay',\n        dataField: 'SDP',\n        sort: true\n    }, {\n        text: 'Bonus Hours',\n        dataField: 'BNS_HRS',\n        sort: true\n    }, {\n        text: 'Bonus Rate',\n        dataField: 'BNS_RATE',\n        sort: true\n    }, {\n        text: 'Bonus Hours B',\n        dataField: 'BNS_HRS_B',\n        sort: true\n    }, {\n        text: 'Bonus Rate B',\n        dataField: 'BNS_RATE_B',\n        sort: true\n    }, {\n        text: 'Bonus Hours C',\n        dataField: 'BNS_HR_C',\n        sort: true\n    }, {\n        text: 'Bonus Rate C',\n        dataField: 'BNS_RATE_C',\n        sort: true\n    }, {\n        text: 'Bonus Hours D',\n        dataField: 'BNS_HR_D',\n        sort: true\n    }, {\n        text: 'Bonus Rate D',\n        dataField: 'BNS_RATE_D',\n        sort: true\n    }, {\n        text: 'Pay Date',\n        dataField: 'PAYDATE',\n        sort: true\n    }, {\n        text: 'UPDATED',\n        dataField: 'UPDATED',\n        sort: true\n    }, {\n        dataField: '_id',\n        text: 'Delete',\n        sort: false,\n        formatter: (cellContent) => {\n            return (\n                <div>\n                    <button className=\"btn btn-dark\" onClick={e => { e.preventDefault(); onClickHandlerDelete(cellContent) }}>\n                        <i className=\"mdi mdi-delete text-danger\"></i>Delete\n                </button>\n                </div>\n            );\n        }\n    }, {\n        dataField: '_id',\n        text: 'Update',\n        sort: false,\n        formatter: (cellContent) => {\n            return (\n                <div>\n                    <button className=\"btn btn-dark\" onClick={e => { e.preventDefault(); onClickHandlerUpdate(cellContent) }}>\n                        <i className=\"mdi mdi-cloud-upload text-warning\"></i>Update\n              </button>\n                </div>\n            );\n        }\n    }\n    ]\n\n    const { loading, payrollData } = payroll;\n\n    const defaultSorted = [{\n        dataField: 'ID',\n        order: 'desc'\n    }];\n\n    return loading ? (\n        <h1>Edit Associate Data</h1>\n    ) : (\n            <div>\n                <Modal\n                    show={show}\n                    onHide={() => show(false)}\n                    aria-labelledby=\"example-modal-sizes-title-md\"\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title>Confirm Deletion</Modal.Title>\n                    </Modal.Header>\n\n                    <Modal.Body>\n                        <p>Are you sure you want to delete this record?</p>\n                    </Modal.Body>\n\n                    <Modal.Footer className=\"fleex-wrap\">\n                        <Button variant=\"primary m-2\" onClick={(e) => { e.preventDefault(); onSubmitHandler() }}>Confirm</Button>\n                        <Button variant=\"light m-2\" onClick={(e) => { e.preventDefault(); setConfirm({ ...confirm, show: false }) }}>Cancel</Button>\n                    </Modal.Footer>\n                </Modal>\n\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <h4 className=\"card-title\">Associate Raw Payroll Data</h4>\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        <ToolkitProvider\n                                            // Key that differentiates each row for updating\n                                            keyField=\"_id\"\n                                            bootstrap4\n                                            data={payrollData}\n                                            columns={columns}\n                                            search\n\n                                        >\n                                            {\n                                                props => (\n                                                    <div>\n                                                        <ExportCSVButton {...props.csvProps}>\n                                                            <button type=\"button\" className=\"btn download btn-danger btn-rounded btn-icon\">\n                                                                <i className=\"mdi mdi-download\"></i>\n                                                            </button>\n                                                        </ExportCSVButton>\n\n                                                        <button type=\"button\" onClick={onClickUpdateAllHandler} className=\"btn download btn-outline-warning btn-rounded btn-icon\">\n                                                            <i className=\"mdi mdi-auto-fix\"></i>\n                                                        </button>\n\n                                                        {/* <button type=\"button\" className=\"deleteAll download btn btn-outline-danger btn-rounded btn-icon\">\n                                                            <i className=\"mdi mdi-delete-forever\"></i>\n                                                        </button> */}\n\n                                                        <div className=\"d-flex align-items-center\">\n                                                            <p className=\"mb-2 mr-2\">Search in table:</p>\n                                                            <SearchBar {...props.searchProps} />\n                                                        </div>\n\n                                                        <BootstrapTable\n                                                            cellEdit={cellEditFactory({ mode: 'click' })}\n                                                            defaultSorted={defaultSorted}\n                                                            pagination={paginationFactory()}\n                                                            {...props.baseProps}\n                                                            wrapperClasses=\"table-responsive\"\n                                                            striped={true}\n\n                                                        />\n                                                    </div>\n                                                )\n                                            }\n                                        </ToolkitProvider>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div >\n        )\n}\n\nconst mapStateToProps = (state) => ({\n    payroll: state.payroll,\n})\n\nexport default connect(mapStateToProps, { deleteById, updateById })(EmpSearchTable);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport { Button, Modal } from 'react-bootstrap';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport ToolkitProvider, { Search, CSVExport } from 'react-bootstrap-table2-toolkit';\nimport { deleteById, updateById } from '../../actions/payroll/payroll';\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\nconst { SearchBar } = Search;\nconst { ExportCSVButton } = CSVExport;\n\nconst EmpPrimaryData = ({ payroll, deleteById, updateById }) => {\n    const [confirm, setConfirm] = useState({\n        show: false,\n        id: ''\n    })\n\n    const { show, id } = confirm;\n\n    const onClickHandlerDelete = (cellContent) => {\n        setConfirm({\n            ...confirm,\n            show: true,\n            id: cellContent\n        })\n\n    }\n\n    const onClickHandlerUpdate = (id) => {\n\n        function idMatch(payrollData) {\n            return payrollData._id === id;\n        }\n        const data = payrollData.find(idMatch)\n\n        updateById(id, data);\n\n    }\n\n    const onSubmitHandler = () => {\n        deleteById(id);\n        setConfirm({\n            ...confirm,\n            show: false\n        })\n    }\n\n\n    const columns = [\n        {\n            text: 'Worked Flag',\n            dataField: 'WRKD_FLG',\n            sort: true,\n            formatter: (cellContent, row) => {\n                if (cellContent === 'X') {\n                    return (\n                        <label className=\"badge badge-success\">WORKED</label>\n                    );\n                }\n            }\n        }, {\n            text: 'Hours Verified Flag',\n            dataField: 'HRS_VER_FLG',\n            sort: true,\n            formatter: (cellContent, row) => {\n                if (cellContent === 'X') {\n                    return (\n                        <label className=\"badge badge-success\">VERIFIED</label>\n                    );\n                } else if (cellContent === 'N') {\n                    return (\n                        <label className=\"badge badge-danger\">UNVERIFIED</label>\n                    );\n                }\n            }\n        }, {\n            text: 'Bonus Flag',\n            dataField: 'BNS_FLG',\n            sort: true,\n            formatter: (cellContent, row) => {\n                if (cellContent === 'X' || '') {\n                    return (\n                        <label className=\"badge badge-warning\">BONUS</label>\n                    );\n                }\n            }\n        }, {\n            text: 'Timesheet Flag',\n            dataField: 'TIMESHEET_FLG',\n            sort: true,\n            formatter: (cellContent, row) => {\n                if (cellContent === 'X') {\n                    return (\n                        <label className=\"badge badge-info\">TIMESHEET</label>\n                    );\n                } else {\n                    return (\n                        <label></label>\n                    );\n                }\n            }\n        }, {\n            text: 'Pickup Pay Flag',\n            dataField: 'PICKUP_PAY_FLG',\n            sort: true,\n            formatter: (cellContent, row) => {\n                if (cellContent === 'X') {\n                    return (\n                        <label className=\"badge badge-primary\">PICKUP PAY</label>\n                    );\n                } else {\n                    return (\n                        <label></label>\n                    );\n                }\n            }\n        }, {\n            text: 'Adjustment Flag',\n            dataField: 'ADJ_FLG',\n            sort: true,\n            formatter: (cellContent, row) => {\n                if (cellContent !== 'N') {\n                    return (\n                        <label className=\"badge badge-dark\">ADJUSTMENT</label>\n                    );\n                } else {\n                    return (\n                        <label></label>\n                    );\n                }\n            }\n        }, {\n            text: 'Special Rate',\n            dataField: 'SP_RATE',\n            sort: true\n        },\n        // {\n        //     text: 'Notes',\n        //     dataField: 'NOTES',\n        //     sort: true\n        // }, \n        {\n            text: 'Regular Hours',\n            dataField: 'REG_HRS',\n            sort: true\n        }, {\n            text: 'Scheduled Hours',\n            dataField: 'SCH_HRS',\n            sort: true\n        }, {\n            text: 'Unverfied Hours',\n            dataField: 'UNVH',\n            sort: true\n        }, {\n            text: 'Verified Hours',\n            dataField: 'VRF_HRS',\n            sort: true\n        }, {\n            text: 'Timesheet Hours',\n            dataField: 'TS_HRS',\n            sort: true\n        }, {\n            text: 'Show Up Pay',\n            dataField: 'SUP',\n            sort: true\n        }, {\n            text: 'Same Day Pay',\n            dataField: 'SDP',\n            sort: true\n        }, {\n            text: 'Bonus Hours',\n            dataField: 'BNS_HRS',\n            sort: true\n        }, {\n            text: 'Bonus Rate',\n            dataField: 'BNS_RATE',\n            sort: true\n        }, {\n            text: 'Bonus Hours B',\n            dataField: 'BNS_HRS_B',\n            sort: true\n        }, {\n            text: 'Bonus Rate B',\n            dataField: 'BNS_RATE_B',\n            sort: true\n        }, {\n            text: 'Bonus Hours C',\n            dataField: 'BNS_HR_C',\n            sort: true\n        }, {\n            text: 'Bonus Rate C',\n            dataField: 'BNS_RATE_C',\n            sort: true\n        }, {\n            text: 'Bonus Hours D',\n            dataField: 'BNS_HR_D',\n            sort: true\n        }, {\n            text: 'Bonus Rate D',\n            dataField: 'BNS_RATE_D',\n            sort: true\n        }, {\n            text: 'Pay Date',\n            dataField: 'PAYDATE',\n            sort: true\n        }\n    ]\n\n    const { loading, payrollData } = payroll;\n\n    const defaultSorted = [{\n        dataField: 'id',\n        order: 'desc'\n    }];\n\n    return loading ? (\n        <h1>Search by Associate ID</h1>\n    ) : (\n            <div>\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <h4 className=\"card-title\">Associate Payroll Data</h4>\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        <ToolkitProvider\n                                            keyField=\"ID\"\n                                            bootstrap4\n                                            data={payrollData}\n                                            columns={columns}\n                                            search\n\n                                        >\n                                            {\n                                                props => (\n                                                    <div>\n                                                        <ExportCSVButton {...props.csvProps}>\n                                                            <button type=\"button\" className=\"btn download btn-danger btn-rounded btn-icon\">\n                                                                <i className=\"mdi mdi-download\"></i>\n                                                            </button>\n                                                        </ExportCSVButton>\n                                                        <div className=\"d-flex align-items-center\">\n                                                            <p className=\"mb-2 mr-2\">Search in table:</p>\n                                                            <SearchBar {...props.searchProps} />\n                                                        </div>\n                                                        <BootstrapTable\n                                                            cellEdit={cellEditFactory({ mode: 'dbclick' })}\n                                                            defaultSorted={defaultSorted}\n                                                            pagination={paginationFactory()}\n                                                            {...props.baseProps}\n                                                            wrapperClasses=\"table-responsive\"\n                                                            striped={true}\n\n                                                        />\n                                                    </div>\n                                                )\n                                            }\n                                        </ToolkitProvider>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div >\n        )\n}\n\nconst mapStateToProps = (state) => ({\n    payroll: state.payroll,\n})\n\nexport default connect(mapStateToProps, { deleteById, updateById })(EmpPrimaryData);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Alert } from \"react-bootstrap\";\n\nconst Alerts = ({ alert }) => {\n    return alert.msg === null ? (\n        <div></div>\n    ) : (\n            <Alert variant={alert.alertType}>\n                {alert.msg}\n            </Alert>\n        );\n}\n\nconst mapStateToProps = state => ({\n    alert: state.alert\n});\n\nexport default connect(mapStateToProps)(Alerts);","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect, withRouter } from \"react-router-dom\";\nimport Widget1 from \"../widgets/widget_1\";\nimport Widget2 from \"../widgets/widget_2\";\nimport Widget3 from \"../widgets/widget_3\";\nimport Widget4 from \"../widgets/widget_4\";\nimport Spinner from \"../isLoading/spinner\";\nimport EmpTable from \"../widgets/empTable\";\nimport EmpSearchTable from \"../widgets/empSearchTable\";\nimport EmpPrimaryData from \"../widgets/empPrimaryData\";\nimport Alert from '../alerts/alerts';\n\n\nconst Landing = ({ auth, payroll, history }) => {\n\n  const [editButton, setEditButton] = useState(false);\n\n  const onClickHandler = (e) => {\n    e.preventDefault();\n    editButton ? setEditButton(false) : setEditButton(true)\n\n  }\n\n  useEffect(() => {\n    if (!auth.isAuthenticated) {\n      history.push('/login')\n    }\n  }, [auth])\n\n\n\n  return !payroll.payrollData[0] ? (\n    <div>\n      <h1>Select a Payroll Date</h1>\n\n      <Alert />\n    </div>\n  ) : (\n      <div>\n        <div className=\"row\">\n          <Widget1 payroll={payroll} />\n          <Widget2 payroll={payroll} />\n          <Widget3 payroll={payroll} />\n          <Widget4 payroll={payroll} />\n        </div>\n        <div className=\"col-md-6 grid-margin\">\n          <button hidden={payroll.loading} onClick={onClickHandler} type=\"button\" className=\"btn btn-primary btn-rounded btn-icon\">\n            <i className=\"mdi mdi-table-edit\"></i>\n          </button>\n        </div>\n        {!editButton ? <EmpTable /> : <EmpSearchTable />}\n      </div >\n    )\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  payroll: state.payroll,\n});\n\nexport default connect(mapStateToProps)(withRouter(Landing));\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, Redirect, withRouter } from \"react-router-dom\";\nimport { Form } from \"react-bootstrap\";\nimport { login } from \"../../actions/auth/auth\";\nimport Alert from \"../alerts/alerts\";\nimport Spinner from \"../isLoading/spinner\";\n\nconst Login = ({ login, auth, history }) => {\n  const [loginData, setLoginData] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const { email, password } = loginData;\n\n  useEffect(() => {\n    if (auth.isAuthenticated) {\n      history.push('/')\n    }\n  }, [auth])\n\n\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    login(email, password);\n  };\n\n  const onChange = (e) => {\n    setLoginData({ ...loginData, [e.target.name]: e.target.value });\n  };\n\n  return localStorage.token ? (\n    <Spinner />\n  ) : (\n      <div>\n        <div className=\"d-flex align-items-center login-card auth px-0\">\n          <div className=\"row w-100 mx-0\">\n            <div className=\"col-lg-8 mx-auto\">\n              <div className=\"card text-left py-5 px-4 px-sm-5\">\n                <div className=\"brand-logo\">\n                  <img\n                    src={require(\"../../../assets/images/halo_logo.png\")}\n                    alt=\"logo\"\n                  />\n                </div>\n                <h4>Halo Payroll Dashboard</h4>\n                <h6 className=\"font-weight-light\">Sign in to continue.</h6>\n                <Form className=\"pt-3\" onSubmit={onSubmit}>\n                  <Form.Group className=\"d-flex search-field\">\n                    <Form.Control\n                      type=\"email\"\n                      name=\"email\"\n                      value={email}\n                      onChange={onChange}\n                      placeholder=\"Username\"\n                      size=\"lg\"\n                      className=\"h-auto\"\n                    />\n                  </Form.Group>\n                  <Form.Group className=\"d-flex search-field\">\n                    <Form.Control\n                      type=\"password\"\n                      name=\"password\"\n                      value={password}\n                      onChange={onChange}\n                      placeholder=\"Password\"\n                      size=\"lg\"\n                      className=\"h-auto\"\n                    />\n                  </Form.Group>\n                  <div className=\"mt-3\">\n                    <button\n                      type=\"submit\"\n                      value=\"login\"\n                      className=\"btn btn-block btn-primary btn-lg font-weight-medium auth-form-btn\"\n                    >\n                      SIGN IN\n                  </button>\n                  </div>\n\n                  <div className=\"text-center mt-4 font-weight-light\">\n                    Don't have an account?{\" \"}\n                    <Link to=\"/register\" className=\"text-primary\">\n                      Create\n                  </Link>\n                  </div>\n                </Form>\n              </div>\n              <Alert />\n            </div>\n\n          </div>\n        </div>\n\n      </div>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { login })(withRouter(Login));\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, Redirect, withRouter } from \"react-router-dom\";\nimport { Form } from \"react-bootstrap\";\nimport { register } from \"../../actions/auth/auth\";\n\nconst Register = ({ register, isAuthenticated, history }) => {\n  const [registerData, setRegisterData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const { name, email, password } = registerData;\n\n  if (isAuthenticated) {\n    history.push('/')\n  }\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    register(name, email, password);\n  };\n\n  const onChange = (e) => {\n    setRegisterData({ ...registerData, [e.target.name]: e.target.value });\n  };\n\n  return (\n    <div>\n      <div className=\"d-flex align-items-center login-card auth px-0\">\n        <div className=\"row w-100 mx-0\">\n          <div className=\"col-lg-8 mx-auto\">\n            <div className=\"card text-left py-5 px-4 px-sm-5\">\n              <div className=\"brand-logo\">\n                <img\n                  src={require(\"../../../assets/images/halo_logo.png\")}\n                  alt=\"logo\"\n                />\n              </div>\n              <h4>Halo Payroll Dashboard</h4>\n              <h6 className=\"font-weight-light\">Sign in to continue.</h6>\n              <Form className=\"pt-6\" onSubmit={onSubmit}>\n                <Form.Group className=\"d-flex search-field\">\n                  <Form.Control\n                    type=\"text\"\n                    name=\"name\"\n                    value={name}\n                    onChange={onChange}\n                    placeholder=\"Username\"\n                    size=\"lg\"\n                    className=\"h-auto\"\n                  />\n                </Form.Group>\n                <Form.Group className=\"d-flex search-field\">\n                  <Form.Control\n                    type=\"email\"\n                    name=\"email\"\n                    value={email}\n                    onChange={onChange}\n                    placeholder=\"Email\"\n                    size=\"lg\"\n                    className=\"h-auto\"\n                  />\n                </Form.Group>\n                <Form.Group className=\"d-flex search-field\">\n                  <Form.Control\n                    type=\"password\"\n                    name=\"password\"\n                    value={password}\n                    onChange={onChange}\n                    placeholder=\"Password\"\n                    size=\"lg\"\n                    className=\"h-auto\"\n                  />\n                </Form.Group>\n                <div className=\"mt-3\">\n                  <button\n                    type=\"submit\"\n                    value=\"login\"\n                    className=\"btn btn-block btn-primary btn-lg font-weight-medium auth-form-btn\"\n                  >\n                    REGISTER ACCOUNT\n                  </button>\n                </div>\n\n                <div className=\"text-center mt-4 font-weight-light\">\n                  Already have an account?{\" \"}\n                  <Link to=\"/login\" className=\"text-primary\">\n                    Login\n                  </Link>\n                </div>\n              </Form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { register })(withRouter(Register));\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router-dom\";\nimport Spinner from '../isLoading/spinner';\nimport { uploadFile } from '../../actions/upload/upload';\nimport { Form } from 'react-bootstrap';\nimport Alerts from \"../alerts/alerts\";\nimport { removeAlert } from '../../actions/alerts';\n\nconst Upload = ({ auth, history, isLoading, uploadFile, removeAlert }) => {\n\n    useEffect(() => {\n        removeAlert();\n\n    }, [])\n\n    const [uploadData, setUploadData] = useState({\n        selectedFile: null,\n        fileName: null,\n        loading: false\n    });\n\n    const onChangeHandler = e => {\n        setUploadData({\n            selectedFile: e.target.files[0],\n            fileName: e.target.files[0].name\n        });\n    };\n    const onClickHandler = e => {\n        e.preventDefault();\n        setUploadData({ ...uploadData, loading: true })\n        const data = new FormData();\n        data.append(\"file\", uploadData.selectedFile);\n        uploadFile(data);\n    };\n\n    return isLoading ? (\n        <Spinner />\n    ) : (\n            <div className=\"col-12 grid-margin stretch-card\">\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <h4 className=\"card-title\">Upload Payroll File</h4>\n                        <p className=\"card-description\"> Validate the format before uploading </p>\n                        <form>\n                            <Form.Group>\n                                <div className=\"mb-3\">\n                                    <Form.File id=\"formcheck-api-custom\" custom>\n                                        <Form.File.Input name=\"selectedFile\" onChange={onChangeHandler} />\n                                        <Form.File.Label data-browse=\"Upload File\">\n                                            {uploadData.fileName}\n                                        </Form.File.Label>\n                                    </Form.File>\n                                </div>\n                                <Alerts />\n                            </Form.Group>\n                            <button type=\"submit\" className=\"btn btn-primary mr-2\" onClick={onClickHandler}>Submit</button>\n                            <button className=\"btn btn-dark\">Cancel</button>\n                        </form>\n\n                    </div>\n                </div>\n            </div>\n        )\n}\n\nconst mapStateToProps = (state) => ({\n    isLoading: state.auth.loading,\n    uploadFile: state.upload,\n    auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { uploadFile, removeAlert })(withRouter(Upload));\n","import { UPLOAD_FILE, SET_ERROR_ALERT, SET_SUCCESS_ALERT } from '../../actionTypes/types';\nimport { loadUser } from '../auth/auth';\nimport axios from 'axios';\n\nexport const uploadFile = (file) => async dispatch => {\n    console.log(\"Uploading file start!\")\n\n    try {\n        const res = await axios.post(\"/payroll/upload\", file);\n\n        dispatch({\n            type: UPLOAD_FILE,\n            payload: res.data\n        })\n        const success = res.data.success[0].msg;\n\n        if (success) {\n            dispatch({\n                type: SET_SUCCESS_ALERT,\n                payload: success\n            })\n        }\n        dispatch(loadUser())\n    } catch (err) {\n\n\n        const error = err.response.data.errors[0].msg;\n\n        if (error) {\n            dispatch({\n                type: SET_ERROR_ALERT,\n                payload: error\n            });\n        }\n        dispatch(loadUser())\n\n    }\n}","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Widget1 from \"../widgets/widget_1\";\nimport Widget2 from \"../widgets/widget_2\";\nimport Widget3 from \"../widgets/widget_3\";\nimport Widget4 from \"../widgets/widget_4\";\nimport Spinner from \"../isLoading/spinner\";\nimport EmpSearchTable from \"../widgets/empSearchTable\";\nimport EmpPrimaryData from \"../widgets/empPrimaryData\";\nimport Alerts from \"../alerts/alerts\";\nimport { removeAlert } from '../../actions/alerts';\n\nconst Employees = ({ auth, payroll, removeAlert }) => {\n\n    const [editButton, setEditButton] = useState(false);\n\n    const onClickHandler = (e) => {\n        e.preventDefault();\n        editButton ? setEditButton(false) : setEditButton(true)\n\n    }\n\n    useEffect(() => {\n        removeAlert();\n    }, [])\n\n    let associateName = \"\";\n\n    if (payroll.payrollData[0]) {\n        associateName = `${payroll.payrollData[0].LASTNAME}, ${payroll.payrollData[0].FIRSTNAME}`\n    }\n\n    return auth.loading === true ? (\n        <Spinner></Spinner>\n    ) : (\n            <div>\n                {payroll.loading ? <h1></h1> : <h1>{associateName}</h1>}\n                <div className=\"row\">\n                    <Widget1 payroll={payroll} />\n                    <Widget2 payroll={payroll} />\n                    <Widget3 payroll={payroll} />\n                    <Widget4 payroll={payroll} />\n                    <div className=\"col-md-6 grid-margin\">\n                        <button hidden={payroll.loading} onClick={onClickHandler} type=\"button\" className=\"btn btn-primary btn-rounded btn-icon\">\n                            <i className=\"mdi mdi-table-edit\"></i>\n                        </button>\n                    </div>\n\n                </div>\n                {!editButton ? <EmpPrimaryData /> : <EmpSearchTable />}\n\n\n                <Alerts />\n\n            </div>\n        )\n}\n\nconst mapStateToProps = (state) => ({\n    payroll: state.payroll,\n    auth: state.auth,\n})\n\nexport default connect(mapStateToProps, { removeAlert })(withRouter(Employees))\n","import { GET_PAY_DATES, SET_SUCCESS_ALERT, SET_ERROR_ALERT } from '../../actionTypes/types';\nimport { loadUser } from '../../actions/auth/auth';\nimport axios from 'axios';\n\n\nexport const loadDates = () => async (dispatch) => {\n    try {\n        const res = await axios.get(\"/payroll/records/paydates/all\");\n        dispatch({\n            type: GET_PAY_DATES,\n            payload: res.data\n        })\n        dispatch(loadUser());\n    } catch (err) {\n        console.log(err)\n    }\n}\n\nexport const saveDate = (date) => async dispatch => {\n    try {\n        const res = await axios.post(\"/payroll/records/date/new\", date);\n        dispatch({\n            type: SET_SUCCESS_ALERT,\n            payload: res.data.success[0].msg\n        })\n\n        dispatch(loadUser());\n        window.location.reload();\n    } catch (err) {\n        const error = err.response.data.errors[0].msg;\n        dispatch({\n            type: SET_ERROR_ALERT,\n            payload: error\n        })\n\n        dispatch(loadUser());\n    }\n}\n\nexport const deletePayDate = (id) => async dispatch => {\n    try {\n        const res = await axios.delete(`payroll/records/paydate/remove/${id}`)\n\n        dispatch({\n            type: SET_SUCCESS_ALERT,\n            payload: res.data.success[0].msg\n        })\n\n        window.location.reload();\n        dispatch(loadUser());\n    } catch (err) {\n        const error = err.response.data.errors[0].msg;\n        dispatch({\n            type: SET_ERROR_ALERT,\n            payload: error\n        })\n\n        dispatch(loadUser());\n    }\n}\n","import {\n    GET_ALL_ASSOCIATES,\n    // GET_ASSOCIATE_BY_ID,\n    // SAVE_NEW_ASSOCIATE,\n    // DELETE_ASSOCIATE_BY_ID,\n    SET_ERROR_ALERT,\n    SET_SUCCESS_ALERT,\n} from '../../actionTypes/types';\nimport { loadUser } from '../../actions/auth/auth';\nimport axios from 'axios';\n\n\nexport const loadAssociates = () => async (dispatch) => {\n    try {\n        const res = await axios.get(\"/payroll/records/associates/all\");\n        dispatch({\n            type: GET_ALL_ASSOCIATES,\n            payload: res.data\n        })\n        dispatch(loadUser());\n    } catch (err) {\n        console.log(err)\n    }\n}\n\nexport const saveAssociate = (data) => async dispatch => {\n    try {\n        const res = await axios.post(\"/payroll/associate/new\", data);\n        console.log(res)\n        dispatch({\n            type: SET_SUCCESS_ALERT,\n            payload: res.data.success[0].msg\n        })\n        // window.location.reload()\n        dispatch(loadUser());\n    } catch (err) {\n        const error = err.response.data.errors[0].msg;\n        dispatch({\n            type: SET_ERROR_ALERT,\n            payload: error\n        })\n\n        dispatch(loadUser());\n    }\n}\n\nexport const deleteAssociate = (id) => async dispatch => {\n    try {\n        const res = await axios.delete(`payroll/records/associate/remove/${id}`)\n\n        dispatch({\n            type: SET_SUCCESS_ALERT,\n            payload: res.data.success[0].msg\n        })\n        dispatch(loadUser());\n    } catch (err) {\n        const error = err.response.data.errors[0].msg;\n        dispatch({\n            type: SET_ERROR_ALERT,\n            payload: error\n        })\n\n        dispatch(loadUser());\n    }\n}\n","import React, { useState } from 'react';\nimport { Dropdown } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { getPayrollByDate } from '../../../actions/payroll/payroll';\nconst PaydateDropdown = ({ paydates, getPayrollByDate }) => {\n    const [selectedDate, setSelectedDate] = useState({\n        date: null,\n    })\n    const onClickHandler = (e) => {\n        e.preventDefault();\n        getPayrollByDate(e.target.name)\n        setSelectedDate({\n            ...selectedDate,\n            date: e.target.name\n        })\n    }\n\n    const listDates = paydates.map(record => {\n        return record.map(item => {\n            return <Dropdown.Item name={item.PAYDATE} key={item._id} onClick={onClickHandler}>{item.PAYDATE}</Dropdown.Item>\n        })\n    });\n\n    return (\n\n        <Dropdown>\n            <Dropdown.Toggle variant=\"btn btn-outline-primary\" id=\"dropdownMenuOutlineButton1\">\n                {selectedDate.date === null ? 'Pay Date Options' : selectedDate.date}\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n                {listDates}\n            </Dropdown.Menu>\n        </Dropdown>\n\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    paydates: state.paydates\n})\nexport default connect(mapStateToProps, { getPayrollByDate })(PaydateDropdown);\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux';\nimport { getPayrollById } from '../../../actions/payroll/payroll';\nimport { loadAssociates } from '../../../actions/associate/associate';\nimport Select from 'react-select';\nimport { Form, Col, Button } from 'react-bootstrap';\n\nconst PayrollSearch = ({ getPayrollById, loadAssociates, associate, auth }) => {\n\n    const associateSelector = associate.map(associate => {\n        return {\n            value: associate.ID, label: `${associate.LASTNAME}, ${associate.FIRSTNAME} ${associate.ID}`\n        }\n    })\n\n    const associateHandler = (e) => {\n        getPayrollById(e.value);\n    }\n\n    const styleSheet = {\n        input: (base, state) => ({\n            ...base,\n            color: 'white'\n\n        })\n    };\n\n    return (\n        <li className=\"nav-item w-100\">\n\n            <Select\n                type=\"text\"\n                placeholder=\"Select an Associate\"\n                onChange={associateHandler}\n                options={\n                    associateSelector\n                }\n                styles={styleSheet}\n            />\n\n\n\n        </li>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    payroll: state.payroll,\n    auth: state.auth,\n    associate: state.associate.associate\n})\n\nexport default connect(mapStateToProps, { getPayrollById, loadAssociates })(PayrollSearch)\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dropdown } from \"react-bootstrap\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Trans } from \"react-i18next\";\nimport { logout } from \"../../actions/auth/auth\";\nimport { loadDates } from \"../../actions/paydates/paydates\";\nimport { loadAssociates } from '../../actions/associate/associate';\n\nimport PaydateDropdown from \"./paydateDropdown/paydateDropdown\";\nimport PayrollSearch from \"./payrollSearch/payrollSearch\";\n\n\nconst Navbar = ({ auth, logout, loadDates, loadAssociates, paydates, history }) => {\n\n  const { location } = history;\n\n  const toggleOffcanvas = () => {\n    document.querySelector(\".sidebar-offcanvas\").classList.toggle(\"active\");\n  }\n\n  useEffect(() => {\n    loadDates();\n    loadAssociates();\n  }, [loadDates])\n\n\n  const logoutUser = (e) => {\n    e.preventDefault();\n    logout();\n  }\n\n  let searchHandler = <div></div>;\n  if (location.pathname === \"/\") {\n    searchHandler = <PaydateDropdown />;\n  } else if (location.pathname === \"/employees\") {\n    searchHandler = <PayrollSearch />;\n  } else {\n    searchHandler = <div></div>\n  }\n\n  return !auth.isAuthenticated || !auth.user ? (\n    <div></div>\n  ) : (\n      <nav className=\"navbar p-0 fixed-top d-flex flex-row\">\n        <div className=\"navbar-brand-wrapper d-flex d-lg-none align-items-center justify-content-center\">\n          <Link className=\"navbar-brand brand-logo-mini\" to=\"/\">\n            <img\n              src={require(\"../../../assets/images/halo_logo.png\")}\n              alt=\"logo\"\n            />\n          </Link>\n        </div>\n        <div className=\"navbar-menu-wrapper flex-grow d-flex align-items-stretch\">\n          <button\n            className=\"navbar-toggler align-self-center\"\n            type=\"button\"\n            onClick={() => document.body.classList.toggle(\"sidebar-icon-only\")}\n          >\n            <span className=\"mdi mdi-menu\"></span>\n          </button>\n          <ul className=\"navbar-nav w-100\">\n\n            {/* {location.pathname === \"/employees\" ? <PayrollSearch /> : <PaydateDropdown />} */}\n            {searchHandler}\n          </ul>\n          <ul className=\"navbar-nav navbar-nav-right\">\n            <div as=\"li\" className=\"nav-item d-none d-lg-block\">\n              <div as=\"li\" className=\"nav-item dropdown\"></div>\n              <div className=\"nav-link btn btn-success create-new-button no-caret\">\n                <Link to=\"/upload\" className=\"nav-link\">  + <Trans>Upload Payroll</Trans> </Link>\n              </div>\n            </div>\n\n            <Dropdown alignRight as=\"li\" className=\"nav-item\">\n              <Dropdown.Toggle\n                as=\"a\"\n                className=\"nav-link cursor-pointer no-caret\"\n              >\n                <div className=\"navbar-profile\">\n                  <p className=\"mb-0 d-none d-sm-block navbar-profile-name\">\n                    <Trans>{auth.user.name.toUpperCase()}</Trans>\n                  </p>\n                  <i className=\"mdi mdi-menu-down d-none d-sm-block\"></i>\n                </div>\n              </Dropdown.Toggle>\n\n              <Dropdown.Menu className=\"navbar-dropdown preview-list navbar-profile-dropdown-menu\">\n                <Dropdown.Divider />\n                <Dropdown.Item\n                  href=\"!#\"\n                  onClick={(evt) => evt.preventDefault()}\n                  className=\"preview-item\"\n                >\n                  <div className=\"preview-thumbnail\">\n                    <div className=\"preview-icon bg-dark rounded-circle\">\n                      <i className=\"mdi mdi-logout text-danger\"></i>\n                    </div>\n                  </div>\n                  <div className=\"preview-item-content\">\n                    <p className=\"preview-subject mb-1\" onClick={logoutUser}>\n                      <Link to=\"/login\" className=\"nav-link\"><Trans>Log Out</Trans></Link>\n                    </p>\n                  </div>\n                </Dropdown.Item>\n                <Dropdown.Divider />\n\n              </Dropdown.Menu>\n            </Dropdown>\n          </ul>\n          <button\n            className=\"navbar-toggler navbar-toggler-right d-lg-none align-self-center\"\n            type=\"button\"\n            onClick={toggleOffcanvas}\n          >\n            <span className=\"mdi mdi-format-line-spacing\"></span>\n          </button>\n        </div>\n      </nav>\n    );\n\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  paydates: state.paydates,\n})\n\nexport default connect(mapStateToProps, { logout, loadDates, loadAssociates })(withRouter(Navbar));","import React, { useState, useEffect } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Trans } from 'react-i18next';\nimport { logout } from '../../actions/auth/auth';\n\n\nconst Sidebar = (props) => {\n  const { auth } = props;\n\n  const [menuState, setMenuState] = useState({});\n\n\n  const onRouteChanged = () => {\n    document.querySelector(\"#sidebar\").classList.remove(\"active\");\n    Object.keys(menuState).forEach((i) => {\n      setMenuState({ [i]: false });\n    });\n\n    const dropdownPaths = [\n      { path: \"/apps\", state: \"appsMenuOpen\" },\n      { path: \"/basic-ui\", state: \"basicUiMenuOpen\" },\n      { path: \"/advanced-ui\", state: \"advancedUiMenuOpen\" },\n      { path: \"/form-elements\", state: \"formElementsMenuOpen\" },\n      { path: \"/tables\", state: \"tablesMenuOpen\" },\n      { path: \"/maps\", state: \"mapsMenuOpen\" },\n      { path: \"/icons\", state: \"iconsMenuOpen\" },\n      { path: \"/charts\", state: \"chartsMenuOpen\" },\n      { path: \"/user-pages\", state: \"userPagesMenuOpen\" },\n      { path: \"/error-pages\", state: \"errorPagesMenuOpen\" },\n      { path: \"/general-pages\", state: \"generalPagesMenuOpen\" },\n      { path: \"/ecommerce\", state: \"ecommercePagesMenuOpen\" },\n      { path: \"/editors\", state: \"editorsMenuOpen\" },\n    ];\n\n    dropdownPaths.forEach((obj) => {\n      if (isPathActive(obj.path)) {\n        setMenuState({ [obj.state]: true });\n      }\n    });\n  };\n\n  const isPathActive = (path) => {\n    return props.location.pathname.startsWith(path);\n  };\n\n  useEffect(() => {\n    if (auth.user) {\n      onRouteChanged();\n      // add class 'hover-open' to sidebar navitem while hover in sidebar-icon-only menu\n      const body = document.querySelector(\"body\");\n      document.querySelectorAll(\".sidebar .nav-item\").forEach((el) => {\n        el.addEventListener(\"mouseover\", function () {\n          if (body.classList.contains(\"sidebar-icon-only\")) {\n            el.classList.add(\"hover-open\");\n          }\n        });\n        el.addEventListener(\"mouseout\", function () {\n          if (body.classList.contains(\"sidebar-icon-only\")) {\n            el.classList.remove(\"hover-open\");\n          }\n        });\n      });\n    }\n\n  }, []);\n\n  useEffect(() => {\n    if (auth.user) {\n      if (props.location.pathname !== props.history.location.pathname) {\n        onRouteChanged();\n      }\n    }\n\n  }, []);\n\n\n\n  return !auth.isAuthenticated || !auth.user ? (\n    <div></div>\n  ) : (\n      <nav className=\"sidebar sidebar-offcanvas\" id=\"sidebar\">\n        <div className=\"sidebar-brand-wrapper d-none d-lg-flex align-items-center justify-content-center fixed-top\">\n          <a className=\"sidebar-brand brand-logo\" href=\"/\">\n            <img src={require(\"../../../assets/images/halo_logo.png\")} alt=\"logo\" />\n          </a>\n          <a className=\"sidebar-brand brand-logo-mini\" href=\"/\">\n            <img\n              src={require(\"../../../assets/images/halo_logo.png\")}\n              alt=\"logo\"\n            />\n          </a>\n        </div>\n        <ul className=\"nav\">\n          <li className=\"nav-item profile\">\n            <div className=\"profile-desc\">\n              <div className=\"profile-name\">\n                <h5 className=\"mb-0 font-weight-normal\">\n                  <Trans>{auth.user.name}</Trans>\n                </h5>\n                <span>\n                  <Trans>Admin</Trans>\n                </span>\n              </div>\n            </div>\n          </li>\n          <li className=\"nav-item nav-category\">\n            <span className=\"nav-link\">\n              <Trans>Navigation</Trans>\n            </span>\n          </li>\n          <li\n            className={\n              isPathActive(\"/dashboard\")\n                ? \"nav-item menu-items active\"\n                : \"nav-item menu-items\"\n            }\n          >\n            <Link className=\"nav-link\" to=\"/\">\n              <span className=\"menu-icon\">\n                <i className=\"mdi mdi-speedometer\"></i>\n              </span>\n              <span className=\"menu-title\">\n                <Trans>Dashboard</Trans>\n              </span>\n            </Link>\n          </li>\n          <li\n            className={\n              isPathActive(\"/upload\")\n                ? \"nav-item menu-items active\"\n                : \"nav-item menu-items\"\n            }\n          >\n            <Link className=\"nav-link\" to=\"/upload\">\n              <span className=\"menu-icon\">\n                <i className=\"mdi mdi-upload\"></i>\n              </span>\n              <span className=\"menu-title\">Upload Payroll</span>\n            </Link>\n          </li>\n\n          <li\n            className={\n              isPathActive(\"/newrecord\")\n                ? \"nav-item menu-items active\"\n                : \"nav-item menu-items\"\n            }\n          >\n            <Link className=\"nav-link\" to=\"/newrecord\">\n              <span className=\"menu-icon\">\n                <i className=\"mdi mdi-account\"></i>\n              </span>\n              <span className=\"menu-title\">\n                <Trans>New Payroll Record</Trans>\n              </span>\n            </Link>\n          </li>\n\n          <li\n            className={\n              isPathActive(\"/employees\")\n                ? \"nav-item menu-items active\"\n                : \"nav-item menu-items\"\n            }\n          >\n            <Link className=\"nav-link\" to=\"/employees\">\n              <span className=\"menu-icon\">\n                <i className=\"mdi mdi-account-multiple\"></i>\n              </span>\n              <span className=\"menu-title\">\n                <Trans>Search Associate</Trans>\n              </span>\n            </Link>\n          </li>\n\n          <li\n            className={\n              isPathActive(\"/newassociate\")\n                ? \"nav-item menu-items active\"\n                : \"nav-item menu-items\"\n            }\n          >\n            <Link className=\"nav-link\" to=\"/newassociate\">\n              <span className=\"menu-icon\">\n                <i className=\"mdi mdi-new-box\"></i>\n              </span>\n              <span className=\"menu-title\">\n                <Trans>New Associate</Trans>\n              </span>\n            </Link>\n          </li>\n        </ul>\n      </nav>\n    );\n};\n\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { logout })(withRouter(Sidebar));","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Col, Button } from 'react-bootstrap';\nimport { saveNewRecord } from '../../actions/payroll/payroll';\nimport { withRouter } from \"react-router-dom\";\nimport { saveDate } from '../../actions/paydates/paydates';\nimport { loadAssociates } from '../../actions/associate/associate';\nimport Spinner from '../isLoading/spinner';\nimport Alerts from '../alerts/alerts';\nimport { initialState, dateInitialState } from '../STATE';\nimport { Typeahead } from 'react-bootstrap-typeahead';\nimport Select from 'react-select';\nimport { removeAlert } from '../../actions/alerts';\nimport { loadDates } from '../../actions/paydates/paydates';\n\nconst NewRecord = ({ saveNewRecord, isLoading, paydates, saveDate, loadAssociates, associate, removeAlert, loadDates }) => {\n    const [data, setData] = useState(initialState)\n    const [date, setDate] = useState(dateInitialState)\n\n    const { ID, FIRSTNAME, LASTNAME, POSITION, ADJUSTMENT, SP_RATE, NOTES, REG_HRS, SCH_HRS, UNVH, VRF_HRS, TS_HRS, SUP, SDP, BNS_HRS, BNS_RATE, BNS_HRS_B, BNS_RATE_B, BNS_HR_C, BNS_RATE_C, BNS_HR_D, BNS_RATE_D, PAYDATE } = data;\n\n    useEffect(() => {\n        loadAssociates();\n        removeAlert();\n    }, [])\n\n\n    const associateSelector = associate.map(associate => {\n        return {\n            value: associate.ID, label: `${associate.LASTNAME}, ${associate.FIRSTNAME} ${associate.ID}`\n        }\n    })\n\n\n\n    let options = {};\n    const paydateSelector = paydates.map(date => {\n        return date.map(item => {\n            return {\n                value: item.PAYDATE, label: item.PAYDATE\n            }\n        })\n    })\n\n    options = paydateSelector;\n\n\n    const onChangeHandler = (e) => {\n        setData({\n            ...data,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    // Handles Scheduled Hours and Worked Flag\n    const schHrsHandler = (e) => {\n        if (e.target.value != 0) {\n            setData({ ...data, SCH_HRS: e.target.value, WRKD_FLG: 'X' })\n        }\n        else {\n            setData({ ...data, SCH_HRS: e.target.value, WRKD_FLG: 'N' })\n        }\n    }\n\n    // Handles Hours Verified flag and Unverified Hours\n    const unvhHandler = (e) => {\n        if ((REG_HRS - UNVH === REG_HRS)) {\n            setData({ ...data, HRS_VER_FLG: 'X', UNVH: e.target.value })\n        } else {\n            setData({ ...data, HRS_VER_FLG: 'N', UNVH: e.target.value })\n        }\n    }\n\n    // Handles Time Sheet hours and Timesheet Flag\n    const timesheetHandler = (e) => {\n        if (e.target.value !== 0) {\n            setData({ ...data, TIMESHEET_FLG: 'X', TS_HRS: e.target.value })\n        } else {\n            setData({ ...data, TIMESHEET_FLG: 'N', TS_HRS: e.target.value })\n        }\n    }\n\n    // Handles SDP and Pickup Pay Flag\n    const sdpHandler = (e) => {\n        if (e.target.value > 0) {\n            setData({ ...data, PICKUP_PAY_FLG: 'X', SDP: e.target.value })\n        } else {\n            setData({ ...data, PICKUP_PAY_FLG: 'N', SDP: e.target.value })\n        }\n    }\n\n    // Handles Adjustment and Adjustment Flag\n    const adjustmentHandler = (e) => {\n        if (e.target.value != \"\") {\n            setData({ ...data, [e.target.name]: e.target.value, ADJ_FLG: 'X' })\n        } else {\n            setData({ ...data, [e.target.name]: e.target.value, ADJ_FLG: 'N' })\n        }\n    }\n\n    // Handles Bonus & Bonus Flag\n    const bonusHandler = (e) => {\n        if ((SCH_HRS - VRF_HRS - UNVH) === REG_HRS) {\n            setData({ ...data, [e.target.name]: e.target.value, BNS_FLG: 'N' })\n        } else {\n            setData({ ...data, [e.target.name]: e.target.value, BNS_FLG: 'X' })\n        }\n    }\n\n    const paydateHandler = (e) => {\n        let value = e[0]\n        if (value != undefined) {\n            setData({ ...data, PAYDATE: e[0].value })\n        } else {\n            setData({ ...data, PAYDATE: '' })\n        }\n    }\n\n    const associateHandler = (e) => {\n        let value = e[0]\n        // console.log(e)\n        associate.map(associate => {\n            if (e.value === associate.ID) {\n                setData({\n                    ...data,\n                    FIRSTNAME: associate.FIRSTNAME,\n                    LASTNAME: associate.LASTNAME,\n                    ID: associate.ID,\n                    POSITION: associate.POSITION\n                })\n            }\n        })\n    }\n\n    // New Paydate onChange Handler\n    const newPaydateHandler = (e) => {\n        setDate({\n            ...date,\n            NEWPAYDATE: e.target.value\n        })\n    }\n\n    // New Paydate onSubmit Handler\n    const newPaydateSubmitHandler = (e) => {\n        e.preventDefault();\n        saveDate(date)\n    }\n\n\n\n    const onSubmitHandler = (e) => {\n        e.preventDefault();\n        saveNewRecord(data)\n        setData(initialState)\n    }\n\n    let regularHoursHandler = +VRF_HRS + + SCH_HRS - UNVH - TS_HRS - BNS_HRS - BNS_HRS_B - BNS_HR_C - BNS_HR_D;\n\n    const styleSheet = {\n        input: (base, state) => ({\n            ...base,\n            color: 'white'\n\n        })\n    };\n\n    return isLoading ? (\n        <Spinner />\n    ) : (\n            <div>\n                <div className=\"page-header\">\n                    <h3 className=\"page-title\">\n                        New Payroll Record\n                    </h3>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-12 grid-margin\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <Form noValidate>\n                                    <Form.Row>\n                                        <Form.Group as={Col} md=\"6\" controlId=\"validationCustom01\">\n                                            <Form.Label><h3>Select Associate</h3></Form.Label>\n                                            <Select\n                                                onChange={associateHandler}\n                                                options={\n                                                    associateSelector\n                                                }\n                                                styles={styleSheet}\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                    </Form.Row>\n                                    <Form.Row>\n                                        <Form.Group hidden={!ID} as={Col} md=\"1\" controlId=\"validationCustom02\">\n                                            <Form.Label>ID</Form.Label>\n                                            <Form.Control\n                                                value={ID}\n                                                disabled\n                                                // minLength={1}\n                                                name=\"ID\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group hidden={!POSITION} as={Col} md=\"1\" controlId=\"validationCustom02\">\n                                            <Form.Label>Position</Form.Label>\n                                            <Form.Control\n                                                value={POSITION}\n                                                disabled\n                                                // minLength={1}\n                                                name=\"POSITION\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group hidden={!FIRSTNAME} as={Col} md=\"3\" controlId=\"validationCustom02\">\n                                            <Form.Label>First Name</Form.Label>\n                                            <Form.Control\n                                                value={FIRSTNAME}\n                                                disabled\n                                                // minLength={1}\n                                                name=\"FIRSTNAME\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group hidden={!LASTNAME} as={Col} md=\"3\" controlId=\"validationCustom02\">\n                                            <Form.Label>Last Name</Form.Label>\n                                            <Form.Control\n                                                value={LASTNAME}\n                                                disabled\n                                                // minLength={1}\n                                                name=\"LASTNAME\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"4\" controlId=\"validationCustom02\">\n                                            <Form.Label>Adjustment</Form.Label>\n                                            <Form.Control\n                                                onChange={adjustmentHandler}\n                                                value={ADJUSTMENT}\n                                                // minLength={1}\n                                                name=\"ADJUSTMENT\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\n                                            <Form.Label>Special Rate</Form.Label>\n                                            <Form.Control\n                                                onChange={onChangeHandler}\n                                                value={SP_RATE}\n                                                minLength={1}\n                                                name=\"SP_RATE\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"6\" controlId=\"validationCustom02\">\n                                            <Form.Label>Notes</Form.Label>\n                                            <Form.Control\n                                                onChange={onChangeHandler}\n                                                value={NOTES}\n                                                minLength={1}\n                                                name=\"NOTES\"\n                                                required\n                                                type=\"textarea\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\n                                            <Form.Label>Regular Hours</Form.Label>\n                                            <Form.Control\n                                                hidden={!SCH_HRS}\n                                                onChange={onChangeHandler}\n                                                disabled\n                                                value={regularHoursHandler}\n                                                minLength={1}\n                                                name=\"REG_HRS\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\n                                            <Form.Label>Scheduled Hours</Form.Label>\n                                            <Form.Control\n                                                onChange={schHrsHandler}\n                                                value={SCH_HRS}\n                                                minLength={1}\n                                                name=\"SCH_HRS\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\n                                            <Form.Label>Unverified Hours</Form.Label>\n                                            <Form.Control\n                                                onChange={unvhHandler}\n                                                value={UNVH}\n                                                minLength={1}\n                                                name=\"UNVH\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\n                                            <Form.Label>Verified Hours</Form.Label>\n                                            <Form.Control\n                                                onChange={onChangeHandler}\n                                                value={VRF_HRS}\n                                                minLength={1}\n                                                name=\"VRF_HRS\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\n                                            <Form.Label>Timesheet Hours</Form.Label>\n                                            <Form.Control\n                                                onChange={timesheetHandler}\n                                                value={TS_HRS}\n                                                minLength={1}\n                                                name=\"TS_HRS\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\n                                            <Form.Label>Show Up Pay</Form.Label>\n                                            <Form.Control\n                                                onChange={onChangeHandler}\n                                                value={SUP}\n                                                minLength={1}\n                                                name=\"SUP\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\n                                            <Form.Label>Same Day Pay</Form.Label>\n                                            <Form.Control\n                                                onChange={sdpHandler}\n                                                value={SDP}\n                                                minLength={1}\n                                                name=\"SDP\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\n                                            <Form.Label>Bonus Hours</Form.Label>\n                                            <Form.Control\n                                                onChange={bonusHandler}\n                                                value={BNS_HRS}\n                                                minLength={1}\n                                                name=\"BNS_HRS\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\n                                            <Form.Label>Bonus Rate</Form.Label>\n                                            <Form.Control\n                                                onChange={onChangeHandler}\n                                                value={BNS_RATE}\n                                                minLength={1}\n                                                name=\"BNS_RATE\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\n                                            <Form.Label>Bonus Hours B</Form.Label>\n                                            <Form.Control\n                                                value={BNS_HRS_B}\n                                                onChange={onChangeHandler}\n                                                minLength={1}\n                                                name=\"BNS_HRS_B\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\n                                            <Form.Label>Bonus Rate B</Form.Label>\n                                            <Form.Control\n                                                value={BNS_RATE_B}\n                                                onChange={onChangeHandler}\n                                                minLength={1}\n                                                name=\"BNS_RATE_B\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\n                                            <Form.Label>Bonus Hours C</Form.Label>\n                                            <Form.Control\n                                                value={BNS_HR_C}\n                                                onChange={onChangeHandler}\n                                                minLength={1}\n                                                name=\"BNS_HR_C\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\n                                            <Form.Label>Bonus Rate C</Form.Label>\n                                            <Form.Control\n                                                value={BNS_RATE_C}\n                                                onChange={onChangeHandler}\n                                                minLength={1}\n                                                name=\"BNS_RATE_C\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\n                                            <Form.Label>Bonus Hours D</Form.Label>\n                                            <Form.Control\n                                                value={BNS_HR_D}\n                                                onChange={onChangeHandler}\n                                                minLength={1}\n                                                name=\"BNS_HR_D\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\n                                            <Form.Label>Bonus Rate D</Form.Label>\n                                            <Form.Control\n                                                onChange={onChangeHandler}\n                                                value={BNS_RATE_D}\n                                                minLength={1}\n                                                name=\"BNS_RATE_D\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"4\" controlId=\"validationCustom02\">\n                                            <Form.Label>Pay Date</Form.Label>\n                                            <Typeahead\n                                                labelKey=\"label\"\n                                                id=\"typeahead-single\"\n                                                options={options[0]}\n                                                placeholder=\"Choose a Date\"\n                                                onChange={paydateHandler}\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                    </Form.Row>\n                                    <Button type=\"submit\" onClick={onSubmitHandler}>Submit form</Button>\n\n                                </Form>\n\n                            </div>\n                            <Alerts />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n}\n\nconst mapStateToProps = (state) => ({\n    payload: state.payload,\n    isLoading: state.auth.loading,\n    paydates: state.paydates,\n    associate: state.associate.associate\n})\n\nexport default connect(mapStateToProps, { saveNewRecord, saveDate, loadAssociates, removeAlert, loadDates })(withRouter(NewRecord));","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Col, Button } from 'react-bootstrap';\nimport { saveDate, deletePayDate } from '../../actions/paydates/paydates';\nimport { saveAssociate } from '../../actions/associate/associate';\nimport Spinner from '../isLoading/spinner';\nimport Alerts from '../alerts/alerts';\nimport { dateInitialState } from '../STATE';\nimport { Typeahead } from 'react-bootstrap-typeahead';\n\nconst PayDate = ({ isLoading, paydates, saveDate, saveAssociate, deletePayDate }) => {\n    const [date, setDate] = useState(dateInitialState)\n    const [deleteDate, setDeleteDate] = useState({\n        ID: '',\n    })\n    const { NEWPAYDATE } = date;\n\n    let options = {};\n    const paydateSelector = paydates.map(date => {\n        return date.map(item => {\n            return {\n                value: item._id, label: item.PAYDATE\n            }\n        })\n    })\n\n    options = paydateSelector;\n\n    const paydateHandler = (e) => {\n        let value = e[0]\n        if (value != undefined) {\n            setDeleteDate({ ...deleteDate, ID: e[0].value })\n        } else {\n            setDeleteDate({ ...deleteDate, ID: '' })\n        }\n    }\n\n\n\n    // New Paydate onChange Handler\n    const newPaydateHandler = (e) => {\n        setDate({\n            ...date,\n            NEWPAYDATE: e.target.value\n        })\n    }\n\n    // New Paydate onSubmit Handler\n    const newPaydateSubmitHandler = (e) => {\n        e.preventDefault();\n        saveDate(date)\n    }\n\n    const deletePaydateSubmitHandler = (e) => {\n        e.preventDefault();\n        deletePayDate(deleteDate.ID);\n    }\n\n    return isLoading ? (\n        <Spinner />\n    ) : (\n            <div>\n                <div className=\"row\">\n                    <div className=\"col-md-6 grid-margin\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <Form noValidate>\n                                    <Form.Row>\n                                        <Form.Group as={Col} md=\"12\" controlId=\"validationCustom01\">\n                                            <Form.Label>New Pay Date</Form.Label>\n                                            <Form.Control\n                                                onChange={newPaydateHandler}\n                                                required\n                                                value={NEWPAYDATE}\n                                                name=\"NEWPAYDATE\"\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                    </Form.Row>\n                                    <Button type=\"submit\" onClick={newPaydateSubmitHandler}>Submit form</Button>\n\n                                </Form>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-md-6 grid-margin\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <Form noValidate>\n                                    <Form.Row>\n                                        <Form.Group as={Col} md=\"12\" controlId=\"validationCustom02\">\n                                            <Form.Label>Delete Pay Date</Form.Label>\n                                            <Typeahead\n                                                labelKey=\"label\"\n                                                id=\"typeahead-single\"\n                                                options={options[0]}\n                                                placeholder=\"Choose a Date\"\n                                                onChange={paydateHandler}\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                    </Form.Row>\n                                    <Button type=\"submit\" onClick={deletePaydateSubmitHandler}>Delete Pay Date</Button>\n\n                                </Form>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        )\n}\n\nconst mapStateToProps = (state) => ({\n    isLoading: state.auth.loading,\n    paydates: state.paydates\n})\n\nexport default connect(mapStateToProps, { saveDate, saveAssociate, deletePayDate })(PayDate);","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Col, Button } from 'react-bootstrap';\nimport { loadAssociates, saveAssociate, deleteAssociate } from '../../actions/associate/associate';\nimport Spinner from '../isLoading/spinner';\nimport Alerts from '../alerts/alerts';\nimport { removeAlert } from '../../actions/alerts';\nimport Select from 'react-select';\nimport PayDate from '../newrecord/newpaydate';\n\nconst NewAssociate = ({ isLoading, loadAssociates, associate, saveAssociate, deleteAssociate, removeAlert }) => {\n    const [data, setData] = useState({\n        ID: '',\n        FIRSTNAME: '',\n        LASTNAME: '',\n        POSITION: ''\n    })\n    const { ID, FIRSTNAME, LASTNAME, POSITION } = data;\n    const [deleteAssociateData, setDeleteAssociateData] = useState({\n        _id: null\n    })\n\n    useEffect(() => {\n        loadAssociates();\n        removeAlert();\n    }, [])\n\n\n\n    const associateSelector = associate.map(associate => {\n        return {\n            value: associate.ID, label: `${associate.LASTNAME}, ${associate.FIRSTNAME} ${associate.ID}`\n        }\n    })\n\n\n    const onChangeHandler = (e) => {\n        setData({\n            ...data,\n            [e.target.name]: e.target.value\n        })\n    }\n    const deleteAssociateHandler = (e) => {\n        associate.map(associate => {\n            if (e.value === associate.ID) {\n                setDeleteAssociateData({\n                    ...deleteAssociateData,\n                    _id: associate._id\n                })\n            }\n        })\n    }\n\n    const onSubmitHandler = (e) => {\n        e.preventDefault();\n        saveAssociate(data)\n        setData({\n            ID: '',\n            FIRSTNAME: '',\n            LASTNAME: '',\n            POSITION: ''\n        })\n    }\n\n    const onDeleteAssociateSubmitHandler = (e) => {\n        e.preventDefault();\n        deleteAssociate(deleteAssociateData._id)\n        setDeleteAssociateData({\n            _id: ''\n        })\n    }\n\n    const styleSheet = {\n        input: (base, state) => ({\n            ...base,\n            color: 'white'\n\n        })\n    };\n\n    return isLoading ? (\n        <Spinner />\n    ) : (\n            <div>\n                <div className=\"page-header\">\n                    <h3 className=\"page-title\">\n                        New Associate\n                    </h3>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-12 grid-margin\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <Form noValidate>\n                                    <Form.Row>\n                                        <Form.Group as={Col} md=\"1\" controlId=\"validationCustom02\">\n                                            <Form.Label>ID</Form.Label>\n                                            <Form.Control\n                                                value={ID}\n                                                onChange={onChangeHandler}\n                                                name=\"ID\"\n                                                required\n                                                type=\"text\"\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"1\" controlId=\"validationCustom02\">\n                                            <Form.Label>Position</Form.Label>\n                                            <Form.Control\n                                                onChange={onChangeHandler}\n                                                value={POSITION}\n                                                name=\"POSITION\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"5\" controlId=\"validationCustom02\">\n                                            <Form.Label>First Name</Form.Label>\n                                            <Form.Control\n                                                onChange={onChangeHandler}\n                                                value={FIRSTNAME}\n                                                name=\"FIRSTNAME\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"5\" controlId=\"validationCustom02\">\n                                            <Form.Label>Last Name</Form.Label>\n                                            <Form.Control\n                                                onChange={onChangeHandler}\n                                                value={LASTNAME}\n                                                name=\"LASTNAME\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                    </Form.Row>\n                                    <Button type=\"submit\" onClick={onSubmitHandler}>Save Associate</Button>\n\n                                </Form>\n\n                            </div>\n                        </div>\n                    </div>\n\n\n                </div>\n\n                <div className=\"page-header\">\n                    <h3 className=\"page-title\">\n                        Delete Associate\n                    </h3>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-12 grid-margin\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <Form noValidate>\n                                    <Form.Row>\n                                        <Form.Group as={Col} md=\"12\" controlId=\"validationCustom01\">\n                                            <Form.Label>Associate Information</Form.Label>\n                                            <Select\n                                                onChange={deleteAssociateHandler}\n                                                options={\n                                                    associateSelector\n                                                }\n                                                styles={styleSheet}\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                    </Form.Row>\n                                    <Button type=\"submit\" onClick={onDeleteAssociateSubmitHandler}>Delete Associate</Button>\n\n                                </Form>\n\n                            </div>\n                        </div>\n                    </div>\n\n\n                </div>\n\n                <PayDate />\n                <Alerts />\n            </div>\n        )\n}\n\nconst mapStateToProps = (state) => ({\n    payload: state.payload,\n    isLoading: state.auth.loading,\n    associate: state.associate.associate\n})\n\nexport default connect(mapStateToProps, { saveAssociate, loadAssociates, deleteAssociate, removeAlert })(NewAssociate);","import React, { Fragment, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport \"./App.scss\";\nimport PrivateRoute from \"./components/routing/PrivateRoute\";\nimport Landing from \"./components/dashboard/landing\";\nimport Login from \"./components/auth/login\";\nimport Register from \"./components/auth/register\";\nimport Upload from \"./components/upload/upload\";\nimport Employees from \"./components/employees/employees\";\nimport setAuthToken from \"./utils/auth/setAuthToken\";\nimport { loadUser } from \"./actions/auth/auth\";\nimport Navbar from \"./components/navigation/navbar\";\nimport Sidebar from \"./components/navigation/sidebar\";\nimport NewRecord from \"./components/newrecord/newrecord\";\nimport NewAssociate from \"./components/newassociate/newassociate\";\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n\n  console.log(\"This is a test\")\n\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, [localStorage.token]);\n\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <section className=\"container-scroller\">\n            <Route component={Sidebar} />\n            <div className=\"container-fluid page-body-wrapper\">\n              <Route component={Navbar} />\n              <div className=\"main-panel\">\n                <div className=\"content-wrapper\">\n                  <Switch>\n                    <Route exact path=\"/login\" component={Login} />\n                    <Route exact path=\"/register\" component={Register} />\n                    <Route exact path=\"/\" component={Landing} />\n                    <Route exact path=\"/upload\" component={Upload} />\n                    <Route exact path=\"/employees\" component={Employees} />\n                    <Route exact path=\"/newrecord\" component={NewRecord} />\n                    <Route exact path=\"/newassociate\" component={NewAssociate} />\n                  </Switch>\n                </div>\n              </div>\n            </div>\n          </section>\n        </Fragment>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app/App\";\nimport * as serviceWorker from \"./app/serviceWorker\";\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWAe\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/halo_logo.d1d628d2.png\";"],"sourceRoot":""}