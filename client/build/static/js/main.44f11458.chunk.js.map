{"version":3,"sources":["assets/images/spinner.gif","app/reducers/auth.js","app/reducers/alerts.js","app/reducers/upload.js","app/reducers/paydates.js","app/reducers/payroll.js","app/reducers/index.js","app/actionTypes/types.js","app/store.js","app/components/utils/index.js","app/components/dashboard/widgets/widget_1.js","app/components/routing/PrivateRoute.js","app/components/dashboard/widgets/widget_2.js","app/components/dashboard/widgets/widget_3.js","app/components/dashboard/widgets/widget_4.js","app/components/isLoading/spinner.js","app/components/dashboard/widgets/empTable.js","app/components/dashboard/landing.js","app/utils/auth/setAuthToken.js","app/actions/alerts.js","app/actions/auth/auth.js","app/components/alerts/alerts.js","app/components/auth/login.js","app/components/auth/register.js","app/components/upload/upload.js","app/actions/upload/upload.js","app/components/dashboard/widgets/empSearchTable.js","app/actions/payroll/payroll.js","app/components/employees/employees.js","app/components/navigation/paydateDropdown/paydateDropdown.js","app/components/navigation/payrollSearch/payrollSearch.js","app/components/navigation/navbar.js","app/actions/paydates/paydates.js","app/components/navigation/sidebar.js","app/components/newrecord/newrecord.js","app/App.js","app/serviceWorker.js","index.js","assets/images/halo_logo.png"],"names":["module","exports","initialState","token","localStorage","getItem","isAuthenticated","loading","user","msg","alertType","payrollData","alert","combineReducers","auth","state","action","type","payload","setItem","removeItem","upload","paydates","payroll","middleWare","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","columns","text","dataField","sort","connect","withRouter","Component","component","rest","history","render","props","isLogin","to","reg","map","hrs","REG_HRS","sumRegHrs","reduce","a","b","className","Math","round","aria-hidden","SCH_HRS","sumSchHrs","BNS_HRS","sumBnsHrs","UNVH","sumUNVH","Spinner","alt","src","spinner","style","width","margin","display","position","right","SearchBar","Search","ExportCSVButton","CSVExport","defaultSorted","order","keyField","bootstrap4","data","search","exportCSV","csvProps","searchProps","pagination","paginationFactory","baseProps","wrapperClasses","redirect","push","setAuthToken","axios","defaults","headers","common","removeAlert","dispatch","loadUser","get","res","logout","Alert","variant","login","email","password","config","body","JSON","stringify","post","error","response","errors","useState","loginData","setLoginData","onSubmit","e","preventDefault","onChange","target","name","value","require","Form","Group","Control","placeholder","size","register","success","registerData","setRegisterData","isLoading","uploadFile","file","console","log","selectedFile","fileName","uploadData","setUploadData","File","id","custom","Input","files","Label","data-browse","onClick","FormData","append","deleteById","delete","updateById","put","show","confirm","setConfirm","editor","Type","TEXT","formatter","cellContent","onClickHandlerDelete","find","_id","onClickHandlerUpdate","Modal","onHide","aria-labelledby","Header","closeButton","Title","Body","Footer","Button","cellEdit","cellEditFactory","mode","striped","getPayrollByDate","date","selectedDate","setSelectedDate","onClickHandler","listDates","record","item","Dropdown","Item","PAYDATE","key","Toggle","Menu","getPayrollById","empId","setEmpId","onKeyPress","loadDates","location","useEffect","document","classList","toggle","pathname","as","alignRight","toUpperCase","Divider","href","evt","querySelector","menuState","setMenuState","onRouteChanged","remove","Object","keys","forEach","i","path","obj","isPathActive","startsWith","querySelectorAll","el","addEventListener","contains","add","saveNewRecord","EUID","EMP","WRKD_FLG","HRS_VER_FLG","BNS_FLG","TIMESHEET_FLG","PICKUP_PAY_FLG","ADJ_FLG","ADJUSTMENT","SP_RATE","NOTES","S","TS_HRS","SUP","SDP","BNS_RATE","BNS_HRS_B","BNS_RATE_B","BNS_HR_C","BNS_RATE_C","BNS_HR_D","BNS_RATE_D","PAY_DATE","UPDATED","moment","format","setData","onChangeHandler","noValidate","Row","Col","md","controlId","required","Feedback","minLength","maxLength","App","Sidebar","Navbar","exact","Login","Register","Landing","Upload","Employees","NewRecord","Boolean","window","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.44f11458.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.2cfe9ab9.gif\";","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n} from \"../actionTypes/types\";\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: null,\n  loading: true,\n  user: null,\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case USER_LOADED:\n      return { ...state, isAuthenticated: true, loading: false, user: payload };\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      localStorage.setItem(\"token\", payload.token);\n      return { ...state, ...payload, isAuthenticated: true, loading: false };\n    case REGISTER_FAIL:\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT:\n      localStorage.removeItem(\"token\");\n      return { ...state, token: null, isAuthenticated: false, loading: false };\n    default:\n      return initialState;\n  }\n}\n","import { SET_SUCCESS_ALERT, SET_ERROR_ALERT, REMOVE_ALERT } from \"../actionTypes/types\";\n\nconst initialState = {\n    msg: null,\n    alertType: null,\n};\n\nexport default function (state = initialState, action) {\n    const { type, payload } = action;\n    switch (type) {\n        case SET_SUCCESS_ALERT:\n            return { ...state, msg: payload, alertType: \"success\" };\n        case SET_ERROR_ALERT:\n            return { ...state, msg: payload, alertType: \"danger\" };\n        case REMOVE_ALERT:\n            return { ...state, msg: null, alertType: null };\n        default:\n            return state;\n    }\n}","import { UPLOAD_FILE } from '../actionTypes/types';\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n    const { type, payload } = action;\n    switch (type) {\n        case UPLOAD_FILE:\n            return { ...state, payload }\n        default:\n            return state;\n    }\n}","import { GET_PAY_DATES } from '../actionTypes/types';\n\nconst initialState = [];\n\nexport default function (state = initialState, action) {\n    const { type, payload } = action;\n    switch (type) {\n        case GET_PAY_DATES:\n            return [...state, payload];\n        default:\n            return state;\n    }\n}","import {\n    GET_ALL_DATA,\n    GET_DATA_BY_DATE,\n    GET_DATA_BY_ID,\n    SAVE_NEW_RECORD,\n    // DELETE_DATA_BY_DATE,\n    DELETE_DATA_BY_ID\n} from '../actionTypes/types';\n\nconst initialState = {\n    payrollData: [],\n    loading: true,\n    alert: []\n}\n\nexport default function (state = initialState, action) {\n    const { type, payload } = action;\n    switch (type) {\n        case GET_ALL_DATA:\n        case GET_DATA_BY_ID:\n        case GET_DATA_BY_DATE:\n            return { ...state, payrollData: payload, loading: false }\n        case SAVE_NEW_RECORD:\n            return { ...state, alert: payload }\n        case DELETE_DATA_BY_ID:\n            return { ...state, alert: payload }\n        default:\n            return state;\n    }\n}","import { combineReducers } from \"redux\";\nimport auth from \"./auth\";\nimport alert from \"./alerts\";\nimport upload from \"./upload\";\nimport paydates from \"./paydates\";\nimport payroll from \"./payroll\";\n\nexport default combineReducers({\n  auth,\n  alert,\n  upload,\n  paydates,\n  payroll,\n});\n","export const SET_SUCCESS_ALERT = \"SET_SUCCESS_ALERT\";\nexport const SET_ERROR_ALERT = \"SET_ERROR_ALERT\";\nexport const REMOVE_ALERT = \"REMOVE_ALERT\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\nexport const GET_PROFILE = \"GET_PROFILE\";\nexport const PROFILE_ERROR = \"PROFILE_ERROR\";\nexport const CLEAR_PROFILE = \"CLEAR_PROFILE\";\nexport const UPDATE_PROFILE = \"UPDATE_PROFILE\";\nexport const UPLOAD_FILE = \"UPLOAD_FILE\";\nexport const GET_PAY_DATES = \"GET_PAY_DATES\";\n\nexport const GET_DATA_BY_DATE = \"GET_DATA_BY_DATE\";\nexport const GET_DATA_BY_ID = \"GET_DATA_BY_ID\";\nexport const GET_ALL_DATA = \"GET_ALL_DATA\";\nexport const DELETE_DATA_BY_DATE = \"DELETE_DATA_BY_DATE\";\nexport const DELETE_DATA_BY_ID = \"DELETE_DATA_BY_ID\";\n\nexport const SAVE_NEW_RECORD = \"SAVE_NEW_RECORD\";","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers/index\";\n\nconst initialState = {};\n\nconst middleWare = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleWare))\n);\n\nexport default store;\n","import React from 'react';\n\nexport const isLogin = () => {\n    if (localStorage.token) {\n        return true\n    }\n}\n\nexport const columns = [{\n    text: 'ID',\n    dataField: 'EUID',\n    sort: true\n}, {\n    text: 'Name',\n    dataField: 'EMP',\n    sort: true\n}, {\n    text: 'Worked Flag',\n    dataField: 'WRKD_FLG',\n    sort: true\n}, {\n    text: 'Hours Verified Flag',\n    dataField: 'HRS_VER_FLG',\n    sort: true\n}, {\n    text: 'Bonus Flag',\n    dataField: 'BNS_FLG',\n    sort: true\n}, {\n    text: 'Timesheet Flag',\n    dataField: 'TIMESHEET_FLG',\n    sort: true\n}, {\n    text: 'Pickup Pay Flag',\n    dataField: 'PICKUP_PAY_FLG',\n    sort: true\n}, {\n    text: 'Adjustment Flag',\n    dataField: 'ADJ_FLG',\n    sort: true\n}, {\n    text: 'Adjustment',\n    dataField: 'ADJUSTMENT',\n    sort: true\n}, {\n    text: 'Special Rate',\n    dataField: 'SP_RATE',\n    sort: true\n}, {\n    text: 'Notes',\n    dataField: 'NOTES',\n    sort: true\n}, {\n    text: 'Regular Hours',\n    dataField: 'REG_HRS',\n    sort: true\n}, {\n    text: 'Scheduled Hours',\n    dataField: 'SCH_HRS',\n    sort: true\n}, {\n    text: 'Unverfied Hours',\n    dataField: 'UNVH',\n    sort: true\n}, {\n    text: 'S',\n    dataField: 'S',\n    sort: true\n}, {\n    text: 'TS Hours',\n    dataField: 'TS_HRS',\n    sort: true\n}, {\n    text: 'SUP',\n    dataField: 'SUP',\n    sort: true\n}, {\n    text: 'SDP',\n    dataField: 'SDP',\n    sort: true\n}, {\n    text: 'Bonus Hours',\n    dataField: 'BNS_HRS',\n    sort: true\n}, {\n    text: 'Bonus Rate',\n    dataField: 'BNS_RATE',\n    sort: true\n}, {\n    text: 'BNS_HRS_B',\n    dataField: 'BNS_HRS_B',\n    sort: true\n}, {\n    text: 'BNS_RATE_B',\n    dataField: 'BNS_RATE_B',\n    sort: true\n}, {\n    text: 'BNS_HR_C',\n    dataField: 'BNS_HR_C',\n    sort: true\n}, {\n    text: 'BNS_RATE_C',\n    dataField: 'BNS_RATE_C',\n    sort: true\n}, {\n    text: 'BNS_HR_D',\n    dataField: 'BNS_HR_D',\n    sort: true\n}, {\n    text: 'BNS_RATE_D',\n    dataField: 'BNS_RATE_D',\n    sort: true\n}, {\n    text: 'PAY_DATE',\n    dataField: 'PAY_DATE',\n    sort: true\n}, {\n    text: 'UPDATED',\n    dataField: 'UPDATED',\n    sort: true\n}\n]\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst Widget_1 = ({ payroll }) => {\n    const { loading, payrollData } = payroll;\n\n    const reg = payrollData.map(hrs => {\n        return hrs.REG_HRS\n    })\n\n    let sumRegHrs = 0;\n\n\n    if (loading === false) {\n        sumRegHrs = reg.reduce((a, b) => a + b);\n    }\n\n\n\n    return (\n        <div className=\"col-xl-3 col-lg-3 col-md-3 col-sm-6 grid-margin stretch-card\">\n            <div className=\"card card-statistics\">\n                <div className=\"card-body\">\n                    <div className=\"clearfix\">\n                        <div className=\"float-left\">\n                            <i className=\"mdi mdi-timer text-danger icon-lg\"></i>\n                        </div>\n                        <div className=\"float-right\">\n                            <p className=\"mb-0 text-right text-light\">Regular Hours</p>\n                            <div className=\"fluid-container\">\n                                <h3 className=\"font-weight-medium text-right mb-0 text-light\">{Math.round(sumRegHrs)}</h3>\n                            </div>\n                        </div>\n                    </div>\n                    <p className=\"text-muted mt-3 mb-0\">\n                        <i className=\"mdi mdi-timer mr-1\" aria-hidden=\"true\"></i>Regular Hours Worked</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    // payroll: state.payroll\n})\n\nexport default connect(mapStateToProps)(Widget_1)\n","import React from \"react\";\nimport { Route, Redirect, withRouter } from \"react-router-dom\";\nimport { isLogin } from \"../utils\"\n\n\nconst PrivateRoute = ({ component: Component, history, ...rest }) => {\n    return (\n\n        // Show the component only when the user is logged in\n        // Otherwise, redirect the user to /signin page\n        <Route {...rest} render={props => (\n            isLogin() ?\n                <Component {...props} />\n                : <Redirect to=\"/login\" />\n        )} />\n    );\n}\n\n\nexport default withRouter(PrivateRoute);","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst Widget_2 = ({ payroll }) => {\n    const { loading, payrollData } = payroll;\n\n    const reg = payrollData.map(hrs => {\n        return hrs.SCH_HRS\n    })\n\n    let sumSchHrs = 0;\n\n    if (loading === false) {\n        sumSchHrs = reg.reduce((a, b) => a + b);\n    }\n\n    return (\n        <div className=\"col-xl-3 col-lg-3 col-md-3 col-sm-6 grid-margin stretch-card\">\n            <div className=\"card card-statistics\">\n                <div className=\"card-body\">\n                    <div className=\"clearfix\">\n                        <div className=\"float-left\">\n                            <i className=\"mdi mdi-receipt text-warning icon-lg\"></i>\n                        </div>\n                        <div className=\"float-right\">\n                            <p className=\"mb-0 text-right text-light\">Scheduled Hours</p>\n                            <div className=\"fluid-container\">\n                                <h3 className=\"font-weight-medium text-right mb-0 text-light\">{Math.round(sumSchHrs)}</h3>\n                            </div>\n                        </div>\n                    </div>\n                    <p className=\"text-muted mt-3 mb-0\">\n                        <i className=\"mdi mdi-calendar-outline mr-1\" aria-hidden=\"true\"></i> Total Scheduled Hours</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    payroll: state.payroll\n})\n\nexport default connect(mapStateToProps)(Widget_2)\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst Widget_3 = ({ payroll }) => {\n    const { loading, payrollData } = payroll;\n\n    const reg = payrollData.map(hrs => {\n        return hrs.BNS_HRS\n    })\n\n    let sumBnsHrs = 0;\n\n    if (loading === false) {\n        sumBnsHrs = reg.reduce((a, b) => a + b);\n    }\n\n    return (\n        <div className=\"col-xl-3 col-lg-3 col-md-3 col-sm-6 grid-margin stretch-card\">\n            <div className=\"card card-statistics\">\n                <div className=\"card-body\">\n                    <div className=\"clearfix\">\n                        <div className=\"float-left\">\n                            <i className=\"mdi mdi-currency-usd text-success icon-lg\"></i>\n                        </div>\n                        <div className=\"float-right\">\n                            <p className=\"mb-0 text-right text-light\">Bonus Hours</p>\n                            <div className=\"fluid-container\">\n                                <h3 className=\"font-weight-medium text-right mb-0 text-light\">{Math.round(sumBnsHrs)}</h3>\n                            </div>\n                        </div>\n                    </div>\n                    <p className=\"text-muted mt-3 mb-0\">\n                        <i className=\"mdi mdi-currency-usd mr-1\" aria-hidden=\"true\"></i> Bonus Hours Worked </p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    payroll: state.payroll\n})\n\nexport default connect(mapStateToProps)(Widget_3)\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst Widget_4 = ({ payroll }) => {\n    const { loading, payrollData } = payroll;\n\n    const reg = payrollData.map(hrs => {\n        return hrs.UNVH\n    })\n\n    let sumUNVH = 0;\n\n    if (loading === false) {\n        sumUNVH = reg.reduce((a, b) => a + b);\n    }\n\n    return (\n        <div className=\"col-xl-3 col-lg-3 col-md-3 col-sm-6 grid-margin stretch-card\">\n            <div className=\"card card-statistics\">\n                <div className=\"card-body\">\n                    <div className=\"clearfix\">\n                        <div className=\"float-left\">\n                            <i className=\"mdi mdi-cancel text-info icon-lg\"></i>\n                        </div>\n                        <div className=\"float-right\">\n                            <p className=\"mb-0 text-right text-light\">Unverified Hours</p>\n                            <div className=\"fluid-container\">\n                                <h3 className=\"font-weight-medium text-right mb-0 text-light\">{Math.round(sumUNVH)}</h3>\n                            </div>\n                        </div>\n                    </div>\n                    <p className=\"text-muted mt-3 mb-0\">\n                        <i className=\"mdi mdi-cancel mr-1\" aria-hidden=\"true\"></i> Unverified Hours </p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    payroll: state.payroll\n})\n\nexport default connect(mapStateToProps)(Widget_4)\n","import React from 'react'\nimport spinner from '../../../assets/images/spinner.gif'\n\nconst Spinner = () => {\n    return (\n        <div>\n            <img\n                alt=\"spinner\"\n                src={spinner}\n                style={{ width: \"100px\", margin: \"auto\", display: \"block\", position: \"relative\", right: \"120px\" }}\n            />\n        </div>\n    )\n}\n\nexport default Spinner;\n","import React from 'react';\nimport { columns } from '../../utils';\nimport { connect } from 'react-redux';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport ToolkitProvider, { Search, CSVExport } from 'react-bootstrap-table2-toolkit';\nconst { SearchBar } = Search;\nconst { ExportCSVButton } = CSVExport;\n\nconst EmpTable = ({ payroll }) => {\n    const { loading, payrollData } = payroll;\n\n    const defaultSorted = [{\n        dataField: 'id',\n        order: 'desc'\n    }];\n\n    return loading ? (\n        <h1>Select a Payroll date</h1>\n    ) : (\n            <div>\n                <div className=\"page-header\">\n                    <h3 className=\"page-title\">\n                        Payroll Table\n            </h3>\n\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <h4 className=\"card-title\">Payroll Data</h4>\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        <ToolkitProvider\n                                            keyField=\"id\"\n                                            bootstrap4\n                                            data={payrollData}\n                                            columns={columns}\n                                            search\n                                            exportCSV\n                                        >\n                                            {\n                                                props => (\n                                                    <div>\n\n                                                        <ExportCSVButton {...props.csvProps}>\n                                                            <button type=\"button\" className=\"btn download btn-danger btn-rounded btn-icon\">\n                                                                <i className=\"mdi mdi-download\"></i>\n                                                            </button>\n                                                        </ExportCSVButton>\n\n                                                        <div className=\"d-flex align-items-center\">\n                                                            <p className=\"mb-2 mr-2\">Search in table:</p>\n                                                            <SearchBar {...props.searchProps} />\n                                                        </div>\n\n                                                        <BootstrapTable\n                                                            defaultSorted={defaultSorted}\n                                                            pagination={paginationFactory()}\n                                                            {...props.baseProps}\n                                                            wrapperClasses=\"table-responsive\"\n                                                        />\n                                                    </div>\n                                                )\n                                            }\n                                        </ToolkitProvider>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n}\n\nconst mapStateToProps = (state) => ({\n    payroll: state.payroll,\n})\n\nexport default connect(mapStateToProps)(EmpTable);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect, withRouter } from \"react-router-dom\";\nimport Widget1 from \"./widgets/widget_1\";\nimport Widget2 from \"./widgets/widget_2\";\nimport Widget3 from \"./widgets/widget_3\";\nimport Widget4 from \"./widgets/widget_4\";\nimport Spinner from \"../isLoading/spinner\";\nimport EmpTable from \"./widgets/empTable\";\n\nconst Landing = ({ auth, payroll, history }) => {\n\n  let redirect = \"\";\n\n\n  if (!auth.isAuthenticated) {\n    history.push('/login')\n  } else {\n    redirect = <div>\n      <div className=\"row\">\n        <Widget1 payroll={payroll} />\n        <Widget2 payroll={payroll} />\n        <Widget3 payroll={payroll} />\n        <Widget4 payroll={payroll} />\n      </div>\n      <EmpTable />\n    </div>\n  }\n\n  return (\n    redirect\n  )\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  payroll: state.payroll\n});\n\nexport default connect(mapStateToProps)(withRouter(Landing));\n","import axios from \"axios\";\n\nconst setAuthToken = (token) => {\n  if (token) {\n    axios.defaults.headers.common[\"x-auth-token\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"x-auth-token\"];\n  }\n};\n\nexport default setAuthToken;\n","import uuid from 'uuid';\nimport { SET_SUCCESS_ALERT, SET_ERROR_ALERT, REMOVE_ALERT } from '../actionTypes/types';\n\nexport const setSuccessAlert = (msg, alertType) => async dispatch => {\n    const id = uuid.v4();\n\n    dispatch({\n        type: SET_SUCCESS_ALERT,\n        payload: { msg, alertType, id }\n    })\n\n}\n\nexport const setErrorAlert = (msg, alertType) => async dispatch => {\n    const id = uuid.v4();\n\n    dispatch({\n        type: SET_ERROR_ALERT,\n        payload: { msg, alertType, id }\n    })\n}\n\nexport const removeAlert = () => async dispatch => {\n    dispatch({\n        type: REMOVE_ALERT,\n    })\n}","import axios from \"axios\";\nimport setAuthToken from \"../../utils/auth/setAuthToken\";\nimport { removeAlert } from \"../alerts\"\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  SET_SUCCESS_ALERT,\n  SET_ERROR_ALERT,\n} from \"../../actionTypes/types\";\n\n// Load User\nexport const loadUser = () => async (dispatch) => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get(\"/auth\");\n\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data,\n    });\n    removeAlert();\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR,\n    });\n  }\n};\n\n// Register New User\nexport const register = (name, email, password) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  const body = JSON.stringify({ name, email, password });\n\n  try {\n    const res = await axios.post(\"/users/register\", body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data,\n    });\n\n    const success = res.data.success[0].msg;\n\n    if (success) {\n      dispatch({\n        type: SET_SUCCESS_ALERT,\n        payload: success\n      })\n    }\n    dispatch(loadUser())\n  } catch (err) {\n    const error = err.response.data.errors[0].msg;\n\n    if (error) {\n      dispatch({\n        type: SET_ERROR_ALERT,\n        payload: error\n      });\n    }\n    dispatch({\n      type: REGISTER_FAIL,\n    });\n  }\n};\n\n// Login\nexport const login = (email, password) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  const body = JSON.stringify({ email, password });\n\n  try {\n    const res = await axios.post(\"/auth\", body, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data,\n    });\n\n    dispatch(loadUser())\n  } catch (err) {\n    const error = err.response.data.errors[0].msg;\n\n    if (error) {\n      dispatch({\n        type: SET_ERROR_ALERT,\n        payload: error\n      });\n    }\n\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};\n\n// Logout\nexport const logout = () => async (dispatch) => {\n  dispatch({\n    type: LOGOUT,\n  });\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Alert } from \"react-bootstrap\";\n\nconst Alerts = ({ alert }) => {\n    return alert.msg === null ? (\n        <div></div>\n    ) : (\n            <Alert variant={alert.alertType}>\n                {alert.msg}\n            </Alert>\n        );\n}\n\nconst mapStateToProps = state => ({\n    alert: state.alert\n});\n\nexport default connect(mapStateToProps)(Alerts);","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, Redirect, withRouter } from \"react-router-dom\";\nimport { Form } from \"react-bootstrap\";\nimport { login } from \"../../actions/auth/auth\";\nimport Alert from \"../alerts/alerts\";\nimport Spinner from \"../isLoading/spinner\";\n\nconst Login = ({ login, auth, history }) => {\n  const [loginData, setLoginData] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const { email, password } = loginData;\n\n  if (auth.isAuthenticated) {\n    history.push('/')\n  }\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    login(email, password);\n  };\n\n  const onChange = (e) => {\n    setLoginData({ ...loginData, [e.target.name]: e.target.value });\n  };\n\n  return localStorage.token ? (\n    <Spinner />\n  ) : (\n      <div>\n        <div className=\"d-flex align-items-center login-card auth px-0\">\n          <div className=\"row w-100 mx-0\">\n            <div className=\"col-lg-8 mx-auto\">\n              <div className=\"card text-left py-5 px-4 px-sm-5\">\n                <div className=\"brand-logo\">\n                  <img\n                    src={require(\"../../../assets/images/halo_logo.png\")}\n                    alt=\"logo\"\n                  />\n                </div>\n                <h4>Halo Payroll Dashboard</h4>\n                <h6 className=\"font-weight-light\">Sign in to continue.</h6>\n                <Form className=\"pt-3\" onSubmit={onSubmit}>\n                  <Form.Group className=\"d-flex search-field\">\n                    <Form.Control\n                      type=\"email\"\n                      name=\"email\"\n                      value={email}\n                      onChange={onChange}\n                      placeholder=\"Username\"\n                      size=\"lg\"\n                      className=\"h-auto\"\n                    />\n                  </Form.Group>\n                  <Form.Group className=\"d-flex search-field\">\n                    <Form.Control\n                      type=\"password\"\n                      name=\"password\"\n                      value={password}\n                      onChange={onChange}\n                      placeholder=\"Password\"\n                      size=\"lg\"\n                      className=\"h-auto\"\n                    />\n                  </Form.Group>\n                  <div className=\"mt-3\">\n                    <button\n                      type=\"submit\"\n                      value=\"login\"\n                      className=\"btn btn-block btn-primary btn-lg font-weight-medium auth-form-btn\"\n                    >\n                      SIGN IN\n                  </button>\n                  </div>\n\n                  <div className=\"text-center mt-4 font-weight-light\">\n                    Don't have an account?{\" \"}\n                    <Link to=\"/register\" className=\"text-primary\">\n                      Create\n                  </Link>\n                  </div>\n                </Form>\n              </div>\n              <Alert />\n            </div>\n\n          </div>\n        </div>\n\n      </div>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { login })(withRouter(Login));\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, Redirect, withRouter } from \"react-router-dom\";\nimport { Form } from \"react-bootstrap\";\nimport { register } from \"../../actions/auth/auth\";\n\nconst Register = ({ register, isAuthenticated, history }) => {\n  const [registerData, setRegisterData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const { name, email, password } = registerData;\n\n  if (isAuthenticated) {\n    history.push('/')\n  }\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    register(name, email, password);\n  };\n\n  const onChange = (e) => {\n    setRegisterData({ ...registerData, [e.target.name]: e.target.value });\n  };\n\n  return (\n    <div>\n      <div className=\"d-flex align-items-center login-card auth px-0\">\n        <div className=\"row w-100 mx-0\">\n          <div className=\"col-lg-8 mx-auto\">\n            <div className=\"card text-left py-5 px-4 px-sm-5\">\n              <div className=\"brand-logo\">\n                <img\n                  src={require(\"../../../assets/images/halo_logo.png\")}\n                  alt=\"logo\"\n                />\n              </div>\n              <h4>Halo Payroll Dashboard</h4>\n              <h6 className=\"font-weight-light\">Sign in to continue.</h6>\n              <Form className=\"pt-6\" onSubmit={onSubmit}>\n                <Form.Group className=\"d-flex search-field\">\n                  <Form.Control\n                    type=\"text\"\n                    name=\"name\"\n                    value={name}\n                    onChange={onChange}\n                    placeholder=\"Username\"\n                    size=\"lg\"\n                    className=\"h-auto\"\n                  />\n                </Form.Group>\n                <Form.Group className=\"d-flex search-field\">\n                  <Form.Control\n                    type=\"email\"\n                    name=\"email\"\n                    value={email}\n                    onChange={onChange}\n                    placeholder=\"Email\"\n                    size=\"lg\"\n                    className=\"h-auto\"\n                  />\n                </Form.Group>\n                <Form.Group className=\"d-flex search-field\">\n                  <Form.Control\n                    type=\"password\"\n                    name=\"password\"\n                    value={password}\n                    onChange={onChange}\n                    placeholder=\"Password\"\n                    size=\"lg\"\n                    className=\"h-auto\"\n                  />\n                </Form.Group>\n                <div className=\"mt-3\">\n                  <button\n                    type=\"submit\"\n                    value=\"login\"\n                    className=\"btn btn-block btn-primary btn-lg font-weight-medium auth-form-btn\"\n                  >\n                    REGISTER ACCOUNT\n                  </button>\n                </div>\n\n                <div className=\"text-center mt-4 font-weight-light\">\n                  Already have an account?{\" \"}\n                  <Link to=\"/login\" className=\"text-primary\">\n                    Login\n                  </Link>\n                </div>\n              </Form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { register })(withRouter(Register));\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport Spinner from '../isLoading/spinner';\nimport { uploadFile } from '../../actions/upload/upload';\nimport { Form } from 'react-bootstrap';\nimport Alerts from \"../alerts/alerts\";\nimport { removeAlert } from '../../actions/alerts';\n\nconst Upload = ({ isLoading, uploadFile }) => {\n    const [uploadData, setUploadData] = useState({\n        selectedFile: null,\n        fileName: null,\n        loading: false\n    });\n\n    const onChangeHandler = e => {\n        setUploadData({\n            selectedFile: e.target.files[0],\n            fileName: e.target.files[0].name\n        });\n    };\n    const onClickHandler = e => {\n        e.preventDefault();\n        setUploadData({ ...uploadData, loading: true })\n        const data = new FormData();\n        data.append(\"file\", uploadData.selectedFile);\n        uploadFile(data);\n    };\n\n    return isLoading ? (\n        <Spinner />\n    ) : (\n            <div className=\"col-12 grid-margin stretch-card\">\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <h4 className=\"card-title\">Upload Payroll File</h4>\n                        <p className=\"card-description\"> Validate the format before uploading </p>\n                        <form>\n                            <Form.Group>\n                                <div className=\"mb-3\">\n                                    <Form.File id=\"formcheck-api-custom\" custom>\n                                        <Form.File.Input name=\"selectedFile\" onChange={onChangeHandler} />\n                                        <Form.File.Label data-browse=\"Upload File\">\n                                            {uploadData.fileName}\n                                        </Form.File.Label>\n                                    </Form.File>\n                                </div>\n                                <Alerts />\n                            </Form.Group>\n                            <button type=\"submit\" className=\"btn btn-primary mr-2\" onClick={onClickHandler}>Submit</button>\n                            <button className=\"btn btn-dark\">Cancel</button>\n                        </form>\n\n                    </div>\n                </div>\n            </div>\n        )\n}\n\nconst mapStateToProps = (state) => ({\n    isLoading: state.auth.loading,\n    uploadFile: state.upload,\n});\n\nexport default connect(mapStateToProps, { uploadFile, removeAlert })(Upload);\n","import { UPLOAD_FILE, SET_ERROR_ALERT, SET_SUCCESS_ALERT } from '../../actionTypes/types';\nimport { loadUser } from '../auth/auth';\nimport axios from 'axios';\n\nexport const uploadFile = (file) => async dispatch => {\n    console.log(\"Uploading file start!\")\n\n    try {\n        const res = await axios.post(\"/payroll/upload\", file);\n\n        dispatch({\n            type: UPLOAD_FILE,\n            payload: res.data\n        })\n        const success = res.data.success[0].msg;\n\n        if (success) {\n            dispatch({\n                type: SET_SUCCESS_ALERT,\n                payload: success\n            })\n        }\n        dispatch(loadUser())\n    } catch (err) {\n\n\n        const error = err.response.data.errors[0].msg;\n\n        if (error) {\n            dispatch({\n                type: SET_ERROR_ALERT,\n                payload: error\n            });\n        }\n        dispatch(loadUser())\n\n    }\n}","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport { Button, Modal } from 'react-bootstrap';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport ToolkitProvider, { Search, CSVExport } from 'react-bootstrap-table2-toolkit';\nimport { deleteById, updateById } from '../../../actions/payroll/payroll';\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\nconst { SearchBar } = Search;\nconst { ExportCSVButton } = CSVExport;\n\nconst EmpSearchTable = ({ payroll, deleteById, updateById }) => {\n    const [confirm, setConfirm] = useState({\n        show: false,\n        id: ''\n    })\n\n    const { show, id } = confirm;\n\n    const onClickHandlerDelete = (cellContent) => {\n        setConfirm({\n            ...confirm,\n            show: true,\n            id: cellContent\n        })\n\n    }\n\n    const onClickHandlerUpdate = (id) => {\n\n        function idMatch(payrollData) {\n            return payrollData._id === id;\n        }\n        const data = payrollData.find(idMatch)\n\n        updateById(id, data);\n\n    }\n\n    const onSubmitHandler = () => {\n        deleteById(id);\n        setConfirm({\n            ...confirm,\n            show: false\n        })\n    }\n\n\n    const columns = [{\n        text: 'ID',\n        dataField: 'EUID',\n        sort: true,\n        editor: {\n            type: Type.TEXT\n        }\n    }, {\n        text: 'Name',\n        dataField: 'EMP',\n        sort: true\n    }, {\n        text: 'Worked Flag',\n        dataField: 'WRKD_FLG',\n        sort: true\n    }, {\n        text: 'Hours Verified Flag',\n        dataField: 'HRS_VER_FLG',\n        sort: true\n    }, {\n        text: 'Bonus Flag',\n        dataField: 'BNS_FLG',\n        sort: true\n    }, {\n        text: 'Timesheet Flag',\n        dataField: 'TIMESHEET_FLG',\n        sort: true\n    }, {\n        text: 'Pickup Pay Flag',\n        dataField: 'PICKUP_PAY_FLG',\n        sort: true\n    }, {\n        text: 'Adjustment Flag',\n        dataField: 'ADJ_FLG',\n        sort: true\n    }, {\n        text: 'Adjustment',\n        dataField: 'ADJUSTMENT',\n        sort: true\n    }, {\n        text: 'Special Rate',\n        dataField: 'SP_RATE',\n        sort: true\n    }, {\n        text: 'Notes',\n        dataField: 'NOTES',\n        sort: true\n    }, {\n        text: 'Regular Hours',\n        dataField: 'REG_HRS',\n        sort: true\n    }, {\n        text: 'Scheduled Hours',\n        dataField: 'SCH_HRS',\n        sort: true\n    }, {\n        text: 'Unverfied Hours',\n        dataField: 'UNVH',\n        sort: true\n    }, {\n        text: 'S',\n        dataField: 'S',\n        sort: true\n    }, {\n        text: 'TS Hours',\n        dataField: 'TS_HRS',\n        sort: true\n    }, {\n        text: 'SUP',\n        dataField: 'SUP',\n        sort: true\n    }, {\n        text: 'SDP',\n        dataField: 'SDP',\n        sort: true\n    }, {\n        text: 'Bonus Hours',\n        dataField: 'BNS_HRS',\n        sort: true\n    }, {\n        text: 'Bonus Rate',\n        dataField: 'BNS_RATE',\n        sort: true\n    }, {\n        text: 'BNS_HRS_B',\n        dataField: 'BNS_HRS_B',\n        sort: true\n    }, {\n        text: 'BNS_RATE_B',\n        dataField: 'BNS_RATE_B',\n        sort: true\n    }, {\n        text: 'BNS_HR_C',\n        dataField: 'BNS_HR_C',\n        sort: true\n    }, {\n        text: 'BNS_RATE_C',\n        dataField: 'BNS_RATE_C',\n        sort: true\n    }, {\n        text: 'BNS_HR_D',\n        dataField: 'BNS_HR_D',\n        sort: true\n    }, {\n        text: 'BNS_RATE_D',\n        dataField: 'BNS_RATE_D',\n        sort: true\n    }, {\n        text: 'PAY_DATE',\n        dataField: 'PAY_DATE',\n        sort: true\n    }, {\n        text: 'UPDATED',\n        dataField: 'UPDATED',\n        sort: true\n    }, {\n        dataField: '_id',\n        text: 'Delete',\n        sort: false,\n        formatter: (cellContent) => {\n            return (\n                <div>\n                    <button className=\"btn btn-dark\" onClick={e => { e.preventDefault(); onClickHandlerDelete(cellContent) }}>\n                        <i className=\"mdi mdi-delete text-danger\"></i>Delete\n                </button>\n                </div>\n            );\n        }\n    }, {\n        dataField: '_id',\n        text: 'Update',\n        sort: false,\n        formatter: (cellContent) => {\n            return (\n                <div>\n                    <button className=\"btn btn-dark\" onClick={e => { e.preventDefault(); onClickHandlerUpdate(cellContent) }}>\n                        <i className=\"mdi mdi-cloud-upload text-warning\"></i>Update\n              </button>\n                </div>\n            );\n        }\n    }\n    ]\n\n    const { loading, payrollData } = payroll;\n\n    const defaultSorted = [{\n        dataField: 'id',\n        order: 'desc'\n    }];\n\n    return loading ? (\n        <h1>Search by Employee ID</h1>\n    ) : (\n            <div>\n                <Modal\n                    show={show}\n                    onHide={() => show(false)}\n                    aria-labelledby=\"example-modal-sizes-title-md\"\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title>Confirm Deletion</Modal.Title>\n                    </Modal.Header>\n\n                    <Modal.Body>\n                        <p>Are you sure you want to delete this record?</p>\n                    </Modal.Body>\n\n                    <Modal.Footer className=\"fleex-wrap\">\n                        <Button variant=\"primary m-2\" onClick={(e) => { e.preventDefault(); onSubmitHandler() }}>Confirm</Button>\n                        <Button variant=\"light m-2\" onClick={(e) => { e.preventDefault(); setConfirm({ ...confirm, show: false }) }}>Cancel</Button>\n                    </Modal.Footer>\n                </Modal>\n\n                <div className=\"page-header\">\n                    <h3 className=\"page-title\">\n                        Employee table\n                    </h3>\n\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <h4 className=\"card-title\">Employee Data</h4>\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        <ToolkitProvider\n                                            keyField=\"id\"\n                                            bootstrap4\n                                            data={payrollData}\n                                            columns={columns}\n                                            search\n\n                                        >\n                                            {\n                                                props => (\n                                                    <div>\n                                                        <ExportCSVButton {...props.csvProps}>\n                                                            <button type=\"button\" className=\"btn download btn-danger btn-rounded btn-icon\">\n                                                                <i className=\"mdi mdi-download\"></i>\n                                                            </button>\n                                                        </ExportCSVButton>\n                                                        <div className=\"d-flex align-items-center\">\n                                                            <p className=\"mb-2 mr-2\">Search in table:</p>\n                                                            <SearchBar {...props.searchProps} />\n                                                        </div>\n                                                        <BootstrapTable\n                                                            cellEdit={cellEditFactory({ mode: 'dbclick' })}\n                                                            defaultSorted={defaultSorted}\n                                                            pagination={paginationFactory()}\n                                                            {...props.baseProps}\n                                                            wrapperClasses=\"table-responsive\"\n                                                            striped={true}\n\n                                                        />\n                                                    </div>\n                                                )\n                                            }\n                                        </ToolkitProvider>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div >\n        )\n}\n\nconst mapStateToProps = (state) => ({\n    payroll: state.payroll,\n})\n\nexport default connect(mapStateToProps, { deleteById, updateById })(EmpSearchTable);\n","import {\n    GET_DATA_BY_DATE,\n    GET_DATA_BY_ID,\n    DELETE_DATA_BY_ID,\n    SET_ERROR_ALERT,\n    SET_SUCCESS_ALERT,\n} from '../../actionTypes/types';\nimport { loadUser } from '../auth/auth';\nimport { removeAlert } from '../alerts';\nimport axios from 'axios';\n\nexport const getPayrollByDate = (date) => async dispatch => {\n    try {\n        const res = await axios.get(`/payroll/records/sheet_date/${date}`);\n        dispatch({\n            type: GET_DATA_BY_DATE,\n            payload: res.data,\n        })\n        dispatch(loadUser());\n    } catch (err) {\n        console.log(err)\n    }\n}\n\nexport const getPayrollById = (id) => async dispatch => {\n    try {\n        const res = await axios.get(`/payroll/records/euid/${id}`)\n        dispatch({\n            type: GET_DATA_BY_ID,\n            payload: res.data,\n        })\n        dispatch(removeAlert());\n        dispatch(loadUser());\n    } catch (err) {\n        console.log(err)\n        const error = err.response.data.errors[0].msg;\n\n        dispatch({\n            type: SET_ERROR_ALERT,\n            payload: error\n        })\n\n        dispatch(loadUser());\n\n    }\n}\n\nexport const saveNewRecord = (data) => async dispatch => {\n    try {\n        const res = await axios.post('/payroll/records/new', data)\n        dispatch({\n            type: SET_SUCCESS_ALERT,\n            payload: res.data.success[0].msg\n        })\n        dispatch(loadUser());\n    } catch (err) {\n        console.log(err)\n        const error = err.response.data.errors[0].msg;\n\n        dispatch({\n            type: SET_ERROR_ALERT,\n            payload: error\n        })\n\n        dispatch(loadUser());\n\n    }\n}\n\nexport const deleteById = (id) => async dispatch => {\n    try {\n        const res = await axios.delete(`/payroll/records/remove/${id}`)\n\n        dispatch({\n            type: SET_SUCCESS_ALERT,\n            payload: res.data.success[0].msg\n        })\n        dispatch(loadUser());\n    } catch (err) {\n        const error = err.response.data.errors[0].msg;\n        dispatch({\n            type: SET_ERROR_ALERT,\n            payload: error\n        })\n\n        dispatch(loadUser());\n    }\n}\n\nexport const updateById = (id, data) => async dispatch => {\n    try {\n        const res = await axios.put(`/payroll/records/update/${id}`, data);\n        dispatch({\n            type: SET_SUCCESS_ALERT,\n            payload: res.data.success[0].msg\n        })\n        dispatch(loadUser());\n    } catch (err) {\n        const error = err.response.data.errors[0].msg;\n        dispatch({\n            type: SET_ERROR_ALERT,\n            payload: error\n        })\n\n        dispatch(loadUser());\n    }\n}","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Widget1 from \"../dashboard/widgets/widget_1\";\nimport Widget2 from \"../dashboard/widgets/widget_2\";\nimport Widget3 from \"../dashboard/widgets/widget_3\";\nimport Widget4 from \"../dashboard/widgets/widget_4\";\nimport Spinner from \"../isLoading/spinner\";\nimport EmpSearchTable from \"../dashboard/widgets/empSearchTable\";\nimport Alerts from \"../alerts/alerts\";\n\nconst Employees = ({ auth, payroll }) => {\n\n    return auth.loading === true ? (\n        <Spinner></Spinner>\n    ) : (\n            <div>\n                <div className=\"row\">\n                    <Widget1 payroll={payroll} />\n                    <Widget2 payroll={payroll} />\n                    <Widget3 payroll={payroll} />\n                    <Widget4 payroll={payroll} />\n                </div>\n                <EmpSearchTable />\n                <Alerts />\n            </div>\n        )\n}\n\nconst mapStateToProps = (state) => ({\n    payroll: state.payroll,\n    auth: state.auth,\n})\n\nexport default connect(mapStateToProps)(Employees)\n","import React, { useState } from 'react';\nimport { Dropdown } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { getPayrollByDate } from '../../../actions/payroll/payroll';\nconst PaydateDropdown = ({ paydates, getPayrollByDate }) => {\n    const [selectedDate, setSelectedDate] = useState({\n        date: null,\n    })\n    const onClickHandler = (e) => {\n        e.preventDefault();\n        getPayrollByDate(e.target.name)\n        setSelectedDate({\n            ...selectedDate,\n            date: e.target.name\n        })\n    }\n\n    const listDates = paydates.map(record => {\n        return record.map(item => {\n            return <Dropdown.Item name={item.PAYDATE} key={item._id} onClick={onClickHandler}>{item.PAYDATE}</Dropdown.Item>\n        })\n    });\n\n    return (\n\n        <Dropdown>\n            <Dropdown.Toggle variant=\"btn btn-outline-primary\" id=\"dropdownMenuOutlineButton1\">\n                {selectedDate.date === null ? 'Pay Date Options' : selectedDate.date}\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n                {listDates}\n            </Dropdown.Menu>\n        </Dropdown>\n\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    paydates: state.paydates\n})\nexport default connect(mapStateToProps, { getPayrollByDate })(PaydateDropdown);\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux';\nimport { getPayrollById } from '../../../actions/payroll/payroll';\n\nconst PayrollSearch = ({ getPayrollById }) => {\n    const [empId, setEmpId] = useState({\n        id: 0\n    })\n\n    const { id } = empId;\n\n    const onChangeHandler = (e) => {\n        setEmpId({\n            ...empId,\n            id: e.target.value\n        })\n    }\n\n    const enterKeyPressed = (e) => {\n        if (e.key === \"Enter\") {\n            getPayrollById(id);\n            e.preventDefault();\n        }\n    }\n\n    return (\n        <li className=\"nav-item w-100\">\n            <form className=\"nav-link d-lg-flex search\">\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"id\"\n                    placeholder=\"Search Employee Id\"\n                    onChange={onChangeHandler}\n                    onKeyPress={enterKeyPressed} />\n            </form>\n        </li>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    payroll: state.payroll\n})\n\nexport default connect(mapStateToProps, { getPayrollById })(PayrollSearch)\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dropdown } from \"react-bootstrap\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Trans } from \"react-i18next\";\nimport { logout } from \"../../actions/auth/auth\";\nimport { loadDates } from \"../../actions/paydates/paydates\";\nimport PaydateDropdown from \"./paydateDropdown/paydateDropdown\";\nimport PayrollSearch from \"./payrollSearch/payrollSearch\";\n\n\nconst Navbar = ({ auth, logout, loadDates, paydates, history }) => {\n\n  const { location } = history;\n\n  const toggleOffcanvas = () => {\n    document.querySelector(\".sidebar-offcanvas\").classList.toggle(\"active\");\n  }\n\n  useEffect(() => {\n    loadDates();\n  }, [loadDates])\n\n  const logoutUser = (e) => {\n    e.preventDefault();\n    logout();\n  }\n\n  return !auth.isAuthenticated || !auth.user ? (\n    <div></div>\n  ) : (\n      <nav className=\"navbar p-0 fixed-top d-flex flex-row\">\n        <div className=\"navbar-brand-wrapper d-flex d-lg-none align-items-center justify-content-center\">\n          <Link className=\"navbar-brand brand-logo-mini\" to=\"/\">\n            <img\n              src={require(\"../../../assets/images/halo_logo.png\")}\n              alt=\"logo\"\n            />\n          </Link>\n        </div>\n        <div className=\"navbar-menu-wrapper flex-grow d-flex align-items-stretch\">\n          <button\n            className=\"navbar-toggler align-self-center\"\n            type=\"button\"\n            onClick={() => document.body.classList.toggle(\"sidebar-icon-only\")}\n          >\n            <span className=\"mdi mdi-menu\"></span>\n          </button>\n          <ul className=\"navbar-nav w-100\">\n\n            {location.pathname !== \"/\" ? <PayrollSearch /> : <PaydateDropdown />}\n\n          </ul>\n          <ul className=\"navbar-nav navbar-nav-right\">\n            <div as=\"li\" className=\"nav-item d-none d-lg-block\">\n              <div as=\"li\" className=\"nav-item dropdown\"></div>\n              <div className=\"nav-link btn btn-success create-new-button no-caret\">\n                <Link to=\"/upload\" className=\"nav-link\">  + <Trans>Upload Payroll</Trans> </Link>\n              </div>\n            </div>\n\n            <Dropdown alignRight as=\"li\" className=\"nav-item\">\n              <Dropdown.Toggle\n                as=\"a\"\n                className=\"nav-link cursor-pointer no-caret\"\n              >\n                <div className=\"navbar-profile\">\n                  <p className=\"mb-0 d-none d-sm-block navbar-profile-name\">\n                    <Trans>{auth.user.name.toUpperCase()}</Trans>\n                  </p>\n                  <i className=\"mdi mdi-menu-down d-none d-sm-block\"></i>\n                </div>\n              </Dropdown.Toggle>\n\n              <Dropdown.Menu className=\"navbar-dropdown preview-list navbar-profile-dropdown-menu\">\n                <Dropdown.Divider />\n                <Dropdown.Item\n                  href=\"!#\"\n                  onClick={(evt) => evt.preventDefault()}\n                  className=\"preview-item\"\n                >\n                  <div className=\"preview-thumbnail\">\n                    <div className=\"preview-icon bg-dark rounded-circle\">\n                      <i className=\"mdi mdi-logout text-danger\"></i>\n                    </div>\n                  </div>\n                  <div className=\"preview-item-content\">\n                    <p className=\"preview-subject mb-1\" onClick={logoutUser}>\n                      <Link to=\"/login\" className=\"nav-link\"><Trans>Log Out</Trans></Link>\n                    </p>\n                  </div>\n                </Dropdown.Item>\n                <Dropdown.Divider />\n\n              </Dropdown.Menu>\n            </Dropdown>\n          </ul>\n          <button\n            className=\"navbar-toggler navbar-toggler-right d-lg-none align-self-center\"\n            type=\"button\"\n            onClick={toggleOffcanvas}\n          >\n            <span className=\"mdi mdi-format-line-spacing\"></span>\n          </button>\n        </div>\n      </nav>\n    );\n\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  paydates: state.paydates,\n})\n\nexport default connect(mapStateToProps, { logout, loadDates })(withRouter(Navbar));","import { GET_PAY_DATES } from '../../actionTypes/types';\nimport { loadUser } from '../../actions/auth/auth';\nimport axios from 'axios';\n\n\nexport const loadDates = () => async (dispatch) => {\n    try {\n        const res = await axios.get(\"/payroll/records/paydates/all\");\n        dispatch({\n            type: GET_PAY_DATES,\n            payload: res.data\n        })\n        dispatch(loadUser());\n    } catch (err) {\n        console.log(err)\n    }\n}","import React, { useState, useEffect } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Trans } from 'react-i18next';\nimport { logout } from '../../actions/auth/auth';\n\n\nconst Sidebar = (props) => {\n  const { auth } = props;\n\n  const [menuState, setMenuState] = useState({});\n\n\n  const onRouteChanged = () => {\n    document.querySelector(\"#sidebar\").classList.remove(\"active\");\n    Object.keys(menuState).forEach((i) => {\n      setMenuState({ [i]: false });\n    });\n\n    const dropdownPaths = [\n      { path: \"/apps\", state: \"appsMenuOpen\" },\n      { path: \"/basic-ui\", state: \"basicUiMenuOpen\" },\n      { path: \"/advanced-ui\", state: \"advancedUiMenuOpen\" },\n      { path: \"/form-elements\", state: \"formElementsMenuOpen\" },\n      { path: \"/tables\", state: \"tablesMenuOpen\" },\n      { path: \"/maps\", state: \"mapsMenuOpen\" },\n      { path: \"/icons\", state: \"iconsMenuOpen\" },\n      { path: \"/charts\", state: \"chartsMenuOpen\" },\n      { path: \"/user-pages\", state: \"userPagesMenuOpen\" },\n      { path: \"/error-pages\", state: \"errorPagesMenuOpen\" },\n      { path: \"/general-pages\", state: \"generalPagesMenuOpen\" },\n      { path: \"/ecommerce\", state: \"ecommercePagesMenuOpen\" },\n      { path: \"/editors\", state: \"editorsMenuOpen\" },\n    ];\n\n    dropdownPaths.forEach((obj) => {\n      if (isPathActive(obj.path)) {\n        setMenuState({ [obj.state]: true });\n      }\n    });\n  };\n\n  const isPathActive = (path) => {\n    return props.location.pathname.startsWith(path);\n  };\n\n  useEffect(() => {\n    if (auth.user) {\n      onRouteChanged();\n      // add class 'hover-open' to sidebar navitem while hover in sidebar-icon-only menu\n      const body = document.querySelector(\"body\");\n      document.querySelectorAll(\".sidebar .nav-item\").forEach((el) => {\n        el.addEventListener(\"mouseover\", function () {\n          if (body.classList.contains(\"sidebar-icon-only\")) {\n            el.classList.add(\"hover-open\");\n          }\n        });\n        el.addEventListener(\"mouseout\", function () {\n          if (body.classList.contains(\"sidebar-icon-only\")) {\n            el.classList.remove(\"hover-open\");\n          }\n        });\n      });\n    }\n\n  }, []);\n\n  useEffect(() => {\n    if (auth.user) {\n      if (props.location.pathname !== props.history.location.pathname) {\n        onRouteChanged();\n      }\n    }\n\n  }, []);\n\n\n\n  return !auth.isAuthenticated || !auth.user ? (\n    <div></div>\n  ) : (\n      <nav className=\"sidebar sidebar-offcanvas\" id=\"sidebar\">\n        <div className=\"sidebar-brand-wrapper d-none d-lg-flex align-items-center justify-content-center fixed-top\">\n          <a className=\"sidebar-brand brand-logo\" href=\"/\">\n            <img src={require(\"../../../assets/images/halo_logo.png\")} alt=\"logo\" />\n          </a>\n          <a className=\"sidebar-brand brand-logo-mini\" href=\"/\">\n            <img\n              src={require(\"../../../assets/images/halo_logo.png\")}\n              alt=\"logo\"\n            />\n          </a>\n        </div>\n        <ul className=\"nav\">\n          <li className=\"nav-item profile\">\n            <div className=\"profile-desc\">\n              <div className=\"profile-name\">\n                <h5 className=\"mb-0 font-weight-normal\">\n                  <Trans>{auth.user.name}</Trans>\n                </h5>\n                <span>\n                  <Trans>Admin</Trans>\n                </span>\n              </div>\n            </div>\n          </li>\n          <li className=\"nav-item nav-category\">\n            <span className=\"nav-link\">\n              <Trans>Navigation</Trans>\n            </span>\n          </li>\n          <li\n            className={\n              isPathActive(\"/dashboard\")\n                ? \"nav-item menu-items active\"\n                : \"nav-item menu-items\"\n            }\n          >\n            <Link className=\"nav-link\" to=\"/\">\n              <span className=\"menu-icon\">\n                <i className=\"mdi mdi-speedometer\"></i>\n              </span>\n              <span className=\"menu-title\">\n                <Trans>Dashboard</Trans>\n              </span>\n            </Link>\n          </li>\n          <li\n            className={\n              isPathActive(\"/upload\")\n                ? \"nav-item menu-items active\"\n                : \"nav-item menu-items\"\n            }\n          >\n            <Link className=\"nav-link\" to=\"/upload\">\n              <span className=\"menu-icon\">\n                <i className=\"mdi mdi-upload\"></i>\n              </span>\n              <span className=\"menu-title\">Upload</span>\n            </Link>\n          </li>\n\n          <li\n            className={\n              isPathActive(\"/newrecord\")\n                ? \"nav-item menu-items active\"\n                : \"nav-item menu-items\"\n            }\n          >\n            <Link className=\"nav-link\" to=\"/newrecord\">\n              <span className=\"menu-icon\">\n                <i className=\"mdi mdi-account\"></i>\n              </span>\n              <span className=\"menu-title\">\n                <Trans>New Record</Trans>\n              </span>\n            </Link>\n          </li>\n\n          <li\n            className={\n              isPathActive(\"/employees\")\n                ? \"nav-item menu-items active\"\n                : \"nav-item menu-items\"\n            }\n          >\n            <Link className=\"nav-link\" to=\"/employees\">\n              <span className=\"menu-icon\">\n                <i className=\"mdi mdi-account-multiple\"></i>\n              </span>\n              <span className=\"menu-title\">\n                <Trans>Employees</Trans>\n              </span>\n            </Link>\n          </li>\n        </ul>\n      </nav>\n    );\n};\n\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { logout })(withRouter(Sidebar));","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Col, Button } from 'react-bootstrap';\nimport { saveNewRecord } from '../../actions/payroll/payroll';\nimport Spinner from '../isLoading/spinner';\nimport Alerts from '../alerts/alerts';\nimport moment from 'moment';\n\nconst NewRecord = ({ saveNewRecord, isLoading }) => {\n    const [data, setData] = useState({\n        EUID: '',\n        EMP: '',\n        WRKD_FLG: '',\n        HRS_VER_FLG: '',\n        BNS_FLG: '',\n        TIMESHEET_FLG: '',\n        PICKUP_PAY_FLG: '',\n        ADJ_FLG: '',\n        ADJUSTMENT: '',\n        SP_RATE: '',\n        NOTES: '',\n        REG_HRS: '',\n        SCH_HRS: '',\n        UNVH: '',\n        S: '',\n        TS_HRS: '',\n        SUP: '',\n        SDP: '',\n        BNS_HRS: '',\n        BNS_RATE: '',\n        BNS_HRS_B: '',\n        BNS_RATE_B: '',\n        BNS_HR_C: '',\n        BNS_RATE_C: '',\n        BNS_HR_D: '',\n        BNS_RATE_D: '',\n        PAY_DATE: '',\n        UPDATED: moment().format(),\n    })\n\n    const { EUID, EMP, WRKD_FLG, BNS_FLG, HRS_VER_FLG, TIMESHEET_FLG, PICKUP_PAY_FLG, ADJ_FLG, ADJUSTMENT, SP_RATE, NOTES, REG_HRS, SCH_HRS, UNVH, S, TS_HRS,\n        SUP, SDP, BNS_HRS, BNS_RATE, BNS_HRS_B, BNS_RATE_B, BNS_HR_C, BNS_RATE_C, BNS_HR_D, BNS_RATE_D, PAY_DATE, UPDATED } = data;\n\n    const onChangeHandler = (e) => {\n        setData({\n            ...data,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const onSubmitHandler = (e) => {\n        e.preventDefault();\n        saveNewRecord(data)\n    }\n\n\n    return isLoading ? (\n        <Spinner />\n    ) : (\n            <div>\n                <div className=\"page-header\">\n                    <h3 className=\"page-title\">\n                        New Payroll Record\n                    </h3>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-12 grid-margin\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <Form noValidate>\n                                    <Form.Row>\n                                        <Form.Group as={Col} md=\"3\" controlId=\"validationCustom01\">\n                                            <Form.Label>ID</Form.Label>\n                                            <Form.Control\n                                                onChange={onChangeHandler}\n                                                required\n                                                value={EUID}\n                                                name=\"EUID\"\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"3\" controlId=\"validationCustom01\">\n                                            <Form.Label>Name</Form.Label>\n                                            <Form.Control\n                                                required\n                                                onChange={onChangeHandler}\n                                                value={EMP}\n                                                name=\"EMP\"\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\n                                            <Form.Label>WRKD_FLG</Form.Label>\n                                            <Form.Control\n                                                onChange={onChangeHandler}\n                                                value={WRKD_FLG}\n                                                minLength={1}\n                                                maxLength={5}\n                                                name=\"WRKD_FLG\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\n                                            <Form.Label>HRS_VER_FLG</Form.Label>\n                                            <Form.Control\n                                                onChange={onChangeHandler}\n                                                value={HRS_VER_FLG}\n                                                minLength={1}\n                                                maxLength={5}\n                                                name=\"HRS_VER_FLG\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\n                                            <Form.Label>BNS_FLG</Form.Label>\n                                            <Form.Control\n                                                onChange={onChangeHandler}\n                                                minLength={1}\n                                                maxLength={5}\n                                                name=\"BNS_FLG\"\n                                                value={BNS_FLG}\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\n                                            <Form.Label>TIMESHEET_FLG</Form.Label>\n                                            <Form.Control\n                                                onChange={onChangeHandler}\n                                                value={TIMESHEET_FLG}\n                                                minLength={1}\n                                                maxLength={5}\n                                                name=\"TIMESHEET_FLG\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\n                                            <Form.Label>PICKUP_PAY_FLG</Form.Label>\n                                            <Form.Control\n                                                onChange={onChangeHandler}\n                                                value={PICKUP_PAY_FLG}\n                                                minLength={1}\n                                                maxLength={5}\n                                                name=\"PICKUP_PAY_FLG\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\n                                            <Form.Label>ADJ_FLG</Form.Label>\n                                            <Form.Control\n                                                onChange={onChangeHandler}\n                                                value={ADJ_FLG}\n                                                minLength={1}\n                                                maxLength={5}\n                                                name=\"ADJ_FLG\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"4\" controlId=\"validationCustom02\">\n                                            <Form.Label>ADJUSTMENT</Form.Label>\n                                            <Form.Control\n                                                onChange={onChangeHandler}\n                                                value={ADJUSTMENT}\n                                                minLength={1}\n                                                name=\"ADJUSTMENT\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\n                                            <Form.Label>SP_RATE</Form.Label>\n                                            <Form.Control\n                                                onChange={onChangeHandler}\n                                                value={SP_RATE}\n                                                minLength={1}\n                                                name=\"SP_RATE\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"10\" controlId=\"validationCustom02\">\n                                            <Form.Label>NOTES</Form.Label>\n                                            <Form.Control\n                                                onChange={onChangeHandler}\n                                                value={NOTES}\n                                                minLength={1}\n                                                name=\"NOTES\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\n                                            <Form.Label>REG_HRS</Form.Label>\n                                            <Form.Control\n                                                onChange={onChangeHandler}\n                                                value={REG_HRS}\n                                                minLength={1}\n                                                name=\"REG_HRS\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\n                                            <Form.Label>SCH_HRS</Form.Label>\n                                            <Form.Control\n                                                onChange={onChangeHandler}\n                                                value={SCH_HRS}\n                                                minLength={1}\n                                                name=\"SCH_HRS\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\n                                            <Form.Label>UNVH</Form.Label>\n                                            <Form.Control\n                                                onChange={onChangeHandler}\n                                                value={UNVH}\n                                                minLength={1}\n                                                name=\"UNVH\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\n                                            <Form.Label>S</Form.Label>\n                                            <Form.Control\n                                                onChange={onChangeHandler}\n                                                value={S}\n                                                minLength={1}\n                                                name=\"S\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\n                                            <Form.Label>TS_HRS</Form.Label>\n                                            <Form.Control\n                                                onChange={onChangeHandler}\n                                                value={TS_HRS}\n                                                minLength={1}\n                                                name=\"TS_HRS\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\n                                            <Form.Label>SUP</Form.Label>\n                                            <Form.Control\n                                                onChange={onChangeHandler}\n                                                value={SUP}\n                                                minLength={1}\n                                                name=\"SUP\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\n                                            <Form.Label>SDP</Form.Label>\n                                            <Form.Control\n                                                onChange={onChangeHandler}\n                                                value={SDP}\n                                                minLength={1}\n                                                name=\"SDP\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\n                                            <Form.Label>BNS_HRS</Form.Label>\n                                            <Form.Control\n                                                onChange={onChangeHandler}\n                                                value={BNS_HRS}\n                                                minLength={1}\n                                                name=\"BNS_HRS\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\n                                            <Form.Label>BNS_RATE</Form.Label>\n                                            <Form.Control\n                                                onChange={onChangeHandler}\n                                                value={BNS_RATE}\n                                                minLength={1}\n                                                name=\"BNS_RATE\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\n                                            <Form.Label>BNS_HRS_B</Form.Label>\n                                            <Form.Control\n                                                value={BNS_HRS_B}\n                                                onChange={onChangeHandler}\n                                                minLength={1}\n                                                name=\"BNS_HRS_B\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\n                                            <Form.Label>BNS_RATE_B</Form.Label>\n                                            <Form.Control\n                                                value={BNS_RATE_B}\n                                                onChange={onChangeHandler}\n                                                minLength={1}\n                                                name=\"BNS_RATE_B\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\n                                            <Form.Label>BNS_HR_C</Form.Label>\n                                            <Form.Control\n                                                value={BNS_HR_C}\n                                                onChange={onChangeHandler}\n                                                minLength={1}\n                                                name=\"BNS_HR_C\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\n                                            <Form.Label>BNS_RATE_C</Form.Label>\n                                            <Form.Control\n                                                value={BNS_RATE_C}\n                                                onChange={onChangeHandler}\n                                                minLength={1}\n                                                name=\"BNS_RATE_C\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\n                                            <Form.Label>BNS_HR_D</Form.Label>\n                                            <Form.Control\n                                                value={BNS_HR_D}\n                                                onChange={onChangeHandler}\n                                                minLength={1}\n                                                name=\"BNS_HR_D\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\n                                            <Form.Label>BNS_RATE_D</Form.Label>\n                                            <Form.Control\n                                                onChange={onChangeHandler}\n                                                value={BNS_RATE_D}\n                                                minLength={1}\n                                                name=\"BNS_RATE_D\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"4\" controlId=\"validationCustom02\">\n                                            <Form.Label>PAY_DATE</Form.Label>\n                                            <Form.Control\n                                                value={PAY_DATE}\n                                                onChange={onChangeHandler}\n                                                minLength={1}\n                                                name=\"PAY_DATE\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"6\" controlId=\"validationCustom02\">\n                                            <Form.Label>UPDATED</Form.Label>\n                                            <Form.Control\n                                                value={UPDATED}\n                                                onChange={onChangeHandler}\n                                                minLength={1}\n                                                name=\"UPDATED\"\n                                                required\n                                                type=\"text\"\n\n                                            />\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                    </Form.Row>\n                                    <Button type=\"submit\" onClick={onSubmitHandler}>Submit form</Button>\n\n                                </Form>\n\n                            </div>\n                            <Alerts />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n}\n\nconst mapStateToProps = (state) => ({\n    payload: state.payload,\n    isLoading: state.auth.loading,\n})\n\nexport default connect(mapStateToProps, { saveNewRecord })(NewRecord);","import React, { Fragment, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport \"./App.scss\";\nimport PrivateRoute from \"./components/routing/PrivateRoute\";\nimport Landing from \"./components/dashboard/landing\";\nimport Login from \"./components/auth/login\";\nimport Register from \"./components/auth/register\";\nimport Upload from \"./components/upload/upload\";\nimport Employees from \"./components/employees/employees\";\nimport setAuthToken from \"./utils/auth/setAuthToken\";\nimport { loadUser } from \"./actions/auth/auth\";\nimport Navbar from \"./components/navigation/navbar\";\nimport Sidebar from \"./components/navigation/sidebar\";\nimport NewRecord from \"./components/newrecord/newrecord\";\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n\n  console.log(\"This is a test\")\n\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []);\n\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <section className=\"container-scroller\">\n            <Route component={Sidebar} />\n            <div className=\"container-fluid page-body-wrapper\">\n              <Route component={Navbar} />\n              <div className=\"main-panel\">\n                <div className=\"content-wrapper\">\n                  <Switch>\n                    <Route exact path=\"/login\" component={Login} />\n                    <Route exact path=\"/register\" component={Register} />\n                    <Route exact path=\"/\" component={Landing} />\n                    <Route exact path=\"/upload\" component={Upload} />\n                    <Route exact path=\"/employees\" component={Employees} />\n                    <Route exact path=\"/newrecord\" component={NewRecord} />\n                  </Switch>\n                </div>\n              </div>\n            </div>\n          </section>\n        </Fragment>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app/App\";\nimport * as serviceWorker from \"./app/serviceWorker\";\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWAe\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/halo_logo.d1d628d2.png\";"],"sourceRoot":""}